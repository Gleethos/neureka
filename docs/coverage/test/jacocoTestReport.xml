<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="neureka"><sessioninfo id="Gleethos-c3b52ba1" start="1580605643502" dump="1580605680615"/><package name="neureka/acceleration/opencl/utility"><class name="neureka/acceleration/opencl/utility/DeviceQuery" sourcefilename="DeviceQuery.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="query" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="12" covered="414"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="0" covered="86"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInt" desc="(Lorg/jocl/cl_device_id;I)I" line="193"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInts" desc="(Lorg/jocl/cl_device_id;II)[I" line="206"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLong" desc="(Lorg/jocl/cl_device_id;I)J" line="220"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLongs" desc="(Lorg/jocl/cl_device_id;II)[J" line="233"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_device_id;I)Ljava/lang/String;" line="248"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_platform_id;I)Ljava/lang/String;" line="269"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="(Lorg/jocl/cl_device_id;I)J" line="289"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSizes" desc="(Lorg/jocl/cl_device_id;II)[J" line="304"><counter type="INSTRUCTION" missed="17" covered="41"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="580"/><counter type="BRANCH" missed="11" covered="15"/><counter type="LINE" missed="3" covered="114"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/utility/WeakTensorReference" sourcefilename="WeakTensorReference.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DeviceQuery.java"><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="2"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="2"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="3" ci="6" mb="1" cb="1"/><line nr="71" mi="0" ci="9" mb="1" cb="1"/><line nr="72" mi="3" ci="6" mb="1" cb="1"/><line nr="73" mi="3" ci="6" mb="1" cb="1"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="12" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="2" ci="6" mb="1" cb="1"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="1" ci="8" mb="1" cb="1"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="1" cb="1"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="1" cb="1"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="9" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="11" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="11" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="10" mb="0" cb="0"/><line nr="256" mi="0" ci="10" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="7" mb="0" cb="0"/><line nr="273" mi="0" ci="6" mb="0" cb="0"/><line nr="274" mi="0" ci="10" mb="0" cb="0"/><line nr="277" mi="0" ci="10" mb="0" cb="0"/><line nr="289" mi="0" ci="7" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="9" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="1" cb="1"/><line nr="311" mi="8" ci="0" mb="2" cb="0"/><line nr="313" mi="9" ci="0" mb="0" cb="0"/><line nr="318" mi="0" ci="7" mb="0" cb="2"/><line nr="320" mi="0" ci="8" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="580"/><counter type="BRANCH" missed="11" covered="15"/><counter type="LINE" missed="3" covered="114"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeakTensorReference.java"><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="9" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="41" covered="592"/><counter type="BRANCH" missed="13" covered="15"/><counter type="LINE" missed="4" covered="118"/><counter type="COMPLEXITY" missed="13" covered="14"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/framing"><class name="neureka/framing/Index" sourcefilename="Index.java"><method name="&lt;init&gt;" desc="(I)V" line="17"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/util/List;)[I" line="23"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([Ljava/lang/Object;)[I" line="27"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;I)I" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;II)V" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keysOf" desc="(II)Ljava/util/List;" line="41"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$keysOf$0" desc="(ILjava/util/List;Ljava/lang/Object;Ljava/lang/Integer;)V" line="42"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="40"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/framing/Relation" sourcefilename="Relation.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="17"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addParent" desc="(Lneureka/Tsr;)Lneureka/framing/Relation;" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addChild" desc="(Lneureka/Tsr;)Lneureka/framing/Relation;" line="45"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foreachChild" desc="(Ljava/util/function/Consumer;)Lneureka/framing/Relation;" line="59"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasParent" desc="()Z" line="73"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasChildren" desc="()Z" line="77"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="childCount" desc="()I" line="81"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="116" covered="79"/><counter type="BRANCH" missed="25" covered="7"/><counter type="LINE" missed="21" covered="14"/><counter type="COMPLEXITY" missed="16" covered="8"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Relation.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="2" cb="0"/><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="9" ci="0" mb="2" cb="0"/><line nr="20" mi="7" ci="0" mb="2" cb="0"/><line nr="21" mi="8" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="2" cb="0"/><line nr="26" mi="17" ci="0" mb="2" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="2" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="2" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="2"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="17" ci="0" mb="2" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="2" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="6" mb="1" cb="1"/><line nr="77" mi="1" ci="6" mb="1" cb="1"/><line nr="81" mi="2" ci="7" mb="1" cb="1"/><counter type="INSTRUCTION" missed="116" covered="79"/><counter type="BRANCH" missed="25" covered="7"/><counter type="LINE" missed="21" covered="14"/><counter type="COMPLEXITY" missed="16" covered="8"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Index.java"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="14" mb="0" cb="2"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="8" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="21" ci="0" mb="2" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="17" ci="0" mb="2" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="40"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="175" covered="119"/><counter type="BRANCH" missed="29" covered="9"/><counter type="LINE" missed="28" covered="21"/><counter type="COMPLEXITY" missed="22" covered="12"/><counter type="METHOD" missed="6" covered="9"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/optimization/implementations"><class name="neureka/optimization/implementations/Template" sourcefilename="Template.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimize" desc="(Lneureka/Tsr;)V" line="10"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$optimize$0" desc="([DLjava/lang/Integer;)V" line="11"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/optimization/implementations/ADAM" sourcefilename="ADAM.java"><method name="&lt;init&gt;" desc="(Lneureka/Tsr;)V" line="14"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_optimize" desc="()V" line="30"><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="189" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Template.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="12" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ADAM.java"><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="2" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="0" cb="0"/><line nr="22" mi="7" ci="0" mb="0" cb="0"/><line nr="23" mi="7" ci="0" mb="0" cb="0"/><line nr="24" mi="7" ci="0" mb="0" cb="0"/><line nr="25" mi="7" ci="0" mb="0" cb="0"/><line nr="26" mi="7" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="7" ci="0" mb="0" cb="0"/><line nr="32" mi="14" ci="0" mb="0" cb="0"/><line nr="34" mi="15" ci="0" mb="0" cb="0"/><line nr="35" mi="15" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="10" ci="0" mb="0" cb="0"/><line nr="41" mi="10" ci="0" mb="0" cb="0"/><line nr="43" mi="17" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="14" ci="0" mb="0" cb="0"/><line nr="47" mi="10" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="189" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="208" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="neureka/calculus/factory"><class name="neureka/calculus/factory/AbstractFunction$exec" sourcefilename="AbstractFunction.java"><method name="&lt;init&gt;" desc="()V" line="469"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foreach" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/calculus/factory/AbstractFunction$exec$Actor;)V" line="476"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reLu" desc="(DZ)D" line="487"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sigmoid" desc="(DZ)D" line="507"><counter type="INSTRUCTION" missed="21" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tanh" desc="(DZ)D" line="517"><counter type="INSTRUCTION" missed="14" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quadratic" desc="(DZ)D" line="527"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ligmoid" desc="(DZ)D" line="537"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linear" desc="(DZ)D" line="547"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gaussian" desc="(DZ)D" line="557"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="absolute" desc="(DZ)D" line="567"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sinus" desc="(DZ)D" line="577"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cosinus" desc="(DZ)D" line="587"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="summation" desc="([DIILjava/util/ArrayList;)D" line="597"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="summation" desc="([DILjava/util/ArrayList;)D" line="614"><counter type="INSTRUCTION" missed="14" covered="61"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PI" desc="([DIILjava/util/ArrayList;)D" line="644"><counter type="INSTRUCTION" missed="64" covered="30"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="9" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PI" desc="([DILjava/util/ArrayList;)D" line="671"><counter type="INSTRUCTION" missed="7" covered="86"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="power" desc="([DIILjava/util/ArrayList;)D" line="704"><counter type="INSTRUCTION" missed="122" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="power" desc="([DILjava/util/ArrayList;)D" line="731"><counter type="INSTRUCTION" missed="6" covered="127"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="division" desc="([DIILjava/util/ArrayList;)D" line="763"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="division" desc="([DILjava/util/ArrayList;)D" line="786"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplication" desc="([DIILjava/util/ArrayList;)D" line="814"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplication" desc="([DILjava/util/ArrayList;)D" line="838"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idy" desc="([DILjava/util/ArrayList;)D" line="865"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="modulo" desc="([DIILjava/util/ArrayList;)D" line="875"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="modulo" desc="([DILjava/util/ArrayList;)D" line="889"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtraction" desc="([DIILjava/util/ArrayList;)D" line="904"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtraction" desc="([DILjava/util/ArrayList;)D" line="926"><counter type="INSTRUCTION" missed="35" covered="30"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addition" desc="([DIILjava/util/ArrayList;)D" line="949"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addition" desc="([DILjava/util/ArrayList;)D" line="967"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$foreach$0" desc="(Lneureka/calculus/factory/AbstractFunction$exec$Actor;[D[DLjava/lang/Integer;)V" line="478"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="607" covered="860"/><counter type="BRANCH" missed="72" covered="76"/><counter type="LINE" missed="103" covered="160"/><counter type="COMPLEXITY" missed="55" covered="49"/><counter type="METHOD" missed="14" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/AbstractFunction$exec$Actor" sourcefilename="AbstractFunction.java"/><class name="neureka/calculus/factory/AbstractFunction" sourcefilename="AbstractFunction.java"><method name="&lt;init&gt;" desc="(IZLjava/util/ArrayList;Z)V" line="27"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFlat" desc="()Z" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doesAD" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="id" desc="()I" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="14" covered="196"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dependsOn" desc="(I)Z" line="109"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getADAgent" desc="([Lneureka/Tsr;IZ)Lneureka/autograd/ADAgent;" line="151"><counter type="INSTRUCTION" missed="7" covered="79"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_tensor_activation" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="204"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execute" desc="([Lneureka/Tsr;IILneureka/acceleration/Device;)Lneureka/Tsr;" line="221"><counter type="INSTRUCTION" missed="32" covered="214"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="7" covered="24"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execution" desc="([Lneureka/Tsr;IILneureka/acceleration/Device;)Lneureka/Tsr;" line="265"><counter type="INSTRUCTION" missed="22" covered="374"/><counter type="BRANCH" missed="4" covered="48"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="3" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_apply" desc="(Lneureka/acceleration/Device;ILjava/util/function/Supplier;)Lneureka/Tsr;" line="346"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_device" desc="([Lneureka/Tsr;)Lneureka/acceleration/Device;" line="365"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_src_acti" desc="([Lneureka/Tsr;III)[Lneureka/Tsr;" line="373"><counter type="INSTRUCTION" missed="27" covered="109"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_shareGuestDevice" desc="([Lneureka/Tsr;)Z" line="397"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_scalar_activation" desc="(DZ)D" line="417"><counter type="INSTRUCTION" missed="22" covered="32"/><counter type="BRANCH" missed="6" covered="5"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_scalar_activation" desc="([DII)D" line="445"><counter type="INSTRUCTION" missed="59" covered="99"/><counter type="BRANCH" missed="12" covered="18"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="9" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_execute$16" desc="([Lneureka/Tsr;IILneureka/acceleration/Device;)Lneureka/Tsr;" line="260"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_tensor_activation$15" desc="([Lneureka/Tsr;IILneureka/acceleration/Device;)Lneureka/Tsr;" line="213"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_tensor_activation$14" desc="([Lneureka/Tsr;IILneureka/acceleration/Device;)Lneureka/Tsr;" line="207"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgent$13" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="189"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgent$12" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="188"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgent$11" desc="()Lneureka/Tsr;" line="187"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgent$10" desc="(Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="182"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgent$9" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/Tsr;" line="181"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgent$8" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="180"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgent$7" desc="(Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="173"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgent$6" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/Tsr;" line="172"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgent$5" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="171"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgent$4" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="164"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgent$3" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="163"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgent$2" desc="()Lneureka/Tsr;" line="162"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgent$1" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/Tsr;" line="155"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgent$0" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="154"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="143"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="248" covered="1456"/><counter type="BRANCH" missed="38" covered="183"/><counter type="LINE" missed="31" covered="184"/><counter type="COMPLEXITY" missed="40" covered="115"/><counter type="METHOD" missed="9" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractFunction.java"><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="13" mb="0" cb="4"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="13" mb="1" cb="3"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="14" mb="0" cb="2"/><line nr="70" mi="0" ci="9" mb="0" cb="2"/><line nr="71" mi="0" ci="5" mb="1" cb="1"/><line nr="72" mi="0" ci="8" mb="0" cb="2"/><line nr="73" mi="0" ci="7" mb="0" cb="2"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="1" cb="1"/><line nr="78" mi="11" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="2"/><line nr="86" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="9" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="16" mb="0" cb="4"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="16" mb="0" cb="2"/><line nr="100" mi="0" ci="13" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="11" mb="1" cb="1"/><line nr="110" mi="0" ci="6" mb="0" cb="2"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="2"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="9" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="13" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="2"/><line nr="161" mi="0" ci="9" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="12" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="12" mb="0" cb="0"/><line nr="167" mi="0" ci="10" mb="1" cb="3"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="10" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="13" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="13" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="1" cb="1"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="10" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="13" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="23" mb="0" cb="0"/><line nr="186" mi="7" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="2"/><line nr="207" mi="0" ci="18" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="4"/><line nr="213" mi="0" ci="20" mb="0" cb="0"/><line nr="215" mi="0" ci="7" mb="0" cb="0"/><line nr="221" mi="0" ci="8" mb="0" cb="2"/><line nr="222" mi="0" ci="10" mb="0" cb="0"/><line nr="223" mi="0" ci="10" mb="0" cb="0"/><line nr="224" mi="0" ci="13" mb="0" cb="2"/><line nr="225" mi="0" ci="15" mb="0" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="18" mb="0" cb="4"/><line nr="230" mi="0" ci="2" mb="1" cb="1"/><line nr="231" mi="0" ci="7" mb="0" cb="0"/><line nr="232" mi="0" ci="12" mb="0" cb="0"/><line nr="233" mi="0" ci="12" mb="0" cb="0"/><line nr="234" mi="0" ci="8" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="0"/><line nr="237" mi="0" ci="13" mb="0" cb="2"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="8" mb="0" cb="2"/><line nr="242" mi="0" ci="7" mb="0" cb="0"/><line nr="243" mi="0" ci="11" mb="0" cb="2"/><line nr="244" mi="0" ci="13" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="1" cb="1"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="248" mi="8" ci="0" mb="2" cb="0"/><line nr="249" mi="4" ci="0" mb="2" cb="0"/><line nr="250" mi="7" ci="0" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="18" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="1" cb="5"/><line nr="266" mi="0" ci="5" mb="0" cb="2"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="7" mb="0" cb="0"/><line nr="269" mi="0" ci="8" mb="0" cb="2"/><line nr="270" mi="0" ci="17" mb="0" cb="2"/><line nr="272" mi="0" ci="7" mb="0" cb="0"/><line nr="273" mi="0" ci="5" mb="0" cb="2"/><line nr="274" mi="0" ci="11" mb="0" cb="0"/><line nr="279" mi="0" ci="12" mb="0" cb="2"/><line nr="280" mi="0" ci="7" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="2"/><line nr="286" mi="0" ci="5" mb="0" cb="2"/><line nr="287" mi="0" ci="9" mb="0" cb="2"/><line nr="288" mi="0" ci="14" mb="0" cb="0"/><line nr="291" mi="0" ci="8" mb="0" cb="2"/><line nr="292" mi="0" ci="27" mb="0" cb="2"/><line nr="297" mi="0" ci="4" mb="0" cb="2"/><line nr="298" mi="0" ci="11" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="5" mb="0" cb="2"/><line nr="306" mi="0" ci="9" mb="0" cb="2"/><line nr="307" mi="0" ci="13" mb="0" cb="0"/><line nr="310" mi="0" ci="8" mb="0" cb="2"/><line nr="311" mi="0" ci="25" mb="0" cb="2"/><line nr="315" mi="0" ci="9" mb="0" cb="2"/><line nr="316" mi="0" ci="13" mb="0" cb="4"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="7" mb="0" cb="0"/><line nr="325" mi="0" ci="17" mb="0" cb="0"/><line nr="326" mi="0" ci="11" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="2"/><line nr="330" mi="0" ci="6" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="1" cb="1"/><line nr="332" mi="0" ci="22" mb="0" cb="2"/><line nr="334" mi="22" ci="0" mb="2" cb="0"/><line nr="336" mi="0" ci="8" mb="0" cb="0"/><line nr="338" mi="0" ci="7" mb="0" cb="0"/><line nr="339" mi="0" ci="7" mb="0" cb="0"/><line nr="342" mi="0" ci="12" mb="0" cb="2"/><line nr="346" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="2"/><line nr="348" mi="0" ci="10" mb="0" cb="2"/><line nr="349" mi="0" ci="12" mb="0" cb="2"/><line nr="350" mi="0" ci="2" mb="0" cb="2"/><line nr="351" mi="0" ci="2" mb="0" cb="2"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="26" mb="0" cb="0"/><line nr="359" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="0" cb="0"/><line nr="365" mi="0" ci="7" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="0"/><line nr="367" mi="0" ci="14" mb="0" cb="4"/><line nr="368" mi="0" ci="8" mb="1" cb="3"/><line nr="369" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="0" ci="7" mb="0" cb="0"/><line nr="375" mi="0" ci="8" mb="0" cb="2"/><line nr="376" mi="0" ci="8" mb="0" cb="2"/><line nr="377" mi="0" ci="2" mb="1" cb="1"/><line nr="378" mi="0" ci="26" mb="0" cb="2"/><line nr="380" mi="27" ci="0" mb="2" cb="0"/><line nr="382" mi="0" ci="9" mb="0" cb="2"/><line nr="385" mi="0" ci="8" mb="0" cb="2"/><line nr="386" mi="0" ci="4" mb="0" cb="2"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="0" ci="2" mb="0" cb="2"/><line nr="389" mi="0" ci="13" mb="0" cb="0"/><line nr="390" mi="0" ci="16" mb="0" cb="0"/><line nr="393" mi="0" ci="2" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="0" ci="2" mb="0" cb="0"/><line nr="399" mi="0" ci="8" mb="0" cb="2"/><line nr="400" mi="0" ci="14" mb="0" cb="2"/><line nr="402" mi="0" ci="2" mb="0" cb="2"/><line nr="403" mi="0" ci="9" mb="0" cb="2"/><line nr="404" mi="0" ci="18" mb="0" cb="6"/><line nr="407" mi="0" ci="2" mb="0" cb="0"/><line nr="409" mi="0" ci="12" mb="0" cb="6"/><line nr="410" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="12" mb="6" cb="5"/><line nr="419" mi="4" ci="0" mb="0" cb="0"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="4" mb="0" cb="0"/><line nr="425" mi="4" ci="0" mb="0" cb="0"/><line nr="427" mi="0" ci="4" mb="0" cb="0"/><line nr="429" mi="4" ci="0" mb="0" cb="0"/><line nr="431" mi="4" ci="0" mb="0" cb="0"/><line nr="433" mi="4" ci="0" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="437" mi="0" ci="4" mb="0" cb="0"/><line nr="439" mi="2" ci="0" mb="0" cb="0"/><line nr="445" mi="0" ci="12" mb="3" cb="7"/><line nr="447" mi="6" ci="9" mb="1" cb="1"/><line nr="449" mi="0" ci="15" mb="0" cb="2"/><line nr="451" mi="6" ci="9" mb="1" cb="1"/><line nr="453" mi="0" ci="15" mb="0" cb="2"/><line nr="455" mi="0" ci="15" mb="0" cb="2"/><line nr="457" mi="15" ci="0" mb="2" cb="0"/><line nr="459" mi="6" ci="9" mb="1" cb="1"/><line nr="461" mi="0" ci="15" mb="0" cb="2"/><line nr="463" mi="15" ci="0" mb="2" cb="0"/><line nr="465" mi="11" ci="0" mb="2" cb="0"/><line nr="469" mi="3" ci="0" mb="0" cb="0"/><line nr="476" mi="10" ci="0" mb="2" cb="0"/><line nr="477" mi="10" ci="0" mb="2" cb="0"/><line nr="478" mi="13" ci="0" mb="0" cb="0"/><line nr="479" mi="4" ci="0" mb="0" cb="0"/><line nr="480" mi="4" ci="0" mb="0" cb="0"/><line nr="481" mi="1" ci="0" mb="0" cb="0"/><line nr="487" mi="2" ci="0" mb="2" cb="0"/><line nr="488" mi="4" ci="0" mb="2" cb="0"/><line nr="489" mi="3" ci="0" mb="0" cb="0"/><line nr="491" mi="4" ci="0" mb="0" cb="0"/><line nr="493" mi="2" ci="0" mb="0" cb="0"/><line nr="495" mi="4" ci="0" mb="2" cb="0"/><line nr="496" mi="3" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="2" ci="0" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="1" cb="1"/><line nr="508" mi="0" ci="9" mb="0" cb="0"/><line nr="510" mi="21" ci="0" mb="0" cb="0"/><line nr="517" mi="0" ci="2" mb="1" cb="1"/><line nr="518" mi="0" ci="10" mb="0" cb="0"/><line nr="520" mi="14" ci="0" mb="0" cb="0"/><line nr="527" mi="2" ci="0" mb="2" cb="0"/><line nr="528" mi="4" ci="0" mb="0" cb="0"/><line nr="530" mi="4" ci="0" mb="0" cb="0"/><line nr="537" mi="0" ci="2" mb="0" cb="2"/><line nr="538" mi="0" ci="7" mb="0" cb="0"/><line nr="540" mi="0" ci="4" mb="0" cb="0"/><line nr="547" mi="2" ci="0" mb="2" cb="0"/><line nr="548" mi="2" ci="0" mb="0" cb="0"/><line nr="550" mi="2" ci="0" mb="0" cb="0"/><line nr="557" mi="2" ci="0" mb="2" cb="0"/><line nr="558" mi="7" ci="0" mb="0" cb="0"/><line nr="560" mi="11" ci="0" mb="0" cb="0"/><line nr="567" mi="2" ci="0" mb="2" cb="0"/><line nr="568" mi="3" ci="0" mb="0" cb="0"/><line nr="570" mi="8" ci="0" mb="2" cb="0"/><line nr="577" mi="0" ci="2" mb="0" cb="2"/><line nr="578" mi="0" ci="3" mb="0" cb="0"/><line nr="580" mi="0" ci="3" mb="0" cb="0"/><line nr="587" mi="0" ci="2" mb="0" cb="2"/><line nr="588" mi="0" ci="3" mb="0" cb="0"/><line nr="590" mi="0" ci="4" mb="0" cb="0"/><line nr="597" mi="2" ci="0" mb="2" cb="0"/><line nr="598" mi="2" ci="0" mb="0" cb="0"/><line nr="599" mi="2" ci="0" mb="0" cb="0"/><line nr="600" mi="8" ci="0" mb="2" cb="0"/><line nr="601" mi="10" ci="0" mb="0" cb="0"/><line nr="602" mi="2" ci="0" mb="0" cb="0"/><line nr="604" mi="2" ci="0" mb="2" cb="0"/><line nr="605" mi="7" ci="0" mb="0" cb="0"/><line nr="607" mi="2" ci="0" mb="0" cb="0"/><line nr="609" mi="9" ci="0" mb="0" cb="0"/><line nr="614" mi="0" ci="2" mb="0" cb="2"/><line nr="615" mi="0" ci="2" mb="0" cb="0"/><line nr="616" mi="0" ci="2" mb="0" cb="0"/><line nr="617" mi="0" ci="8" mb="0" cb="2"/><line nr="618" mi="0" ci="10" mb="0" cb="0"/><line nr="619" mi="0" ci="2" mb="0" cb="0"/><line nr="621" mi="0" ci="2" mb="1" cb="1"/><line nr="622" mi="7" ci="0" mb="0" cb="0"/><line nr="624" mi="0" ci="2" mb="0" cb="0"/><line nr="626" mi="0" ci="2" mb="0" cb="0"/><line nr="627" mi="0" ci="2" mb="0" cb="0"/><line nr="628" mi="0" ci="8" mb="0" cb="2"/><line nr="629" mi="0" ci="9" mb="0" cb="0"/><line nr="630" mi="0" ci="4" mb="0" cb="0"/><line nr="631" mi="0" ci="2" mb="0" cb="0"/><line nr="633" mi="0" ci="2" mb="1" cb="1"/><line nr="634" mi="7" ci="0" mb="0" cb="0"/><line nr="636" mi="0" ci="2" mb="0" cb="0"/><line nr="644" mi="0" ci="2" mb="1" cb="1"/><line nr="645" mi="0" ci="2" mb="0" cb="0"/><line nr="646" mi="0" ci="2" mb="0" cb="0"/><line nr="647" mi="0" ci="8" mb="0" cb="2"/><line nr="648" mi="0" ci="10" mb="0" cb="0"/><line nr="649" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="0" ci="2" mb="1" cb="1"/><line nr="652" mi="8" ci="0" mb="0" cb="0"/><line nr="654" mi="0" ci="2" mb="0" cb="0"/><line nr="657" mi="8" ci="0" mb="0" cb="0"/><line nr="658" mi="9" ci="0" mb="0" cb="0"/><line nr="659" mi="8" ci="0" mb="2" cb="0"/><line nr="660" mi="8" ci="0" mb="0" cb="0"/><line nr="661" mi="9" ci="0" mb="0" cb="0"/><line nr="662" mi="8" ci="0" mb="0" cb="0"/><line nr="663" mi="4" ci="0" mb="0" cb="0"/><line nr="665" mi="2" ci="0" mb="0" cb="0"/><line nr="671" mi="0" ci="2" mb="0" cb="2"/><line nr="672" mi="0" ci="2" mb="0" cb="0"/><line nr="673" mi="0" ci="2" mb="0" cb="0"/><line nr="674" mi="0" ci="8" mb="0" cb="2"/><line nr="676" mi="0" ci="10" mb="0" cb="0"/><line nr="677" mi="0" ci="2" mb="0" cb="0"/><line nr="680" mi="0" ci="2" mb="1" cb="1"/><line nr="681" mi="7" ci="0" mb="0" cb="0"/><line nr="683" mi="0" ci="2" mb="0" cb="0"/><line nr="686" mi="0" ci="8" mb="0" cb="0"/><line nr="687" mi="0" ci="9" mb="0" cb="0"/><line nr="688" mi="0" ci="8" mb="0" cb="2"/><line nr="689" mi="0" ci="8" mb="0" cb="0"/><line nr="690" mi="0" ci="9" mb="0" cb="0"/><line nr="691" mi="0" ci="8" mb="0" cb="0"/><line nr="692" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="2" mb="0" cb="0"/><line nr="704" mi="2" ci="0" mb="2" cb="0"/><line nr="705" mi="8" ci="0" mb="0" cb="0"/><line nr="706" mi="8" ci="0" mb="2" cb="0"/><line nr="707" mi="8" ci="0" mb="0" cb="0"/><line nr="708" mi="4" ci="0" mb="0" cb="0"/><line nr="710" mi="2" ci="0" mb="0" cb="0"/><line nr="712" mi="2" ci="0" mb="0" cb="0"/><line nr="713" mi="8" ci="0" mb="2" cb="0"/><line nr="714" mi="2" ci="0" mb="0" cb="0"/><line nr="715" mi="8" ci="0" mb="2" cb="0"/><line nr="716" mi="10" ci="0" mb="0" cb="0"/><line nr="718" mi="2" ci="0" mb="2" cb="0"/><line nr="719" mi="26" ci="0" mb="0" cb="0"/><line nr="721" mi="8" ci="0" mb="0" cb="0"/><line nr="722" mi="22" ci="0" mb="2" cb="0"/><line nr="725" mi="2" ci="0" mb="0" cb="0"/><line nr="731" mi="0" ci="2" mb="0" cb="2"/><line nr="732" mi="0" ci="7" mb="0" cb="0"/><line nr="733" mi="0" ci="8" mb="0" cb="2"/><line nr="734" mi="0" ci="7" mb="0" cb="0"/><line nr="735" mi="0" ci="4" mb="0" cb="0"/><line nr="737" mi="0" ci="2" mb="0" cb="0"/><line nr="739" mi="0" ci="2" mb="0" cb="0"/><line nr="740" mi="0" ci="2" mb="0" cb="0"/><line nr="741" mi="0" ci="2" mb="0" cb="0"/><line nr="742" mi="0" ci="8" mb="0" cb="2"/><line nr="743" mi="0" ci="2" mb="0" cb="0"/><line nr="744" mi="0" ci="7" mb="0" cb="0"/><line nr="745" mi="0" ci="8" mb="0" cb="2"/><line nr="746" mi="5" ci="3" mb="1" cb="1"/><line nr="747" mi="0" ci="10" mb="0" cb="0"/><line nr="749" mi="0" ci="4" mb="0" cb="0"/><line nr="750" mi="0" ci="4" mb="0" cb="0"/><line nr="752" mi="0" ci="2" mb="0" cb="0"/><line nr="753" mi="0" ci="7" mb="0" cb="0"/><line nr="754" mi="0" ci="18" mb="0" cb="0"/><line nr="755" mi="1" ci="16" mb="1" cb="1"/><line nr="756" mi="0" ci="2" mb="0" cb="0"/><line nr="763" mi="0" ci="2" mb="0" cb="2"/><line nr="764" mi="0" ci="8" mb="0" cb="0"/><line nr="765" mi="0" ci="8" mb="0" cb="2"/><line nr="766" mi="0" ci="8" mb="0" cb="0"/><line nr="767" mi="0" ci="4" mb="0" cb="0"/><line nr="769" mi="0" ci="2" mb="0" cb="0"/><line nr="772" mi="0" ci="8" mb="0" cb="0"/><line nr="773" mi="0" ci="9" mb="0" cb="0"/><line nr="774" mi="0" ci="10" mb="0" cb="2"/><line nr="775" mi="0" ci="10" mb="0" cb="0"/><line nr="776" mi="0" ci="11" mb="0" cb="0"/><line nr="777" mi="0" ci="12" mb="0" cb="0"/><line nr="778" mi="0" ci="4" mb="0" cb="0"/><line nr="780" mi="0" ci="2" mb="0" cb="0"/><line nr="786" mi="0" ci="2" mb="0" cb="2"/><line nr="787" mi="0" ci="7" mb="0" cb="0"/><line nr="788" mi="0" ci="8" mb="0" cb="2"/><line nr="789" mi="0" ci="7" mb="0" cb="0"/><line nr="790" mi="0" ci="4" mb="0" cb="0"/><line nr="792" mi="0" ci="2" mb="0" cb="0"/><line nr="794" mi="0" ci="2" mb="0" cb="0"/><line nr="795" mi="0" ci="7" mb="0" cb="0"/><line nr="796" mi="0" ci="8" mb="0" cb="0"/><line nr="798" mi="0" ci="10" mb="0" cb="2"/><line nr="800" mi="0" ci="9" mb="0" cb="0"/><line nr="801" mi="0" ci="10" mb="0" cb="0"/><line nr="802" mi="0" ci="2" mb="0" cb="0"/><line nr="803" mi="0" ci="2" mb="0" cb="0"/><line nr="804" mi="0" ci="12" mb="0" cb="0"/><line nr="805" mi="0" ci="4" mb="0" cb="0"/><line nr="807" mi="0" ci="2" mb="0" cb="0"/><line nr="814" mi="0" ci="2" mb="0" cb="2"/><line nr="815" mi="0" ci="8" mb="0" cb="0"/><line nr="816" mi="0" ci="8" mb="0" cb="2"/><line nr="817" mi="0" ci="8" mb="0" cb="0"/><line nr="818" mi="0" ci="4" mb="0" cb="0"/><line nr="820" mi="0" ci="2" mb="0" cb="0"/><line nr="823" mi="0" ci="8" mb="0" cb="0"/><line nr="824" mi="0" ci="9" mb="0" cb="0"/><line nr="826" mi="0" ci="8" mb="0" cb="2"/><line nr="827" mi="0" ci="8" mb="0" cb="0"/><line nr="828" mi="0" ci="9" mb="0" cb="0"/><line nr="829" mi="0" ci="8" mb="0" cb="0"/><line nr="830" mi="0" ci="4" mb="0" cb="0"/><line nr="832" mi="0" ci="2" mb="0" cb="0"/><line nr="838" mi="0" ci="2" mb="0" cb="2"/><line nr="839" mi="0" ci="7" mb="0" cb="0"/><line nr="840" mi="0" ci="8" mb="0" cb="2"/><line nr="841" mi="0" ci="7" mb="0" cb="0"/><line nr="842" mi="0" ci="4" mb="0" cb="0"/><line nr="844" mi="0" ci="2" mb="0" cb="0"/><line nr="847" mi="0" ci="7" mb="0" cb="0"/><line nr="848" mi="0" ci="8" mb="0" cb="0"/><line nr="849" mi="0" ci="8" mb="0" cb="2"/><line nr="850" mi="0" ci="7" mb="0" cb="0"/><line nr="851" mi="0" ci="8" mb="0" cb="0"/><line nr="853" mi="0" ci="8" mb="0" cb="0"/><line nr="854" mi="0" ci="4" mb="0" cb="0"/><line nr="856" mi="0" ci="2" mb="0" cb="0"/><line nr="865" mi="2" ci="0" mb="2" cb="0"/><line nr="866" mi="6" ci="0" mb="0" cb="0"/><line nr="869" mi="2" ci="0" mb="0" cb="0"/><line nr="875" mi="2" ci="0" mb="2" cb="0"/><line nr="876" mi="8" ci="0" mb="0" cb="0"/><line nr="877" mi="8" ci="0" mb="2" cb="0"/><line nr="878" mi="8" ci="0" mb="0" cb="0"/><line nr="879" mi="4" ci="0" mb="0" cb="0"/><line nr="881" mi="2" ci="0" mb="0" cb="0"/><line nr="883" mi="9" ci="0" mb="0" cb="0"/><line nr="889" mi="2" ci="0" mb="2" cb="0"/><line nr="890" mi="7" ci="0" mb="0" cb="0"/><line nr="891" mi="8" ci="0" mb="2" cb="0"/><line nr="892" mi="7" ci="0" mb="0" cb="0"/><line nr="893" mi="4" ci="0" mb="0" cb="0"/><line nr="895" mi="2" ci="0" mb="0" cb="0"/><line nr="897" mi="8" ci="0" mb="0" cb="0"/><line nr="904" mi="2" ci="0" mb="2" cb="0"/><line nr="905" mi="8" ci="0" mb="0" cb="0"/><line nr="906" mi="8" ci="0" mb="2" cb="0"/><line nr="907" mi="8" ci="0" mb="0" cb="0"/><line nr="908" mi="4" ci="0" mb="0" cb="0"/><line nr="910" mi="2" ci="0" mb="0" cb="0"/><line nr="912" mi="2" ci="0" mb="0" cb="0"/><line nr="913" mi="8" ci="0" mb="2" cb="0"/><line nr="914" mi="2" ci="0" mb="2" cb="0"/><line nr="915" mi="12" ci="0" mb="0" cb="0"/><line nr="917" mi="11" ci="0" mb="0" cb="0"/><line nr="920" mi="2" ci="0" mb="0" cb="0"/><line nr="926" mi="0" ci="2" mb="1" cb="1"/><line nr="927" mi="0" ci="7" mb="0" cb="0"/><line nr="928" mi="0" ci="8" mb="0" cb="2"/><line nr="929" mi="0" ci="7" mb="0" cb="0"/><line nr="930" mi="0" ci="4" mb="0" cb="0"/><line nr="932" mi="0" ci="2" mb="0" cb="0"/><line nr="934" mi="2" ci="0" mb="0" cb="0"/><line nr="935" mi="8" ci="0" mb="2" cb="0"/><line nr="936" mi="2" ci="0" mb="2" cb="0"/><line nr="937" mi="11" ci="0" mb="0" cb="0"/><line nr="939" mi="10" ci="0" mb="0" cb="0"/><line nr="942" mi="2" ci="0" mb="0" cb="0"/><line nr="949" mi="0" ci="2" mb="0" cb="2"/><line nr="950" mi="0" ci="8" mb="0" cb="0"/><line nr="951" mi="0" ci="8" mb="0" cb="2"/><line nr="952" mi="0" ci="8" mb="0" cb="0"/><line nr="953" mi="0" ci="4" mb="0" cb="0"/><line nr="955" mi="0" ci="2" mb="0" cb="0"/><line nr="957" mi="0" ci="2" mb="0" cb="0"/><line nr="958" mi="0" ci="8" mb="0" cb="2"/><line nr="959" mi="0" ci="11" mb="0" cb="0"/><line nr="961" mi="0" ci="2" mb="0" cb="0"/><line nr="967" mi="0" ci="2" mb="0" cb="2"/><line nr="968" mi="0" ci="7" mb="0" cb="0"/><line nr="969" mi="0" ci="8" mb="0" cb="2"/><line nr="970" mi="0" ci="7" mb="0" cb="0"/><line nr="971" mi="0" ci="4" mb="0" cb="0"/><line nr="973" mi="0" ci="2" mb="0" cb="0"/><line nr="975" mi="0" ci="2" mb="0" cb="0"/><line nr="976" mi="0" ci="8" mb="0" cb="2"/><line nr="977" mi="0" ci="10" mb="0" cb="0"/><line nr="979" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="855" covered="2316"/><counter type="BRANCH" missed="110" covered="259"/><counter type="LINE" missed="134" covered="344"/><counter type="COMPLEXITY" missed="95" covered="164"/><counter type="METHOD" missed="23" covered="43"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="855" covered="2316"/><counter type="BRANCH" missed="110" covered="259"/><counter type="LINE" missed="134" covered="344"/><counter type="COMPLEXITY" missed="95" covered="164"/><counter type="METHOD" missed="23" covered="43"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka"><class name="neureka/Neureka$Settings$Debug" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keepDerivativeTargetPayloads" desc="()Z" line="68"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKeepDerivativeTargetPayloads" desc="(Z)V" line="72"><counter type="INSTRUCTION" missed="1" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$fcn$create" sourcefilename="Tsr.java"><method name="&lt;init&gt;" desc="()V" line="1291"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="E" desc="([I)Lneureka/Tsr;" line="1294"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newRandom" desc="([I)Lneureka/Tsr;" line="1298"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newRandom" desc="([IJ)Lneureka/Tsr;" line="1302"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTsrLike" desc="(Lneureka/Tsr;D)Lneureka/Tsr;" line="1311"><counter type="INSTRUCTION" missed="7" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTsrLike" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1324"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_newEmptyLike" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1337"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="96"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findAcceleratorByName" desc="(Ljava/lang/String;)Lneureka/acceleration/Device;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="14"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;Z)Lneureka/calculus/Function;" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="version" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings$AD" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainGraphDerivativesAfterBackward" desc="()Z" line="94"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRetainGraphDerivativesAfterBackward" desc="(Z)V" line="97"><counter type="INSTRUCTION" missed="1" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainPendingErrorForJITProp" desc="()Z" line="113"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRetainPendingErrorForJITProp" desc="(Z)V" line="117"><counter type="INSTRUCTION" missed="1" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyGradientWhenTensorIsUsed" desc="()Z" line="129"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setApplyGradientWhenTensorIsUsed" desc="(Z)V" line="133"><counter type="INSTRUCTION" missed="1" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="91"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="35"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$fcn$indexing" sourcefilename="Tsr.java"><method name="&lt;init&gt;" desc="()V" line="1395"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="([I[I)V" line="1399"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="incrementAt" desc="(I[I[I)I" line="1415"><counter type="INSTRUCTION" missed="2" covered="66"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTlnOf" desc="([I)[I" line="1446"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rearrange" desc="([I[I)[I" line="1464"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shpCheck" desc="([ILneureka/Tsr;)[I" line="1477"><counter type="INSTRUCTION" missed="18" covered="7"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rearrange" desc="([I[I[I)[I" line="1487"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strInt" desc="([I)Ljava/lang/String;" line="1501"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shpOfCon" desc="([I[I)[I" line="1510"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shpOfBrc" desc="([I[I)[I" line="1519"><counter type="INSTRUCTION" missed="16" covered="42"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="szeOfShp" desc="([I)I" line="1531"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="330"/><counter type="BRANCH" missed="15" covered="43"/><counter type="LINE" missed="10" covered="63"/><counter type="COMPLEXITY" missed="14" covered="26"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$fcn$stringify" sourcefilename="Tsr.java"><method name="&lt;init&gt;" desc="()V" line="1358"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatFP" desc="(D)Ljava/lang/String;" line="1361"><counter type="INSTRUCTION" missed="4" covered="70"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="str" desc="([I)Ljava/lang/String;" line="1380"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="70"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="7" covered="12"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$fcn$exec" sourcefilename="Tsr.java"><method name="&lt;init&gt;" desc="()V" line="1265"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reshaped" desc="(Lneureka/Tsr;[IZ)Lneureka/Tsr;" line="1268"><counter type="INSTRUCTION" missed="57" covered="43"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="43"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings$Indexing" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="()V" line="139"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="142"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="legacy" desc="()Z" line="149"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLegacy" desc="(Z)V" line="153"><counter type="INSTRUCTION" missed="1" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="145"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLocked" desc="()Z" line="30"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIsLocked" desc="(Z)V" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="7"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Component" sourcefilename="Component.java"/><class name="neureka/Tsr$fcn" sourcefilename="Tsr.java"><method name="&lt;init&gt;" desc="()V" line="1180"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newDoubleArray" desc="(DI)[D" line="1347"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFloatArray" desc="(FI)[F" line="1353"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/Tsr" sourcefilename="Tsr.java"><method name="rqsGradient" desc="()Z" line="57"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRqsGradient" desc="(Z)Lneureka/Tsr;" line="61"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOutsourced" desc="()Z" line="73"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsOutsourced" desc="(Z)Lneureka/Tsr;" line="77"><counter type="INSTRUCTION" missed="26" covered="56"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="6" covered="13"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVirtual" desc="()Z" line="104"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsVirtual" desc="(Z)Lneureka/Tsr;" line="108"><counter type="INSTRUCTION" missed="25" covered="112"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Lneureka/Tsr;" line="138"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Class;)Lneureka/Tsr;" line="173"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/lang/Class;)Z" line="185"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="device" desc="()Lneureka/acceleration/Device;" line="192"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue64" desc="([D)Lneureka/Tsr;" line="199"><counter type="INSTRUCTION" missed="9" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue32" desc="([F)Lneureka/Tsr;" line="208"><counter type="INSTRUCTION" missed="9" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/Object;)Lneureka/Tsr;" line="217"><counter type="INSTRUCTION" missed="23" covered="52"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="240"><counter type="INSTRUCTION" missed="16" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gradient64" desc="()[D" line="248"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gradient32" desc="()[F" line="254"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addToGradient" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="260"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is64" desc="()Z" line="272"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is32" desc="()Z" line="276"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="to32" desc="()Lneureka/Tsr;" line="280"><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="to64" desc="()Lneureka/Tsr;" line="291"><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value64" desc="(I)D" line="302"><counter type="INSTRUCTION" missed="23" covered="12"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value64" desc="()[D" line="312"><counter type="INSTRUCTION" missed="4" covered="62"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value32" desc="(I)F" line="325"><counter type="INSTRUCTION" missed="16" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value32" desc="()[F" line="335"><counter type="INSTRUCTION" missed="18" covered="36"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="([D)Lneureka/Tsr;" line="349"><counter type="INSTRUCTION" missed="9" covered="8"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="355"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="359"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="363"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="()[I" line="367"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="()[I" line="371"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="375"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="380"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUndefined" desc="()Z" line="384"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSlice" desc="()Z" line="391"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sliceCount" desc="()I" line="396"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSliceParent" desc="()Z" line="401"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="belongsToGraph" desc="()Z" line="406"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeave" desc="()Z" line="410"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBranch" desc="()Z" line="414"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="421"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_toString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="425"><counter type="INSTRUCTION" missed="11" covered="206"/><counter type="BRANCH" missed="8" covered="34"/><counter type="LINE" missed="2" covered="40"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_stringified" desc="([DZI)Ljava/lang/String;" line="494"><counter type="INSTRUCTION" missed="12" covered="58"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="516"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([ILjava/lang/String;)V" line="40"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_construct" desc="([ILjava/lang/String;)V" line="574"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intArray" desc="([Ljava/lang/Object;)[I" line="581"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleArray" desc="([Ljava/lang/Object;)[D" line="590"><counter type="INSTRUCTION" missed="9" covered="48"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([Ljava/lang/Object;)V" line="609"><counter type="INSTRUCTION" missed="14" covered="331"/><counter type="BRANCH" missed="7" covered="49"/><counter type="LINE" missed="3" covered="50"/><counter type="COMPLEXITY" missed="7" covered="22"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="40"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([I)V" line="40"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([I)V" line="689"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([ID)V" line="40"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([ID)V" line="698"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([I[D)V" line="40"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([I[D)V" line="710"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/Tsr;Z)V" line="40"><counter type="INSTRUCTION" missed="20" covered="59"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialShape" desc="([I)Lneureka/Tsr;" line="739"><counter type="INSTRUCTION" missed="12" covered="40"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_cached" desc="([I)[I" line="752"><counter type="INSTRUCTION" missed="24" covered="83"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/Tsr;Ljava/lang/String;)V" line="40"><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Lneureka/Tsr;Ljava/lang/String;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Lneureka/Tsr;Ljava/lang/String;Z)V" line="40"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([Lneureka/Tsr;Ljava/lang/String;Z)V" line="788"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inject" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="799"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backward" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="828"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backward" desc="(D)Lneureka/Tsr;" line="834"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyGradient" desc="()V" line="840"><counter type="INSTRUCTION" missed="3" covered="51"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="()Lneureka/Tsr;" line="856"><counter type="INSTRUCTION" missed="11" covered="44"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="T" desc="()Lneureka/Tsr;" line="877"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="886"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="889"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="892"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negative" desc="()Lneureka/Tsr;" line="895"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="898"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="901"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="div" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="904"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="div" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="907"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mod" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="911"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="power" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="914"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="power" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="917"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xor" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="920"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xor" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="923"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lneureka/Tsr;)Z" line="926"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="label" desc="([[Ljava/lang/String;)Lneureka/Tsr;" line="930"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="label" desc="(Ljava/util/List;)Lneureka/Tsr;" line="945"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAt" desc="(Ljava/lang/Object;Lneureka/Tsr;)Lneureka/Tsr;" line="961"><counter type="INSTRUCTION" missed="7" covered="72"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAt" desc="([I)D" line="978"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAt" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="981"><counter type="INSTRUCTION" missed="2" covered="314"/><counter type="BRANCH" missed="4" covered="42"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_configureSubsetFromRanges" desc="([Ljava/lang/Object;[I[II)I" line="1041"><counter type="INSTRUCTION" missed="31" covered="316"/><counter type="BRANCH" missed="6" covered="24"/><counter type="LINE" missed="3" covered="43"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foreach" desc="(Ljava/util/function/Consumer;)Lneureka/Tsr;" line="1107"><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i_of_idx" desc="([I)I" line="1146"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="1157"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="1161"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$foreach$4" desc="(IILjava/util/function/Consumer;)V" line="1127"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$inject$3" desc="(Lneureka/Tsr;Ljava/lang/Object;)V" line="811"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_toString$2" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicReference;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="482"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_toString$1" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="465"><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setIsVirtual$0" desc="(Lneureka/Tsr;)V" line="117"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="832" covered="3434"/><counter type="BRANCH" missed="150" covered="416"/><counter type="LINE" missed="99" covered="581"/><counter type="COMPLEXITY" missed="138" covered="257"/><counter type="METHOD" missed="13" covered="99"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$fcn$io" sourcefilename="Tsr.java"><method name="&lt;init&gt;" desc="()V" line="1182"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFrom" desc="(Lneureka/Tsr;I)D" line="1185"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFrom" desc="(Lneureka/Tsr;[I)D" line="1194"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInto" desc="(Lneureka/Tsr;ID)V" line="1199"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInto" desc="(Lneureka/Tsr;[ID)V" line="1204"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInto" desc="(Lneureka/Tsr;ID)V" line="1209"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInto" desc="(Lneureka/Tsr;[ID)V" line="1214"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInto" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/Tsr;" line="1219"><counter type="INSTRUCTION" missed="15" covered="20"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subInto" desc="(Lneureka/Tsr;ID)V" line="1228"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subInto" desc="(Lneureka/Tsr;[ID)V" line="1233"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subInto" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="1238"><counter type="INSTRUCTION" missed="19" covered="32"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mulInto" desc="(Lneureka/Tsr;ID)V" line="1254"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mulInto" desc="(Lneureka/Tsr;[ID)V" line="1259"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="191"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="6" covered="40"/><counter type="COMPLEXITY" missed="9" covered="13"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Component.java"/><sourcefile name="Neureka.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="2" mb="1" cb="1"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="1" ci="2" mb="1" cb="1"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="1" ci="2" mb="1" cb="1"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="1" ci="2" mb="1" cb="1"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="1" ci="2" mb="1" cb="1"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="77"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="10" covered="40"/><counter type="COMPLEXITY" missed="14" covered="20"/><counter type="METHOD" missed="9" covered="20"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="Tsr.java"><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="35" ci="70" mb="0" cb="0"/><line nr="49" mi="21" ci="42" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="2"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="2"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="10" mb="0" cb="2"/><line nr="77" mi="0" ci="4" mb="0" cb="2"/><line nr="78" mi="0" ci="9" mb="0" cb="2"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="2"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="1" cb="1"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="1" cb="1"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="2" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="1" cb="1"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="2"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="9" mb="1" cb="1"/><line nr="112" mi="6" ci="15" mb="1" cb="3"/><line nr="113" mi="0" ci="2" mb="0" cb="2"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="10" ci="2" mb="1" cb="1"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="3" ci="9" mb="1" cb="1"/><line nr="120" mi="4" ci="9" mb="1" cb="1"/><line nr="121" mi="0" ci="7" mb="0" cb="2"/><line nr="122" mi="0" ci="10" mb="1" cb="1"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="1" cb="3"/><line nr="129" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="2"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="2"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="12" mb="0" cb="2"/><line nr="150" mi="0" ci="3" mb="0" cb="2"/><line nr="151" mi="0" ci="2" mb="0" cb="2"/><line nr="152" mi="0" ci="6" mb="1" cb="1"/><line nr="154" mi="0" ci="5" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="2"/><line nr="163" mi="0" ci="9" mb="0" cb="2"/><line nr="164" mi="0" ci="7" mb="0" cb="2"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="2"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="1" cb="3"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="2"/><line nr="192" mi="0" ci="3" mb="0" cb="2"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="1" cb="1"/><line nr="200" mi="9" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="1" cb="1"/><line nr="209" mi="9" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="2"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="1" cb="1"/><line nr="220" mi="6" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="2"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="1" cb="1"/><line nr="224" mi="9" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="9" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="1" cb="1"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="1" cb="1"/><line nr="231" mi="0" ci="9" mb="0" cb="0"/><line nr="233" mi="8" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="1" cb="1"/><line nr="241" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="11" ci="0" mb="2" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="2"/><line nr="250" mi="4" ci="6" mb="1" cb="1"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="2" cb="0"/><line nr="256" mi="10" ci="0" mb="2" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="2"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="17" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="6" mb="0" cb="2"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="1" cb="1"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="4" ci="2" mb="1" cb="1"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="284" mi="6" ci="4" mb="1" cb="1"/><line nr="285" mi="4" ci="2" mb="1" cb="1"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="1" cb="1"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="4" ci="2" mb="1" cb="1"/><line nr="294" mi="0" ci="6" mb="0" cb="0"/><line nr="295" mi="6" ci="4" mb="1" cb="1"/><line nr="296" mi="4" ci="2" mb="1" cb="1"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="1" cb="1"/><line nr="303" mi="0" ci="9" mb="1" cb="1"/><line nr="304" mi="7" ci="0" mb="0" cb="0"/><line nr="306" mi="9" ci="0" mb="2" cb="0"/><line nr="307" mi="7" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="10" mb="1" cb="5"/><line nr="313" mi="0" ci="7" mb="0" cb="0"/><line nr="315" mi="0" ci="12" mb="0" cb="2"/><line nr="316" mi="0" ci="5" mb="0" cb="4"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="4" ci="8" mb="1" cb="1"/><line nr="319" mi="0" ci="14" mb="0" cb="2"/><line nr="321" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="1" cb="1"/><line nr="326" mi="10" ci="0" mb="2" cb="0"/><line nr="327" mi="6" ci="0" mb="0" cb="0"/><line nr="329" mi="0" ci="10" mb="0" cb="2"/><line nr="330" mi="0" ci="6" mb="0" cb="0"/><line nr="335" mi="0" ci="10" mb="1" cb="5"/><line nr="336" mi="0" ci="7" mb="0" cb="0"/><line nr="338" mi="0" ci="12" mb="0" cb="2"/><line nr="339" mi="0" ci="5" mb="1" cb="3"/><line nr="340" mi="4" ci="0" mb="0" cb="0"/><line nr="341" mi="8" ci="0" mb="2" cb="0"/><line nr="342" mi="6" ci="0" mb="0" cb="0"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="9" ci="3" mb="3" cb="1"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="3" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="2" ci="3" mb="1" cb="1"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="0" ci="10" mb="0" cb="4"/><line nr="384" mi="0" ci="7" mb="0" cb="2"/><line nr="391" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="0" ci="9" mb="1" cb="3"/><line nr="396" mi="0" ci="5" mb="0" cb="0"/><line nr="397" mi="1" ci="6" mb="1" cb="1"/><line nr="401" mi="0" ci="5" mb="0" cb="0"/><line nr="402" mi="0" ci="9" mb="1" cb="3"/><line nr="406" mi="0" ci="4" mb="0" cb="0"/><line nr="410" mi="0" ci="14" mb="1" cb="3"/><line nr="414" mi="0" ci="7" mb="0" cb="2"/><line nr="421" mi="2" ci="9" mb="1" cb="1"/><line nr="425" mi="2" ci="5" mb="1" cb="1"/><line nr="426" mi="1" ci="5" mb="1" cb="1"/><line nr="427" mi="1" ci="5" mb="1" cb="1"/><line nr="428" mi="3" ci="5" mb="1" cb="1"/><line nr="429" mi="0" ci="8" mb="0" cb="2"/><line nr="430" mi="0" ci="3" mb="0" cb="2"/><line nr="431" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="1" cb="1"/><line nr="433" mi="2" ci="0" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="3" mb="0" cb="0"/><line nr="437" mi="0" ci="9" mb="0" cb="2"/><line nr="438" mi="0" ci="6" mb="0" cb="0"/><line nr="439" mi="0" ci="9" mb="0" cb="2"/><line nr="441" mi="0" ci="4" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="8" mb="2" cb="2"/><line nr="444" mi="2" ci="0" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><line nr="447" mi="0" ci="9" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="0"/><line nr="449" mi="0" ci="4" mb="0" cb="2"/><line nr="450" mi="0" ci="3" mb="0" cb="2"/><line nr="451" mi="0" ci="3" mb="0" cb="0"/><line nr="452" mi="0" ci="5" mb="0" cb="0"/><line nr="453" mi="0" ci="2" mb="0" cb="2"/><line nr="454" mi="0" ci="11" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="0"/><line nr="460" mi="0" ci="4" mb="0" cb="2"/><line nr="461" mi="0" ci="10" mb="0" cb="4"/><line nr="462" mi="0" ci="5" mb="0" cb="0"/><line nr="463" mi="0" ci="5" mb="0" cb="0"/><line nr="464" mi="0" ci="9" mb="0" cb="0"/><line nr="465" mi="2" ci="10" mb="1" cb="1"/><line nr="466" mi="0" ci="13" mb="0" cb="0"/><line nr="470" mi="3" ci="12" mb="1" cb="1"/><line nr="472" mi="0" ci="1" mb="0" cb="0"/><line nr="473" mi="0" ci="6" mb="0" cb="0"/><line nr="476" mi="0" ci="4" mb="0" cb="2"/><line nr="477" mi="0" ci="10" mb="0" cb="4"/><line nr="478" mi="0" ci="5" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="1" cb="1"/><line nr="480" mi="0" ci="5" mb="0" cb="0"/><line nr="481" mi="0" ci="6" mb="0" cb="0"/><line nr="482" mi="2" ci="10" mb="1" cb="1"/><line nr="483" mi="0" ci="7" mb="0" cb="0"/><line nr="485" mi="0" ci="1" mb="0" cb="0"/><line nr="486" mi="0" ci="6" mb="0" cb="0"/><line nr="490" mi="0" ci="2" mb="0" cb="0"/><line nr="494" mi="0" ci="2" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="0"/><line nr="497" mi="0" ci="6" mb="0" cb="2"/><line nr="498" mi="0" ci="7" mb="0" cb="2"/><line nr="500" mi="0" ci="2" mb="1" cb="1"/><line nr="501" mi="0" ci="13" mb="0" cb="2"/><line nr="503" mi="12" ci="0" mb="2" cb="0"/><line nr="505" mi="0" ci="4" mb="0" cb="0"/><line nr="506" mi="0" ci="5" mb="0" cb="2"/><line nr="507" mi="0" ci="4" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="2"/><line nr="509" mi="0" ci="4" mb="0" cb="0"/><line nr="512" mi="0" ci="2" mb="0" cb="0"/><line nr="516" mi="0" ci="4" mb="0" cb="0"/><line nr="523" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="8" ci="0" mb="0" cb="0"/><line nr="525" mi="1" ci="0" mb="0" cb="0"/><line nr="526" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="2"/><line nr="528" mi="0" ci="3" mb="0" cb="2"/><line nr="529" mi="0" ci="6" mb="0" cb="2"/><line nr="530" mi="0" ci="3" mb="0" cb="0"/><line nr="531" mi="0" ci="4" mb="0" cb="0"/><line nr="532" mi="0" ci="8" mb="0" cb="2"/><line nr="533" mi="0" ci="8" mb="0" cb="0"/><line nr="535" mi="0" ci="5" mb="0" cb="0"/><line nr="536" mi="0" ci="7" mb="1" cb="1"/><line nr="537" mi="0" ci="13" mb="0" cb="0"/><line nr="542" mi="0" ci="12" mb="0" cb="0"/><line nr="543" mi="0" ci="1" mb="0" cb="0"/><line nr="544" mi="0" ci="2" mb="0" cb="0"/><line nr="545" mi="0" ci="16" mb="0" cb="0"/><line nr="546" mi="0" ci="1" mb="0" cb="0"/><line nr="547" mi="2" ci="0" mb="0" cb="0"/><line nr="548" mi="20" ci="0" mb="0" cb="0"/><line nr="549" mi="1" ci="0" mb="0" cb="0"/><line nr="550" mi="2" ci="0" mb="0" cb="0"/><line nr="551" mi="24" ci="0" mb="0" cb="0"/><line nr="552" mi="1" ci="0" mb="0" cb="0"/><line nr="553" mi="2" ci="0" mb="0" cb="0"/><line nr="554" mi="28" ci="0" mb="0" cb="0"/><line nr="555" mi="1" ci="0" mb="0" cb="0"/><line nr="556" mi="0" ci="2" mb="0" cb="0"/><line nr="557" mi="0" ci="32" mb="0" cb="0"/><line nr="558" mi="0" ci="1" mb="0" cb="0"/><line nr="559" mi="2" ci="0" mb="0" cb="0"/><line nr="560" mi="36" ci="0" mb="0" cb="0"/><line nr="561" mi="1" ci="0" mb="0" cb="0"/><line nr="562" mi="0" ci="2" mb="0" cb="0"/><line nr="563" mi="0" ci="40" mb="0" cb="0"/><line nr="564" mi="0" ci="1" mb="0" cb="0"/><line nr="565" mi="2" ci="0" mb="0" cb="0"/><line nr="566" mi="44" ci="0" mb="0" cb="0"/><line nr="567" mi="1" ci="0" mb="0" cb="0"/><line nr="569" mi="2" ci="0" mb="0" cb="0"/><line nr="570" mi="4" ci="0" mb="0" cb="0"/><line nr="571" mi="1" ci="0" mb="0" cb="0"/><line nr="574" mi="0" ci="3" mb="0" cb="0"/><line nr="575" mi="0" ci="8" mb="0" cb="2"/><line nr="576" mi="0" ci="10" mb="0" cb="0"/><line nr="578" mi="0" ci="1" mb="0" cb="0"/><line nr="581" mi="0" ci="3" mb="0" cb="0"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="583" mi="0" ci="7" mb="0" cb="2"/><line nr="584" mi="0" ci="8" mb="0" cb="0"/><line nr="586" mi="0" ci="2" mb="0" cb="0"/><line nr="590" mi="0" ci="3" mb="0" cb="0"/><line nr="591" mi="0" ci="3" mb="0" cb="0"/><line nr="592" mi="0" ci="7" mb="0" cb="2"/><line nr="593" mi="0" ci="5" mb="0" cb="2"/><line nr="594" mi="0" ci="10" mb="0" cb="0"/><line nr="595" mi="0" ci="5" mb="1" cb="1"/><line nr="596" mi="9" ci="0" mb="0" cb="0"/><line nr="597" mi="0" ci="5" mb="1" cb="1"/><line nr="598" mi="0" ci="8" mb="0" cb="0"/><line nr="601" mi="0" ci="2" mb="0" cb="0"/><line nr="604" mi="0" ci="2" mb="0" cb="0"/><line nr="605" mi="0" ci="3" mb="0" cb="0"/><line nr="606" mi="0" ci="1" mb="0" cb="0"/><line nr="609" mi="1" ci="5" mb="2" cb="2"/><line nr="610" mi="0" ci="9" mb="1" cb="3"/><line nr="611" mi="8" ci="0" mb="0" cb="0"/><line nr="612" mi="1" ci="0" mb="0" cb="0"/><line nr="614" mi="0" ci="17" mb="0" cb="2"/><line nr="615" mi="0" ci="17" mb="0" cb="2"/><line nr="616" mi="0" ci="5" mb="0" cb="2"/><line nr="617" mi="0" ci="8" mb="0" cb="2"/><line nr="618" mi="0" ci="10" mb="0" cb="0"/><line nr="620" mi="0" ci="6" mb="0" cb="0"/><line nr="621" mi="0" ci="3" mb="0" cb="0"/><line nr="622" mi="0" ci="7" mb="0" cb="2"/><line nr="623" mi="0" ci="10" mb="0" cb="0"/><line nr="625" mi="0" ci="4" mb="0" cb="0"/><line nr="628" mi="0" ci="5" mb="0" cb="2"/><line nr="629" mi="0" ci="8" mb="0" cb="2"/><line nr="630" mi="0" ci="10" mb="0" cb="0"/><line nr="631" mi="0" ci="8" mb="1" cb="1"/><line nr="632" mi="0" ci="9" mb="0" cb="0"/><line nr="636" mi="0" ci="15" mb="0" cb="6"/><line nr="637" mi="0" ci="18" mb="0" cb="2"/><line nr="638" mi="0" ci="11" mb="0" cb="0"/><line nr="639" mi="0" ci="1" mb="0" cb="0"/><line nr="640" mi="0" ci="10" mb="1" cb="3"/><line nr="641" mi="0" ci="11" mb="0" cb="0"/><line nr="642" mi="0" ci="1" mb="0" cb="0"/><line nr="643" mi="0" ci="10" mb="0" cb="4"/><line nr="644" mi="0" ci="10" mb="0" cb="0"/><line nr="645" mi="0" ci="1" mb="0" cb="0"/><line nr="648" mi="0" ci="2" mb="0" cb="0"/><line nr="649" mi="0" ci="2" mb="0" cb="0"/><line nr="650" mi="0" ci="4" mb="0" cb="0"/><line nr="651" mi="0" ci="16" mb="0" cb="2"/><line nr="652" mi="0" ci="7" mb="0" cb="2"/><line nr="653" mi="0" ci="3" mb="0" cb="2"/><line nr="654" mi="0" ci="4" mb="1" cb="1"/><line nr="655" mi="0" ci="5" mb="0" cb="0"/><line nr="656" mi="0" ci="1" mb="0" cb="0"/><line nr="660" mi="0" ci="2" mb="0" cb="0"/><line nr="661" mi="0" ci="3" mb="0" cb="0"/><line nr="662" mi="0" ci="2" mb="0" cb="0"/><line nr="663" mi="0" ci="2" mb="0" cb="0"/><line nr="664" mi="0" ci="16" mb="0" cb="2"/><line nr="665" mi="0" ci="4" mb="0" cb="2"/><line nr="666" mi="0" ci="5" mb="0" cb="0"/><line nr="667" mi="0" ci="4" mb="0" cb="0"/><line nr="668" mi="0" ci="2" mb="0" cb="0"/><line nr="669" mi="0" ci="3" mb="0" cb="2"/><line nr="670" mi="0" ci="6" mb="0" cb="0"/><line nr="671" mi="0" ci="3" mb="1" cb="1"/><line nr="672" mi="4" ci="0" mb="0" cb="0"/><line nr="675" mi="0" ci="5" mb="0" cb="0"/><line nr="676" mi="0" ci="1" mb="0" cb="0"/><line nr="678" mi="0" ci="3" mb="0" cb="0"/><line nr="680" mi="0" ci="2" mb="0" cb="0"/><line nr="681" mi="0" ci="9" mb="0" cb="0"/><line nr="682" mi="0" ci="1" mb="0" cb="0"/><line nr="684" mi="0" ci="2" mb="0" cb="0"/><line nr="685" mi="0" ci="3" mb="0" cb="0"/><line nr="686" mi="0" ci="1" mb="0" cb="0"/><line nr="689" mi="0" ci="5" mb="0" cb="0"/><line nr="690" mi="0" ci="4" mb="0" cb="0"/><line nr="691" mi="0" ci="1" mb="0" cb="0"/><line nr="693" mi="0" ci="2" mb="0" cb="0"/><line nr="694" mi="0" ci="4" mb="0" cb="0"/><line nr="695" mi="0" ci="1" mb="0" cb="0"/><line nr="698" mi="0" ci="3" mb="0" cb="0"/><line nr="699" mi="0" ci="4" mb="0" cb="0"/><line nr="700" mi="0" ci="9" mb="0" cb="2"/><line nr="701" mi="0" ci="4" mb="0" cb="0"/><line nr="702" mi="0" ci="6" mb="0" cb="0"/><line nr="703" mi="0" ci="1" mb="0" cb="0"/><line nr="705" mi="0" ci="2" mb="0" cb="0"/><line nr="706" mi="0" ci="4" mb="0" cb="0"/><line nr="707" mi="0" ci="1" mb="0" cb="0"/><line nr="710" mi="0" ci="3" mb="0" cb="0"/><line nr="711" mi="0" ci="4" mb="0" cb="0"/><line nr="712" mi="0" ci="1" mb="0" cb="0"/><line nr="717" mi="0" ci="2" mb="0" cb="0"/><line nr="718" mi="3" ci="9" mb="1" cb="1"/><line nr="719" mi="0" ci="3" mb="0" cb="0"/><line nr="720" mi="0" ci="3" mb="0" cb="0"/><line nr="721" mi="4" ci="9" mb="1" cb="1"/><line nr="722" mi="0" ci="2" mb="1" cb="1"/><line nr="723" mi="0" ci="3" mb="1" cb="1"/><line nr="724" mi="0" ci="3" mb="0" cb="0"/><line nr="725" mi="0" ci="10" mb="1" cb="1"/><line nr="726" mi="0" ci="1" mb="0" cb="0"/><line nr="727" mi="3" ci="0" mb="0" cb="0"/><line nr="728" mi="10" ci="0" mb="2" cb="0"/><line nr="731" mi="0" ci="5" mb="0" cb="0"/><line nr="732" mi="0" ci="1" mb="0" cb="0"/><line nr="739" mi="0" ci="3" mb="0" cb="0"/><line nr="740" mi="3" ci="7" mb="1" cb="1"/><line nr="741" mi="4" ci="9" mb="1" cb="1"/><line nr="742" mi="0" ci="6" mb="1" cb="3"/><line nr="743" mi="5" ci="0" mb="0" cb="0"/><line nr="745" mi="0" ci="4" mb="0" cb="0"/><line nr="746" mi="0" ci="5" mb="0" cb="0"/><line nr="747" mi="0" ci="4" mb="0" cb="0"/><line nr="748" mi="0" ci="2" mb="0" cb="0"/><line nr="752" mi="0" ci="2" mb="0" cb="0"/><line nr="753" mi="0" ci="8" mb="0" cb="2"/><line nr="754" mi="0" ci="10" mb="0" cb="2"/><line nr="755" mi="0" ci="10" mb="0" cb="2"/><line nr="756" mi="0" ci="10" mb="0" cb="2"/><line nr="757" mi="5" ci="5" mb="1" cb="1"/><line nr="758" mi="0" ci="10" mb="1" cb="1"/><line nr="759" mi="10" ci="0" mb="2" cb="0"/><line nr="760" mi="9" ci="0" mb="2" cb="0"/><line nr="761" mi="0" ci="10" mb="0" cb="0"/><line nr="763" mi="0" ci="6" mb="0" cb="0"/><line nr="764" mi="0" ci="2" mb="0" cb="2"/><line nr="765" mi="0" ci="2" mb="0" cb="0"/><line nr="767" mi="0" ci="6" mb="0" cb="0"/><line nr="768" mi="0" ci="2" mb="0" cb="0"/><line nr="774" mi="0" ci="2" mb="0" cb="0"/><line nr="775" mi="1" ci="2" mb="1" cb="1"/><line nr="776" mi="0" ci="10" mb="0" cb="0"/><line nr="777" mi="0" ci="1" mb="0" cb="0"/><line nr="779" mi="0" ci="2" mb="0" cb="0"/><line nr="780" mi="0" ci="5" mb="0" cb="0"/><line nr="781" mi="0" ci="1" mb="0" cb="0"/><line nr="783" mi="0" ci="2" mb="0" cb="0"/><line nr="784" mi="0" ci="5" mb="0" cb="0"/><line nr="785" mi="0" ci="1" mb="0" cb="0"/><line nr="788" mi="0" ci="10" mb="2" cb="4"/><line nr="789" mi="0" ci="6" mb="0" cb="0"/><line nr="790" mi="0" ci="4" mb="0" cb="0"/><line nr="791" mi="0" ci="1" mb="0" cb="0"/><line nr="799" mi="0" ci="4" mb="0" cb="2"/><line nr="800" mi="0" ci="4" mb="0" cb="0"/><line nr="801" mi="0" ci="4" mb="0" cb="0"/><line nr="802" mi="0" ci="4" mb="0" cb="0"/><line nr="803" mi="0" ci="4" mb="0" cb="0"/><line nr="804" mi="0" ci="4" mb="0" cb="0"/><line nr="805" mi="0" ci="4" mb="0" cb="0"/><line nr="810" mi="0" ci="3" mb="1" cb="1"/><line nr="811" mi="0" ci="15" mb="1" cb="1"/><line nr="813" mi="0" ci="3" mb="0" cb="0"/><line nr="814" mi="0" ci="3" mb="0" cb="0"/><line nr="815" mi="0" ci="3" mb="0" cb="0"/><line nr="816" mi="0" ci="3" mb="0" cb="0"/><line nr="817" mi="0" ci="3" mb="0" cb="0"/><line nr="818" mi="0" ci="3" mb="0" cb="0"/><line nr="819" mi="0" ci="2" mb="0" cb="0"/><line nr="828" mi="0" ci="11" mb="0" cb="2"/><line nr="829" mi="0" ci="7" mb="1" cb="1"/><line nr="830" mi="0" ci="2" mb="0" cb="0"/><line nr="834" mi="0" ci="9" mb="0" cb="0"/><line nr="835" mi="0" ci="2" mb="0" cb="0"/><line nr="840" mi="0" ci="4" mb="0" cb="2"/><line nr="841" mi="0" ci="5" mb="0" cb="0"/><line nr="842" mi="0" ci="4" mb="0" cb="0"/><line nr="843" mi="0" ci="2" mb="0" cb="0"/><line nr="846" mi="0" ci="4" mb="0" cb="2"/><line nr="847" mi="0" ci="5" mb="0" cb="0"/><line nr="848" mi="0" ci="5" mb="0" cb="0"/><line nr="849" mi="3" ci="2" mb="1" cb="1"/><line nr="850" mi="0" ci="4" mb="0" cb="0"/><line nr="851" mi="0" ci="15" mb="0" cb="0"/><line nr="853" mi="0" ci="1" mb="0" cb="0"/><line nr="856" mi="0" ci="10" mb="0" cb="2"/><line nr="857" mi="0" ci="5" mb="0" cb="0"/><line nr="858" mi="0" ci="2" mb="0" cb="2"/><line nr="859" mi="0" ci="3" mb="1" cb="1"/><line nr="860" mi="5" ci="0" mb="0" cb="0"/><line nr="864" mi="0" ci="3" mb="0" cb="0"/><line nr="865" mi="0" ci="3" mb="0" cb="0"/><line nr="866" mi="0" ci="3" mb="0" cb="0"/><line nr="867" mi="0" ci="3" mb="0" cb="0"/><line nr="868" mi="0" ci="3" mb="0" cb="0"/><line nr="869" mi="6" ci="4" mb="1" cb="1"/><line nr="870" mi="0" ci="3" mb="0" cb="0"/><line nr="871" mi="0" ci="2" mb="0" cb="0"/><line nr="877" mi="0" ci="2" mb="0" cb="0"/><line nr="878" mi="0" ci="9" mb="0" cb="2"/><line nr="879" mi="0" ci="9" mb="0" cb="2"/><line nr="881" mi="0" ci="3" mb="0" cb="0"/><line nr="882" mi="0" ci="6" mb="0" cb="0"/><line nr="886" mi="0" ci="15" mb="0" cb="0"/><line nr="889" mi="0" ci="9" mb="0" cb="0"/><line nr="892" mi="0" ci="15" mb="0" cb="0"/><line nr="895" mi="0" ci="11" mb="0" cb="0"/><line nr="898" mi="0" ci="15" mb="0" cb="0"/><line nr="901" mi="0" ci="9" mb="0" cb="0"/><line nr="904" mi="0" ci="15" mb="0" cb="0"/><line nr="907" mi="0" ci="9" mb="0" cb="0"/><line nr="911" mi="0" ci="15" mb="0" cb="0"/><line nr="914" mi="0" ci="15" mb="0" cb="0"/><line nr="917" mi="0" ci="9" mb="0" cb="0"/><line nr="920" mi="0" ci="15" mb="0" cb="0"/><line nr="923" mi="0" ci="9" mb="0" cb="0"/><line nr="926" mi="0" ci="9" mb="0" cb="2"/><line nr="930" mi="5" ci="0" mb="0" cb="0"/><line nr="931" mi="2" ci="0" mb="2" cb="0"/><line nr="932" mi="6" ci="0" mb="0" cb="0"/><line nr="933" mi="4" ci="0" mb="0" cb="0"/><line nr="935" mi="8" ci="0" mb="2" cb="0"/><line nr="936" mi="4" ci="0" mb="2" cb="0"/><line nr="937" mi="10" ci="0" mb="2" cb="0"/><line nr="938" mi="15" ci="0" mb="2" cb="0"/><line nr="942" mi="2" ci="0" mb="0" cb="0"/><line nr="945" mi="0" ci="5" mb="0" cb="0"/><line nr="946" mi="0" ci="2" mb="1" cb="1"/><line nr="947" mi="0" ci="6" mb="0" cb="0"/><line nr="948" mi="0" ci="4" mb="0" cb="0"/><line nr="950" mi="0" ci="8" mb="0" cb="2"/><line nr="951" mi="0" ci="4" mb="1" cb="1"/><line nr="952" mi="0" ci="11" mb="0" cb="2"/><line nr="953" mi="0" ci="17" mb="1" cb="1"/><line nr="957" mi="0" ci="2" mb="0" cb="0"/><line nr="961" mi="5" ci="3" mb="1" cb="1"/><line nr="962" mi="2" ci="7" mb="1" cb="1"/><line nr="963" mi="0" ci="2" mb="0" cb="0"/><line nr="964" mi="0" ci="6" mb="0" cb="4"/><line nr="965" mi="0" ci="5" mb="0" cb="0"/><line nr="966" mi="0" ci="4" mb="0" cb="0"/><line nr="967" mi="0" ci="2" mb="0" cb="0"/><line nr="969" mi="0" ci="11" mb="2" cb="4"/><line nr="970" mi="0" ci="5" mb="0" cb="0"/><line nr="972" mi="0" ci="16" mb="0" cb="0"/><line nr="974" mi="0" ci="9" mb="0" cb="2"/><line nr="975" mi="0" ci="2" mb="0" cb="0"/><line nr="978" mi="7" ci="0" mb="0" cb="0"/><line nr="981" mi="2" ci="2" mb="1" cb="1"/><line nr="982" mi="0" ci="9" mb="0" cb="4"/><line nr="983" mi="0" ci="2" mb="0" cb="0"/><line nr="984" mi="0" ci="4" mb="0" cb="0"/><line nr="985" mi="0" ci="3" mb="0" cb="2"/><line nr="986" mi="0" ci="4" mb="0" cb="0"/><line nr="987" mi="0" ci="2" mb="0" cb="0"/><line nr="988" mi="0" ci="26" mb="0" cb="6"/><line nr="989" mi="0" ci="2" mb="0" cb="2"/><line nr="990" mi="0" ci="5" mb="0" cb="0"/><line nr="991" mi="0" ci="3" mb="0" cb="0"/><line nr="992" mi="0" ci="2" mb="1" cb="1"/><line nr="993" mi="0" ci="8" mb="0" cb="2"/><line nr="994" mi="0" ci="19" mb="0" cb="2"/><line nr="996" mi="0" ci="5" mb="0" cb="0"/><line nr="999" mi="0" ci="2" mb="0" cb="0"/><line nr="1000" mi="0" ci="26" mb="1" cb="5"/><line nr="1001" mi="0" ci="10" mb="0" cb="2"/><line nr="1002" mi="0" ci="3" mb="0" cb="0"/><line nr="1003" mi="0" ci="7" mb="0" cb="0"/><line nr="1005" mi="0" ci="1" mb="0" cb="0"/><line nr="1006" mi="0" ci="3" mb="1" cb="1"/><line nr="1008" mi="0" ci="6" mb="0" cb="0"/><line nr="1009" mi="0" ci="5" mb="0" cb="0"/><line nr="1010" mi="0" ci="7" mb="0" cb="0"/><line nr="1011" mi="0" ci="5" mb="0" cb="0"/><line nr="1012" mi="0" ci="11" mb="0" cb="2"/><line nr="1013" mi="0" ci="11" mb="0" cb="0"/><line nr="1014" mi="0" ci="17" mb="0" cb="0"/><line nr="1017" mi="0" ci="4" mb="0" cb="0"/><line nr="1018" mi="0" ci="4" mb="0" cb="0"/><line nr="1019" mi="0" ci="4" mb="0" cb="0"/><line nr="1020" mi="0" ci="5" mb="0" cb="0"/><line nr="1021" mi="0" ci="4" mb="0" cb="0"/><line nr="1022" mi="0" ci="7" mb="0" cb="2"/><line nr="1023" mi="0" ci="21" mb="0" cb="4"/><line nr="1025" mi="0" ci="4" mb="0" cb="0"/><line nr="1026" mi="0" ci="3" mb="0" cb="2"/><line nr="1027" mi="0" ci="5" mb="0" cb="0"/><line nr="1028" mi="0" ci="5" mb="0" cb="0"/><line nr="1030" mi="0" ci="7" mb="0" cb="2"/><line nr="1031" mi="0" ci="8" mb="0" cb="0"/><line nr="1032" mi="0" ci="5" mb="0" cb="0"/><line nr="1033" mi="0" ci="8" mb="0" cb="2"/><line nr="1034" mi="0" ci="4" mb="0" cb="0"/><line nr="1035" mi="0" ci="4" mb="0" cb="0"/><line nr="1036" mi="0" ci="2" mb="0" cb="0"/><line nr="1041" mi="0" ci="8" mb="0" cb="2"/><line nr="1042" mi="0" ci="2" mb="0" cb="0"/><line nr="1043" mi="0" ci="2" mb="0" cb="0"/><line nr="1044" mi="0" ci="5" mb="0" cb="2"/><line nr="1045" mi="0" ci="5" mb="0" cb="2"/><line nr="1046" mi="0" ci="7" mb="0" cb="0"/><line nr="1047" mi="0" ci="7" mb="0" cb="0"/><line nr="1048" mi="0" ci="9" mb="0" cb="0"/><line nr="1049" mi="0" ci="12" mb="0" cb="2"/><line nr="1050" mi="0" ci="9" mb="0" cb="0"/><line nr="1051" mi="0" ci="6" mb="0" cb="0"/><line nr="1052" mi="0" ci="20" mb="0" cb="0"/><line nr="1054" mi="0" ci="2" mb="0" cb="0"/><line nr="1055" mi="0" ci="1" mb="0" cb="0"/><line nr="1057" mi="0" ci="5" mb="0" cb="0"/><line nr="1058" mi="0" ci="2" mb="1" cb="1"/><line nr="1059" mi="0" ci="10" mb="0" cb="0"/><line nr="1061" mi="0" ci="3" mb="0" cb="0"/><line nr="1062" mi="0" ci="3" mb="0" cb="0"/><line nr="1063" mi="0" ci="1" mb="0" cb="0"/><line nr="1064" mi="7" ci="0" mb="0" cb="0"/><line nr="1066" mi="0" ci="1" mb="0" cb="0"/><line nr="1068" mi="0" ci="8" mb="0" cb="0"/><line nr="1069" mi="0" ci="24" mb="0" cb="2"/><line nr="1070" mi="0" ci="22" mb="1" cb="3"/><line nr="1071" mi="0" ci="5" mb="0" cb="0"/><line nr="1072" mi="0" ci="8" mb="1" cb="1"/><line nr="1073" mi="0" ci="2" mb="1" cb="1"/><line nr="1074" mi="0" ci="13" mb="0" cb="0"/><line nr="1077" mi="9" ci="0" mb="0" cb="0"/><line nr="1079" mi="0" ci="14" mb="1" cb="1"/><line nr="1080" mi="0" ci="2" mb="1" cb="1"/><line nr="1081" mi="0" ci="19" mb="0" cb="0"/><line nr="1084" mi="15" ci="0" mb="0" cb="0"/><line nr="1086" mi="0" ci="1" mb="0" cb="0"/><line nr="1087" mi="0" ci="9" mb="0" cb="0"/><line nr="1088" mi="0" ci="15" mb="0" cb="0"/><line nr="1091" mi="0" ci="3" mb="0" cb="2"/><line nr="1092" mi="0" ci="2" mb="0" cb="0"/><line nr="1093" mi="0" ci="2" mb="0" cb="0"/><line nr="1094" mi="0" ci="2" mb="0" cb="0"/><line nr="1096" mi="0" ci="11" mb="0" cb="2"/><line nr="1097" mi="0" ci="11" mb="0" cb="2"/><line nr="1098" mi="0" ci="10" mb="0" cb="0"/><line nr="1099" mi="0" ci="6" mb="0" cb="0"/><line nr="1101" mi="0" ci="7" mb="0" cb="0"/><line nr="1107" mi="4" ci="0" mb="0" cb="0"/><line nr="1108" mi="3" ci="0" mb="0" cb="0"/><line nr="1109" mi="2" ci="0" mb="0" cb="0"/><line nr="1110" mi="3" ci="0" mb="2" cb="0"/><line nr="1111" mi="10" ci="0" mb="2" cb="0"/><line nr="1113" mi="2" ci="0" mb="2" cb="0"/><line nr="1114" mi="5" ci="0" mb="0" cb="0"/><line nr="1115" mi="7" ci="0" mb="2" cb="0"/><line nr="1116" mi="4" ci="0" mb="0" cb="0"/><line nr="1117" mi="4" ci="0" mb="0" cb="0"/><line nr="1119" mi="1" ci="0" mb="0" cb="0"/><line nr="1120" mi="3" ci="0" mb="0" cb="0"/><line nr="1121" mi="4" ci="0" mb="0" cb="0"/><line nr="1122" mi="3" ci="0" mb="0" cb="0"/><line nr="1123" mi="7" ci="0" mb="2" cb="0"/><line nr="1124" mi="4" ci="0" mb="0" cb="0"/><line nr="1125" mi="13" ci="0" mb="2" cb="0"/><line nr="1126" mi="11" ci="0" mb="0" cb="0"/><line nr="1127" mi="13" ci="0" mb="2" cb="0"/><line nr="1128" mi="1" ci="0" mb="0" cb="0"/><line nr="1129" mi="4" ci="0" mb="0" cb="0"/><line nr="1131" mi="7" ci="0" mb="2" cb="0"/><line nr="1133" mi="4" ci="0" mb="0" cb="0"/><line nr="1134" mi="1" ci="0" mb="0" cb="0"/><line nr="1135" mi="2" ci="0" mb="0" cb="0"/><line nr="1136" mi="1" ci="0" mb="0" cb="0"/><line nr="1142" mi="2" ci="0" mb="0" cb="0"/><line nr="1146" mi="0" ci="2" mb="0" cb="0"/><line nr="1147" mi="0" ci="2" mb="0" cb="0"/><line nr="1148" mi="0" ci="9" mb="0" cb="2"/><line nr="1149" mi="0" ci="9" mb="0" cb="2"/><line nr="1150" mi="0" ci="16" mb="0" cb="4"/><line nr="1151" mi="0" ci="21" mb="0" cb="2"/><line nr="1153" mi="0" ci="2" mb="0" cb="0"/><line nr="1157" mi="0" ci="6" mb="0" cb="0"/><line nr="1161" mi="0" ci="5" mb="0" cb="0"/><line nr="1162" mi="0" ci="2" mb="0" cb="2"/><line nr="1163" mi="0" ci="10" mb="0" cb="2"/><line nr="1164" mi="0" ci="12" mb="0" cb="0"/><line nr="1165" mi="0" ci="7" mb="0" cb="0"/><line nr="1168" mi="0" ci="8" mb="0" cb="2"/><line nr="1169" mi="0" ci="12" mb="0" cb="0"/><line nr="1170" mi="0" ci="7" mb="0" cb="0"/><line nr="1173" mi="0" ci="2" mb="0" cb="0"/><line nr="1180" mi="3" ci="0" mb="0" cb="0"/><line nr="1182" mi="3" ci="0" mb="0" cb="0"/><line nr="1185" mi="0" ci="6" mb="2" cb="2"/><line nr="1186" mi="2" ci="0" mb="0" cb="0"/><line nr="1187" mi="0" ci="3" mb="1" cb="1"/><line nr="1188" mi="0" ci="5" mb="0" cb="0"/><line nr="1190" mi="7" ci="0" mb="0" cb="0"/><line nr="1194" mi="0" ci="4" mb="0" cb="0"/><line nr="1195" mi="0" ci="7" mb="0" cb="0"/><line nr="1199" mi="0" ci="4" mb="0" cb="0"/><line nr="1200" mi="0" ci="7" mb="0" cb="0"/><line nr="1201" mi="0" ci="1" mb="0" cb="0"/><line nr="1204" mi="0" ci="4" mb="0" cb="0"/><line nr="1205" mi="0" ci="7" mb="0" cb="0"/><line nr="1206" mi="0" ci="1" mb="0" cb="0"/><line nr="1209" mi="0" ci="4" mb="0" cb="0"/><line nr="1210" mi="0" ci="10" mb="0" cb="0"/><line nr="1211" mi="0" ci="1" mb="0" cb="0"/><line nr="1214" mi="0" ci="4" mb="0" cb="0"/><line nr="1215" mi="0" ci="10" mb="0" cb="0"/><line nr="1216" mi="0" ci="1" mb="0" cb="0"/><line nr="1219" mi="3" ci="3" mb="3" cb="1"/><line nr="1220" mi="12" ci="0" mb="0" cb="0"/><line nr="1222" mi="0" ci="15" mb="0" cb="0"/><line nr="1224" mi="0" ci="2" mb="0" cb="0"/><line nr="1228" mi="0" ci="4" mb="0" cb="0"/><line nr="1229" mi="0" ci="10" mb="0" cb="0"/><line nr="1230" mi="0" ci="1" mb="0" cb="0"/><line nr="1233" mi="0" ci="4" mb="0" cb="0"/><line nr="1234" mi="0" ci="10" mb="0" cb="0"/><line nr="1235" mi="0" ci="1" mb="0" cb="0"/><line nr="1238" mi="3" ci="3" mb="3" cb="1"/><line nr="1239" mi="12" ci="0" mb="0" cb="0"/><line nr="1241" mi="0" ci="3" mb="1" cb="1"/><line nr="1242" mi="4" ci="0" mb="0" cb="0"/><line nr="1244" mi="0" ci="5" mb="0" cb="0"/><line nr="1245" mi="0" ci="3" mb="0" cb="0"/><line nr="1246" mi="0" ci="7" mb="0" cb="2"/><line nr="1247" mi="0" ci="6" mb="0" cb="0"/><line nr="1248" mi="0" ci="4" mb="0" cb="0"/><line nr="1251" mi="0" ci="1" mb="0" cb="0"/><line nr="1254" mi="0" ci="4" mb="0" cb="0"/><line nr="1255" mi="0" ci="10" mb="0" cb="0"/><line nr="1256" mi="0" ci="1" mb="0" cb="0"/><line nr="1259" mi="0" ci="4" mb="0" cb="0"/><line nr="1260" mi="0" ci="10" mb="0" cb="0"/><line nr="1261" mi="0" ci="1" mb="0" cb="0"/><line nr="1265" mi="3" ci="0" mb="0" cb="0"/><line nr="1268" mi="1" ci="9" mb="1" cb="1"/><line nr="1269" mi="0" ci="9" mb="0" cb="0"/><line nr="1270" mi="0" ci="9" mb="0" cb="0"/><line nr="1271" mi="0" ci="6" mb="0" cb="0"/><line nr="1272" mi="0" ci="2" mb="0" cb="0"/><line nr="1273" mi="5" ci="4" mb="1" cb="1"/><line nr="1274" mi="0" ci="2" mb="1" cb="1"/><line nr="1275" mi="4" ci="0" mb="0" cb="0"/><line nr="1276" mi="8" ci="0" mb="2" cb="0"/><line nr="1277" mi="8" ci="0" mb="0" cb="0"/><line nr="1279" mi="5" ci="0" mb="2" cb="0"/><line nr="1280" mi="8" ci="0" mb="2" cb="0"/><line nr="1281" mi="14" ci="0" mb="0" cb="0"/><line nr="1284" mi="4" ci="0" mb="0" cb="0"/><line nr="1286" mi="0" ci="2" mb="0" cb="0"/><line nr="1291" mi="3" ci="0" mb="0" cb="0"/><line nr="1294" mi="6" ci="0" mb="0" cb="0"/><line nr="1298" mi="0" ci="4" mb="0" cb="0"/><line nr="1302" mi="0" ci="3" mb="0" cb="0"/><line nr="1303" mi="0" ci="3" mb="0" cb="0"/><line nr="1304" mi="0" ci="7" mb="0" cb="2"/><line nr="1305" mi="0" ci="8" mb="0" cb="0"/><line nr="1307" mi="0" ci="6" mb="0" cb="0"/><line nr="1311" mi="0" ci="3" mb="0" cb="0"/><line nr="1312" mi="0" ci="3" mb="1" cb="1"/><line nr="1313" mi="7" ci="0" mb="0" cb="0"/><line nr="1315" mi="0" ci="5" mb="0" cb="0"/><line nr="1317" mi="0" ci="3" mb="1" cb="1"/><line nr="1318" mi="0" ci="7" mb="0" cb="0"/><line nr="1320" mi="0" ci="2" mb="0" cb="0"/><line nr="1324" mi="0" ci="3" mb="0" cb="0"/><line nr="1325" mi="0" ci="3" mb="1" cb="1"/><line nr="1326" mi="7" ci="0" mb="0" cb="0"/><line nr="1328" mi="0" ci="6" mb="0" cb="0"/><line nr="1330" mi="0" ci="3" mb="0" cb="2"/><line nr="1331" mi="0" ci="7" mb="0" cb="0"/><line nr="1333" mi="0" ci="2" mb="0" cb="0"/><line nr="1337" mi="0" ci="4" mb="0" cb="0"/><line nr="1338" mi="0" ci="4" mb="0" cb="0"/><line nr="1339" mi="0" ci="4" mb="0" cb="0"/><line nr="1340" mi="0" ci="4" mb="0" cb="0"/><line nr="1341" mi="0" ci="2" mb="0" cb="0"/><line nr="1347" mi="3" ci="0" mb="0" cb="0"/><line nr="1348" mi="11" ci="0" mb="2" cb="0"/><line nr="1349" mi="2" ci="0" mb="0" cb="0"/><line nr="1353" mi="3" ci="0" mb="0" cb="0"/><line nr="1354" mi="11" ci="0" mb="2" cb="0"/><line nr="1355" mi="2" ci="0" mb="0" cb="0"/><line nr="1358" mi="3" ci="0" mb="0" cb="0"/><line nr="1361" mi="0" ci="5" mb="0" cb="0"/><line nr="1362" mi="0" ci="6" mb="0" cb="0"/><line nr="1363" mi="0" ci="3" mb="0" cb="0"/><line nr="1364" mi="0" ci="4" mb="0" cb="2"/><line nr="1365" mi="0" ci="7" mb="0" cb="2"/><line nr="1366" mi="0" ci="7" mb="0" cb="0"/><line nr="1367" mi="0" ci="7" mb="0" cb="2"/><line nr="1368" mi="0" ci="7" mb="0" cb="0"/><line nr="1370" mi="0" ci="4" mb="0" cb="0"/><line nr="1371" mi="4" ci="7" mb="1" cb="1"/><line nr="1372" mi="0" ci="11" mb="0" cb="2"/><line nr="1375" mi="0" ci="2" mb="0" cb="0"/><line nr="1380" mi="2" ci="0" mb="0" cb="0"/><line nr="1381" mi="2" ci="0" mb="0" cb="0"/><line nr="1382" mi="16" ci="0" mb="2" cb="0"/><line nr="1383" mi="13" ci="0" mb="2" cb="0"/><line nr="1384" mi="1" ci="0" mb="0" cb="0"/><line nr="1386" mi="3" ci="0" mb="0" cb="0"/><line nr="1395" mi="3" ci="0" mb="0" cb="0"/><line nr="1399" mi="0" ci="2" mb="0" cb="2"/><line nr="1400" mi="0" ci="2" mb="0" cb="0"/><line nr="1401" mi="0" ci="6" mb="0" cb="4"/><line nr="1402" mi="0" ci="6" mb="0" cb="0"/><line nr="1404" mi="0" ci="1" mb="0" cb="0"/><line nr="1405" mi="0" ci="5" mb="0" cb="0"/><line nr="1406" mi="0" ci="6" mb="1" cb="3"/><line nr="1407" mi="0" ci="6" mb="0" cb="0"/><line nr="1411" mi="0" ci="1" mb="0" cb="0"/><line nr="1415" mi="0" ci="2" mb="0" cb="2"/><line nr="1416" mi="0" ci="7" mb="1" cb="1"/><line nr="1417" mi="0" ci="7" mb="0" cb="0"/><line nr="1418" mi="0" ci="7" mb="0" cb="2"/><line nr="1419" mi="0" ci="4" mb="0" cb="0"/><line nr="1420" mi="0" ci="2" mb="0" cb="0"/><line nr="1422" mi="0" ci="3" mb="0" cb="0"/><line nr="1425" mi="1" ci="0" mb="0" cb="0"/><line nr="1427" mi="0" ci="2" mb="0" cb="0"/><line nr="1429" mi="0" ci="7" mb="1" cb="1"/><line nr="1430" mi="0" ci="7" mb="0" cb="0"/><line nr="1431" mi="0" ci="7" mb="0" cb="2"/><line nr="1432" mi="0" ci="4" mb="0" cb="0"/><line nr="1433" mi="0" ci="2" mb="0" cb="0"/><line nr="1435" mi="0" ci="3" mb="0" cb="0"/><line nr="1438" mi="1" ci="0" mb="0" cb="0"/><line nr="1440" mi="0" ci="2" mb="0" cb="0"/><line nr="1446" mi="0" ci="4" mb="0" cb="0"/><line nr="1447" mi="0" ci="2" mb="0" cb="0"/><line nr="1448" mi="0" ci="2" mb="0" cb="2"/><line nr="1449" mi="0" ci="9" mb="0" cb="2"/><line nr="1450" mi="0" ci="4" mb="0" cb="0"/><line nr="1451" mi="0" ci="6" mb="0" cb="0"/><line nr="1454" mi="0" ci="9" mb="0" cb="2"/><line nr="1455" mi="0" ci="4" mb="0" cb="0"/><line nr="1456" mi="0" ci="6" mb="0" cb="0"/><line nr="1459" mi="0" ci="2" mb="0" cb="0"/><line nr="1464" mi="0" ci="4" mb="0" cb="0"/><line nr="1465" mi="0" ci="8" mb="0" cb="2"/><line nr="1466" mi="0" ci="4" mb="0" cb="2"/><line nr="1467" mi="0" ci="8" mb="0" cb="0"/><line nr="1468" mi="0" ci="4" mb="1" cb="1"/><line nr="1469" mi="0" ci="8" mb="0" cb="0"/><line nr="1472" mi="0" ci="2" mb="0" cb="0"/><line nr="1477" mi="0" ci="5" mb="1" cb="1"/><line nr="1478" mi="3" ci="0" mb="0" cb="0"/><line nr="1480" mi="15" ci="0" mb="2" cb="0"/><line nr="1482" mi="0" ci="2" mb="0" cb="0"/><line nr="1487" mi="0" ci="3" mb="0" cb="0"/><line nr="1488" mi="0" ci="4" mb="0" cb="0"/><line nr="1489" mi="0" ci="8" mb="0" cb="2"/><line nr="1490" mi="0" ci="4" mb="0" cb="2"/><line nr="1491" mi="0" ci="7" mb="0" cb="0"/><line nr="1492" mi="0" ci="4" mb="1" cb="1"/><line nr="1493" mi="0" ci="8" mb="0" cb="0"/><line nr="1496" mi="0" ci="2" mb="0" cb="0"/><line nr="1501" mi="2" ci="0" mb="0" cb="0"/><line nr="1502" mi="8" ci="0" mb="2" cb="0"/><line nr="1503" mi="6" ci="0" mb="0" cb="0"/><line nr="1505" mi="2" ci="0" mb="0" cb="0"/><line nr="1510" mi="0" ci="9" mb="0" cb="0"/><line nr="1511" mi="0" ci="12" mb="1" cb="3"/><line nr="1512" mi="0" ci="13" mb="0" cb="0"/><line nr="1514" mi="0" ci="2" mb="0" cb="0"/><line nr="1519" mi="0" ci="9" mb="0" cb="0"/><line nr="1520" mi="0" ci="12" mb="1" cb="3"/><line nr="1521" mi="0" ci="10" mb="0" cb="0"/><line nr="1522" mi="11" ci="9" mb="3" cb="1"/><line nr="1523" mi="5" ci="0" mb="0" cb="0"/><line nr="1526" mi="0" ci="2" mb="0" cb="0"/><line nr="1531" mi="0" ci="2" mb="0" cb="0"/><line nr="1532" mi="0" ci="14" mb="0" cb="2"/><line nr="1533" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1097" covered="4164"/><counter type="BRANCH" missed="196" covered="486"/><counter type="LINE" missed="141" covered="727"/><counter type="COMPLEXITY" missed="183" covered="309"/><counter type="METHOD" missed="24" covered="127"/><counter type="CLASS" missed="1" covered="6"/></sourcefile><counter type="INSTRUCTION" missed="1126" covered="4241"/><counter type="BRANCH" missed="201" covered="491"/><counter type="LINE" missed="151" covered="767"/><counter type="COMPLEXITY" missed="197" covered="329"/><counter type="METHOD" missed="33" covered="147"/><counter type="CLASS" missed="1" covered="11"/></package><package name="neureka/autograd"><class name="neureka/autograd/ADAgent$ForwardAD" sourcefilename="ADAgent.java"/><class name="neureka/autograd/GraphNode" sourcefilename="GraphNode.java"><method name="usesAD" desc="()Z" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usesForwardAD" desc="()Z" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usesReverseAD" desc="()Z" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reliesOnJustInTimeProp" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAndRemovePendingError" desc="()Lneureka/autograd/PendingError;" line="87"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsedAsDerivative" desc="()Z" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="()Lneureka/calculus/Function;" line="113"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParents" desc="()[Lneureka/autograd/GraphNode;" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPayload" desc="()Lneureka/Tsr;" line="143"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setPayload" desc="(Lneureka/Tsr;)V" line="147"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lock" desc="()Lneureka/autograd/GraphLock;" line="192"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="201"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nid" desc="()J" line="210"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="obtainLocking" desc="(Lneureka/autograd/GraphLock;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_attachChild" desc="(Lneureka/autograd/GraphNode;)V" line="228"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCachable" desc="()Z" line="240"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeave" desc="()Z" line="249"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGraphLeave" desc="()Z" line="253"><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVirtual" desc="()Z" line="264"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lneureka/calculus/Function;Ljava/lang/Object;Ljava/util/function/Supplier;)V" line="80"><counter type="INSTRUCTION" missed="5" covered="115"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="(Lneureka/Tsr;Lneureka/calculus/Function;[Lneureka/Tsr;Lneureka/autograd/GraphLock;)V" line="292"><counter type="INSTRUCTION" missed="10" covered="262"/><counter type="BRANCH" missed="8" covered="46"/><counter type="LINE" missed="1" covered="41"/><counter type="COMPLEXITY" missed="8" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_modeOf" desc="([Lneureka/Tsr;Lneureka/calculus/Function;)I" line="371"><counter type="INSTRUCTION" missed="5" covered="103"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backward" desc="(Lneureka/Tsr;)V" line="403"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_backward" desc="(Lneureka/Tsr;Ljava/util/Set;Z)V" line="435"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_carryPendingBackPropToGradients" desc="(Ljava/util/Set;)V" line="472"><counter type="INSTRUCTION" missed="3" covered="34"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backwardJIT" desc="(Lneureka/Tsr;)V" line="497"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_backwardJIT" desc="(Lneureka/Tsr;Lneureka/autograd/GraphNode;)V" line="502"><counter type="INSTRUCTION" missed="19" covered="58"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_deleteDerivativesRecursively" desc="()V" line="540"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_numberOfReverseModeADChildren" desc="()I" line="554"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mode" desc="()I" line="570"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="function" desc="()Lneureka/calculus/Function;" line="577"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lneureka/autograd/GraphNode;Ljava/lang/Object;)V" line="585"><counter type="INSTRUCTION" missed="6" covered="43"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lneureka/autograd/GraphNode;)Ljava/lang/Object;" line="605"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="has" desc="(Lneureka/autograd/GraphNode;)Z" line="614"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="622"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachBackward" desc="(Lneureka/Tsr;Ljava/util/function/BiConsumer;)V" line="630"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachForward" desc="(Lneureka/Tsr;Ljava/util/function/BiConsumer;)V" line="641"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachDerivative" desc="(Ljava/util/function/BiConsumer;)V" line="648"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachTarget" desc="(Ljava/util/function/Consumer;)V" line="653"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEach" desc="(Lneureka/Tsr;Ljava/util/function/BiConsumer;)V" line="659"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasDerivatives" desc="()Z" line="668"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="()Ljava/lang/String;" line="672"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="682"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="687"><counter type="INSTRUCTION" missed="16" covered="37"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_toString" desc="(Ljava/lang/String;Z)Ljava/lang/String;" line="701"><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEach$15" desc="(Ljava/util/function/BiConsumer;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="660"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachTarget$14" desc="(Ljava/util/function/Consumer;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="654"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachDerivative$13" desc="(Ljava/util/function/BiConsumer;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="649"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachForward$12" desc="(Ljava/util/function/BiConsumer;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="643"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachBackward$11" desc="(Ljava/util/function/BiConsumer;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="632"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$put$10" desc="(Lneureka/autograd/GraphNode;Lneureka/autograd/GraphNode;)I" line="585"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_deleteDerivativesRecursively$9" desc="(Lneureka/autograd/GraphNode;)V" line="542"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_backwardJIT$8" desc="(Lneureka/autograd/GraphNode;Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="525"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_backwardJIT$7" desc="(Lneureka/autograd/GraphNode;Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="524"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_carryPendingBackPropToGradients$6" desc="(Ljava/util/Set;Lneureka/autograd/GraphNode;)V" line="473"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_backward$5" desc="(Ljava/util/Set;Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="456"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_backward$4" desc="(Ljava/util/Set;Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="455"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$backward$3" desc="(Lneureka/autograd/GraphNode;)V" line="409"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$backward$2" desc="(Ljava/util/Set;Lneureka/autograd/GraphNode;)V" line="406"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_construct$1" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="343"><counter type="INSTRUCTION" missed="19" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_setPayload$0" desc="()V" line="152"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="137" covered="1310"/><counter type="BRANCH" missed="50" covered="204"/><counter type="LINE" missed="18" covered="233"/><counter type="COMPLEXITY" missed="50" covered="140"/><counter type="METHOD" missed="5" covered="58"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/PendingError" sourcefilename="PendingError.java"><method name="&lt;init&gt;" desc="(Lneureka/Tsr;I)V" line="11"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulate" desc="(Lneureka/Tsr;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFullyAccumulated" desc="()Z" line="24"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccumulatedError" desc="()Lneureka/Tsr;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/GraphLock" sourcefilename="GraphLock.java"><method name="&lt;init&gt;" desc="(Lneureka/calculus/Function;[Lneureka/Tsr;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLocked" desc="()Z" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/ADAgent$BackwardAD" sourcefilename="ADAgent.java"/><class name="neureka/autograd/ADAgent" sourcefilename="ADAgent.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;Lneureka/autograd/ADAgent$ForwardAD;Lneureka/autograd/ADAgent$BackwardAD;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/Tsr;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forward" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="backward" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derivative" desc="()Lneureka/Tsr;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isForward" desc="()Z" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="31"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="45"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/JITProp" sourcefilename="JITProp.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPending" desc="(Ljava/util/Set;)V" line="22"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="noteFinished" desc="(Lneureka/autograd/GraphNode;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finished" desc="()Ljava/util/Set;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDone" desc="()Z" line="61"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$execute$0" desc="(Lneureka/autograd/GraphNode;)V" line="47"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="48"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="5" covered="15"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GraphNode.java"><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="2"/><line nr="40" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="7" mb="0" cb="2"/><line nr="77" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="2" ci="8" mb="1" cb="1"/><line nr="147" mi="0" ci="2" mb="1" cb="1"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="155" mi="0" ci="11" mb="0" cb="2"/><line nr="156" mi="0" ci="3" mb="0" cb="2"/><line nr="157" mi="0" ci="5" mb="0" cb="2"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="2"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="8" mb="0" cb="2"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="9" mb="0" cb="2"/><line nr="249" mi="0" ci="10" mb="1" cb="3"/><line nr="253" mi="0" ci="5" mb="0" cb="2"/><line nr="254" mi="2" ci="15" mb="1" cb="1"/><line nr="255" mi="0" ci="7" mb="1" cb="1"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="7" ci="0" mb="2" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="1" cb="1"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="2"/><line nr="276" mi="0" ci="10" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="1" cb="1"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="2"/><line nr="281" mi="0" ci="16" mb="0" cb="2"/><line nr="282" mi="0" ci="9" mb="0" cb="2"/><line nr="284" mi="0" ci="20" mb="0" cb="2"/><line nr="285" mi="0" ci="18" mb="0" cb="2"/><line nr="287" mi="0" ci="14" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="5" ci="2" mb="1" cb="1"/><line nr="293" mi="0" ci="4" mb="0" cb="2"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="2"/><line nr="298" mi="0" ci="8" mb="0" cb="2"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="8" mb="0" cb="2"/><line nr="306" mi="0" ci="10" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="1" cb="1"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="6" mb="0" cb="0"/><line nr="314" mi="0" ci="5" mb="1" cb="1"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="2"/><line nr="317" mi="0" ci="17" mb="0" cb="2"/><line nr="318" mi="0" ci="7" mb="0" cb="0"/><line nr="320" mi="0" ci="10" mb="0" cb="2"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="6" mb="1" cb="3"/><line nr="325" mi="0" ci="21" mb="0" cb="4"/><line nr="327" mi="0" ci="6" mb="1" cb="3"/><line nr="329" mi="0" ci="3" mb="0" cb="2"/><line nr="330" mi="0" ci="9" mb="0" cb="2"/><line nr="331" mi="0" ci="7" mb="0" cb="0"/><line nr="332" mi="0" ci="13" mb="0" cb="4"/><line nr="333" mi="0" ci="9" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="2"/><line nr="337" mi="0" ci="6" mb="1" cb="3"/><line nr="338" mi="0" ci="14" mb="0" cb="0"/><line nr="341" mi="0" ci="8" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="1" cb="1"/><line nr="344" mi="19" ci="0" mb="0" cb="0"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="1" cb="1"/><line nr="353" mi="0" ci="8" mb="0" cb="2"/><line nr="354" mi="0" ci="7" mb="0" cb="0"/><line nr="355" mi="0" ci="8" mb="1" cb="3"/><line nr="356" mi="0" ci="8" mb="0" cb="0"/><line nr="361" mi="0" ci="1" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="0" ci="8" mb="0" cb="2"/><line nr="375" mi="0" ci="7" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="1" cb="1"/><line nr="377" mi="5" ci="0" mb="0" cb="0"/><line nr="379" mi="0" ci="12" mb="0" cb="2"/><line nr="380" mi="0" ci="10" mb="0" cb="2"/><line nr="382" mi="0" ci="11" mb="0" cb="4"/><line nr="383" mi="0" ci="9" mb="0" cb="2"/><line nr="384" mi="0" ci="20" mb="0" cb="4"/><line nr="387" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="11" mb="0" cb="2"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="403" mi="0" ci="4" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="2"/><line nr="406" mi="0" ci="9" mb="0" cb="0"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="4" mb="1" cb="1"/><line nr="410" mi="5" ci="0" mb="0" cb="0"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="1" mb="0" cb="0"/><line nr="435" mi="0" ci="10" mb="0" cb="2"/><line nr="436" mi="0" ci="9" mb="0" cb="2"/><line nr="438" mi="0" ci="3" mb="1" cb="1"/><line nr="440" mi="0" ci="5" mb="0" cb="4"/><line nr="441" mi="0" ci="3" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="2"/><line nr="443" mi="0" ci="3" mb="0" cb="2"/><line nr="444" mi="0" ci="9" mb="0" cb="0"/><line nr="445" mi="0" ci="5" mb="0" cb="0"/><line nr="447" mi="0" ci="4" mb="0" cb="0"/><line nr="449" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="0" ci="15" mb="0" cb="2"/><line nr="456" mi="0" ci="14" mb="1" cb="1"/><line nr="460" mi="0" ci="1" mb="0" cb="0"/><line nr="472" mi="0" ci="6" mb="0" cb="0"/><line nr="473" mi="0" ci="8" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="0" cb="2"/><line nr="475" mi="0" ci="6" mb="0" cb="0"/><line nr="476" mi="0" ci="8" mb="1" cb="1"/><line nr="477" mi="3" ci="0" mb="0" cb="0"/><line nr="478" mi="0" ci="5" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="0" ci="4" mb="0" cb="0"/><line nr="498" mi="0" ci="2" mb="0" cb="0"/><line nr="499" mi="0" ci="1" mb="0" cb="0"/><line nr="502" mi="6" ci="4" mb="1" cb="1"/><line nr="503" mi="0" ci="9" mb="0" cb="2"/><line nr="504" mi="0" ci="10" mb="1" cb="1"/><line nr="505" mi="5" ci="0" mb="0" cb="0"/><line nr="507" mi="0" ci="6" mb="0" cb="0"/><line nr="508" mi="0" ci="5" mb="0" cb="2"/><line nr="510" mi="3" ci="3" mb="3" cb="1"/><line nr="511" mi="4" ci="0" mb="0" cb="0"/><line nr="520" mi="1" ci="0" mb="0" cb="0"/><line nr="522" mi="0" ci="3" mb="1" cb="1"/><line nr="524" mi="0" ci="14" mb="0" cb="2"/><line nr="525" mi="0" ci="13" mb="1" cb="1"/><line nr="528" mi="0" ci="1" mb="0" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="2"/><line nr="541" mi="0" ci="6" mb="1" cb="1"/><line nr="542" mi="3" ci="3" mb="0" cb="0"/><line nr="544" mi="0" ci="1" mb="0" cb="0"/><line nr="554" mi="0" ci="2" mb="0" cb="0"/><line nr="555" mi="0" ci="3" mb="1" cb="1"/><line nr="556" mi="0" ci="11" mb="0" cb="2"/><line nr="557" mi="0" ci="5" mb="2" cb="2"/><line nr="558" mi="0" ci="4" mb="0" cb="0"/><line nr="559" mi="0" ci="4" mb="0" cb="2"/><line nr="561" mi="0" ci="1" mb="0" cb="0"/><line nr="563" mi="0" ci="2" mb="0" cb="0"/><line nr="570" mi="0" ci="3" mb="0" cb="0"/><line nr="577" mi="0" ci="3" mb="0" cb="0"/><line nr="585" mi="0" ci="15" mb="0" cb="2"/><line nr="586" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="0" ci="10" mb="0" cb="2"/><line nr="588" mi="0" ci="3" mb="0" cb="0"/><line nr="590" mi="0" ci="6" mb="0" cb="0"/><line nr="592" mi="0" ci="3" mb="0" cb="2"/><line nr="593" mi="0" ci="3" mb="0" cb="0"/><line nr="594" mi="0" ci="6" mb="2" cb="2"/><line nr="595" mi="6" ci="0" mb="0" cb="0"/><line nr="598" mi="0" ci="1" mb="0" cb="0"/><line nr="605" mi="5" ci="0" mb="2" cb="0"/><line nr="606" mi="5" ci="0" mb="0" cb="0"/><line nr="614" mi="0" ci="5" mb="0" cb="2"/><line nr="615" mi="0" ci="5" mb="0" cb="0"/><line nr="622" mi="0" ci="9" mb="0" cb="2"/><line nr="630" mi="0" ci="4" mb="0" cb="2"/><line nr="631" mi="0" ci="6" mb="0" cb="0"/><line nr="632" mi="0" ci="10" mb="1" cb="1"/><line nr="633" mi="0" ci="1" mb="0" cb="0"/><line nr="634" mi="0" ci="1" mb="0" cb="0"/><line nr="641" mi="0" ci="4" mb="0" cb="2"/><line nr="642" mi="0" ci="6" mb="0" cb="0"/><line nr="643" mi="0" ci="19" mb="1" cb="1"/><line nr="644" mi="0" ci="1" mb="0" cb="0"/><line nr="645" mi="0" ci="1" mb="0" cb="0"/><line nr="648" mi="1" ci="3" mb="1" cb="1"/><line nr="649" mi="0" ci="10" mb="0" cb="0"/><line nr="650" mi="0" ci="1" mb="0" cb="0"/><line nr="653" mi="0" ci="4" mb="0" cb="2"/><line nr="654" mi="0" ci="9" mb="0" cb="0"/><line nr="655" mi="0" ci="1" mb="0" cb="0"/><line nr="659" mi="1" ci="3" mb="1" cb="1"/><line nr="660" mi="0" ci="23" mb="0" cb="0"/><line nr="661" mi="0" ci="1" mb="0" cb="0"/><line nr="668" mi="6" ci="5" mb="3" cb="1"/><line nr="672" mi="0" ci="2" mb="0" cb="0"/><line nr="673" mi="0" ci="7" mb="0" cb="2"/><line nr="674" mi="0" ci="3" mb="0" cb="0"/><line nr="675" mi="4" ci="3" mb="1" cb="1"/><line nr="676" mi="0" ci="7" mb="0" cb="2"/><line nr="677" mi="0" ci="2" mb="0" cb="0"/><line nr="682" mi="4" ci="0" mb="0" cb="0"/><line nr="687" mi="0" ci="4" mb="0" cb="2"/><line nr="688" mi="0" ci="8" mb="0" cb="0"/><line nr="690" mi="0" ci="4" mb="1" cb="1"/><line nr="691" mi="0" ci="6" mb="0" cb="0"/><line nr="692" mi="2" ci="15" mb="1" cb="3"/><line nr="695" mi="14" ci="0" mb="2" cb="0"/><line nr="701" mi="0" ci="6" mb="0" cb="2"/><line nr="702" mi="0" ci="11" mb="0" cb="2"/><line nr="703" mi="0" ci="4" mb="0" cb="0"/><line nr="704" mi="0" ci="3" mb="0" cb="0"/><line nr="705" mi="0" ci="8" mb="0" cb="0"/><line nr="706" mi="0" ci="3" mb="0" cb="2"/><line nr="707" mi="0" ci="9" mb="0" cb="2"/><line nr="708" mi="0" ci="9" mb="0" cb="2"/><line nr="709" mi="0" ci="11" mb="0" cb="2"/><line nr="710" mi="0" ci="10" mb="0" cb="2"/><line nr="711" mi="0" ci="13" mb="0" cb="0"/><line nr="713" mi="0" ci="8" mb="0" cb="0"/><line nr="715" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="137" covered="1310"/><counter type="BRANCH" missed="50" covered="204"/><counter type="LINE" missed="18" covered="233"/><counter type="COMPLEXITY" missed="50" covered="140"/><counter type="METHOD" missed="5" covered="58"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphLock.java"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JITProp.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="8" ci="0" mb="2" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="1" cb="1"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="1" cb="3"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="5" ci="3" mb="1" cb="1"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="10" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="32" covered="48"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="5" covered="15"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADAgent.java"><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="2"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="45"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PendingError.java"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="14" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="1" ci="6" mb="1" cb="1"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="187" covered="1468"/><counter type="BRANCH" missed="64" covered="212"/><counter type="LINE" missed="28" covered="279"/><counter type="COMPLEXITY" missed="64" covered="160"/><counter type="METHOD" missed="10" covered="76"/><counter type="CLASS" missed="0" covered="5"/></package><package name="neureka/optimization"><class name="neureka/optimization/Optimizer" sourcefilename="Optimizer.java"/><sourcefile name="Optimizer.java"/></package><package name="neureka/calculus/factory/components"><class name="neureka/calculus/factory/components/GradientProvider" sourcefilename="GradientProvider.java"/><class name="neureka/calculus/factory/components/FunctionConstant" sourcefilename="FunctionConstant.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()D" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlat" desc="()Z" line="17"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doesAD" desc="()Z" line="22"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="id" desc="()I" line="27"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dependsOn" desc="(I)Z" line="37"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="43"><counter type="INSTRUCTION" missed="15" covered="32"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([DI)D" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([D)D" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DI)D" line="71"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="76"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="86"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="91"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="96"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="101"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getADAgent" desc="([Lneureka/Tsr;IZ)Lneureka/autograd/ADAgent;" line="107"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="92"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="8" covered="19"/><counter type="COMPLEXITY" missed="9" covered="15"/><counter type="METHOD" missed="5" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/components/FunctionInput" sourcefilename="FunctionInput.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="providesGradient" desc="()Z" line="15"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlat" desc="()Z" line="20"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doesAD" desc="()Z" line="25"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="id" desc="()I" line="30"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dependsOn" desc="(I)Z" line="40"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="48"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_extract" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="73"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([DI)D" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([D)D" line="93"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DI)D" line="97"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="101"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="106"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="110"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="114"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="118"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="()I" line="129"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getADAgent" desc="([Lneureka/Tsr;IZ)Lneureka/autograd/ADAgent;" line="134"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="192"/><counter type="BRANCH" missed="3" covered="31"/><counter type="LINE" missed="9" covered="35"/><counter type="COMPLEXITY" missed="12" covered="25"/><counter type="METHOD" missed="9" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/components/FunctionVariable" sourcefilename="FunctionVariable.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="providesGradient" desc="()Z" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlat" desc="()Z" line="19"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doesAD" desc="()Z" line="24"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="id" desc="()I" line="29"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dependsOn" desc="(I)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([DI)D" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([D)D" line="57"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="derive" desc="([DI)D" line="65"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="81"><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="87"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getADAgent" desc="([Lneureka/Tsr;IZ)Lneureka/autograd/ADAgent;" line="104"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="88"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="9" covered="21"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="6" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GradientProvider.java"/><sourcefile name="FunctionConstant.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="2"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="47" mi="2" ci="3" mb="1" cb="1"/><line nr="48" mi="5" ci="0" mb="2" cb="0"/><line nr="49" mi="5" ci="0" mb="2" cb="0"/><line nr="50" mi="3" ci="0" mb="2" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="101" mi="0" ci="9" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="92"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="8" covered="19"/><counter type="COMPLEXITY" missed="9" covered="15"/><counter type="METHOD" missed="5" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionInput.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="7" mb="0" cb="2"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="2"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="2"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="5" mb="0" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="1" cb="3"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="2"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="4"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="1" cb="1"/><line nr="76" mi="0" ci="2" mb="0" cb="2"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="9" mb="1" cb="1"/><line nr="97" mi="0" ci="8" mb="0" cb="2"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="2"/><line nr="119" mi="0" ci="9" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="2"/><line nr="129" mi="0" ci="12" mb="0" cb="2"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="192"/><counter type="BRANCH" missed="3" covered="31"/><counter type="LINE" missed="9" covered="35"/><counter type="COMPLEXITY" missed="12" covered="25"/><counter type="METHOD" missed="9" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionVariable.java"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="2" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="6" ci="6" mb="1" cb="1"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="2"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="88"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="9" covered="21"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="6" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="97" covered="372"/><counter type="BRANCH" missed="13" covered="45"/><counter type="LINE" missed="26" covered="75"/><counter type="COMPLEXITY" missed="29" covered="56"/><counter type="METHOD" missed="20" covered="36"/><counter type="CLASS" missed="0" covered="3"/></package><package name="neureka/calculus/factory/assembly"><class name="neureka/calculus/factory/assembly/FunctionConstructor$1" sourcefilename="FunctionConstructor.java"><method name="&lt;init&gt;" desc="(IZLjava/util/ArrayList;ZLjava/util/ArrayList;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="24"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="29"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="35"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([DI)D" line="48"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([D)D" line="52"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="56"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DI)D" line="61"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate$1" desc="(Ljava/util/ArrayList;[Lneureka/Tsr;)Lneureka/Tsr;" line="29"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate$0" desc="(Ljava/util/ArrayList;[Lneureka/Tsr;I)Lneureka/Tsr;" line="24"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="111"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/assembly/FunctionConstructor$2" sourcefilename="FunctionConstructor.java"><method name="&lt;init&gt;" desc="(IZLjava/util/ArrayList;Z)V" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="69"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="73"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="77"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="81"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([DI)D" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([D)D" line="90"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="94"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DI)D" line="98"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$derive$3" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="81"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$derive$2" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="77"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate$1" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate$0" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="99"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/assembly/FunctionConstructor" sourcefilename="FunctionConstructor.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="construct" desc="(ILjava/util/ArrayList;Z)Lneureka/calculus/Function;" line="16"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="48"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/assembly/FunctionParser" sourcefilename="FunctionParser.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfOperationsWithin" desc="(Ljava/util/List;)I" line="13"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsedOperation" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsedComponent" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsOperation" desc="(Ljava/lang/String;Ljava/util/List;)Z" line="75"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBasicOperation" desc="(Ljava/lang/String;)Z" line="86"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="groupBy" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="11" covered="16"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWeired" desc="(C)Z" line="107"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="15" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="15" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeHeadAndTail" desc="(Ljava/lang/String;)Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanedHeadAndTail" desc="(Ljava/lang/String;)Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="28" covered="152"/><counter type="BRANCH" missed="17" covered="27"/><counter type="LINE" missed="5" covered="29"/><counter type="COMPLEXITY" missed="15" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unpackAndCorrect" desc="(Ljava/lang/String;)Ljava/lang/String;" line="174"><counter type="INSTRUCTION" missed="16" covered="251"/><counter type="BRANCH" missed="6" covered="34"/><counter type="LINE" missed="4" covered="48"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assumptionBasedOn" desc="(Ljava/lang/String;)Ljava/lang/String;" line="246"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="similarity" desc="(Ljava/lang/String;Ljava/lang/String;)D" line="261"><counter type="INSTRUCTION" missed="2" covered="80"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="790"/><counter type="BRANCH" missed="44" covered="140"/><counter type="LINE" missed="13" covered="156"/><counter type="COMPLEXITY" missed="41" covered="64"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/assembly/FunctionBuilder" sourcefilename="FunctionBuilder.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(IIZ)Lneureka/calculus/Function;" line="18"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="(Ljava/lang/String;Z)Lneureka/calculus/Function;" line="45"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_build" desc="(Ljava/lang/String;Z)Lneureka/calculus/Function;" line="66"><counter type="INSTRUCTION" missed="16" covered="655"/><counter type="BRANCH" missed="11" covered="101"/><counter type="LINE" missed="3" covered="140"/><counter type="COMPLEXITY" missed="11" covered="46"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_rebindPairwise" desc="(Ljava/util/List;I)Ljava/util/List;" line="274"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="100" covered="758"/><counter type="BRANCH" missed="24" covered="116"/><counter type="LINE" missed="17" covered="159"/><counter type="COMPLEXITY" missed="19" covered="56"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FunctionConstructor.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="10" mb="0" cb="2"/><line nr="18" mi="0" ci="15" mb="0" cb="8"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="2"/><line nr="21" mi="0" ci="19" mb="0" cb="0"/><line nr="24" mi="30" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="28" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="12" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="15" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="14" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="15" mb="0" cb="0"/><line nr="69" mi="0" ci="17" mb="0" cb="0"/><line nr="73" mi="0" ci="16" mb="0" cb="0"/><line nr="77" mi="0" ci="18" mb="0" cb="0"/><line nr="81" mi="0" ci="17" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="258"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="4" covered="24"/><counter type="COMPLEXITY" missed="4" covered="28"/><counter type="METHOD" missed="4" covered="22"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="FunctionBuilder.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="2" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="6" ci="0" mb="2" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="16" ci="0" mb="2" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="2" cb="0"/><line nr="26" mi="8" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="2" cb="0"/><line nr="28" mi="8" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="9" ci="0" mb="2" cb="0"/><line nr="32" mi="10" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="1" cb="1"/><line nr="46" mi="0" ci="11" mb="0" cb="4"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="2"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="2"/><line nr="55" mi="0" ci="13" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="1" cb="1"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="2"/><line nr="86" mi="0" ci="9" mb="1" cb="1"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="1" ci="3" mb="1" cb="1"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="2"/><line nr="101" mi="0" ci="9" mb="0" cb="2"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="2"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="2"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="2"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="2"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="1" cb="1"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="2"/><line nr="165" mi="0" ci="9" mb="0" cb="2"/><line nr="166" mi="0" ci="9" mb="0" cb="2"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="2"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="4"/><line nr="176" mi="0" ci="9" mb="1" cb="1"/><line nr="177" mi="0" ci="7" mb="0" cb="2"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="16" mb="0" cb="4"/><line nr="191" mi="0" ci="4" mb="0" cb="2"/><line nr="193" mi="0" ci="10" mb="0" cb="4"/><line nr="194" mi="0" ci="8" mb="1" cb="3"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="2"/><line nr="203" mi="0" ci="5" mb="0" cb="2"/><line nr="204" mi="0" ci="5" mb="0" cb="2"/><line nr="206" mi="0" ci="8" mb="1" cb="3"/><line nr="207" mi="0" ci="2" mb="1" cb="1"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="2"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="21" mb="0" cb="6"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="14" mb="0" cb="4"/><line nr="230" mi="0" ci="10" mb="0" cb="0"/><line nr="232" mi="0" ci="10" mb="1" cb="1"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="10" mb="0" cb="2"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="11" mb="0" cb="0"/><line nr="238" mi="0" ci="10" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="1" cb="1"/><line nr="241" mi="0" ci="26" mb="0" cb="0"/><line nr="242" mi="0" ci="7" mb="0" cb="0"/><line nr="243" mi="0" ci="16" mb="0" cb="2"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="2"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="5" ci="4" mb="1" cb="1"/><line nr="257" mi="0" ci="5" mb="0" cb="2"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="2"/><line nr="260" mi="0" ci="11" mb="0" cb="2"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="2"/><line nr="275" mi="0" ci="14" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="758"/><counter type="BRANCH" missed="24" covered="116"/><counter type="LINE" missed="17" covered="159"/><counter type="COMPLEXITY" missed="19" covered="56"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionParser.java"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="9" mb="0" cb="2"/><line nr="15" mi="0" ci="7" mb="0" cb="2"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="2"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="2"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="2"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="2"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="2"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="12" mb="0" cb="2"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="10" mb="0" cb="4"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="2"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="2"/><line nr="87" mi="0" ci="7" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="1" cb="1"/><line nr="94" mi="0" ci="4" mb="1" cb="1"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="1" cb="1"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="2" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="48" mb="15" cb="17"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="10" mb="0" cb="2"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="2"/><line nr="128" mi="0" ci="25" mb="2" cb="8"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="1" cb="1"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="0" cb="2"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="1" cb="1"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="2"/><line nr="147" mi="14" ci="19" mb="7" cb="3"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="1" cb="1"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="2"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="1" cb="1"/><line nr="162" mi="0" ci="13" mb="2" cb="2"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="13" mb="2" cb="2"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="1" cb="1"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="1" cb="1"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="2"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="8" mb="0" cb="0"/><line nr="184" mi="0" ci="8" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="0"/><line nr="195" mi="0" ci="8" mb="0" cb="0"/><line nr="196" mi="0" ci="8" mb="0" cb="0"/><line nr="197" mi="0" ci="8" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="8" mb="0" cb="2"/><line nr="203" mi="0" ci="5" mb="0" cb="2"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="2"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="2"/><line nr="210" mi="0" ci="2" mb="1" cb="1"/><line nr="211" mi="9" ci="0" mb="2" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="1" cb="1"/><line nr="215" mi="0" ci="7" mb="0" cb="2"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="15" mb="0" cb="6"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="8" mb="0" cb="2"/><line nr="227" mi="0" ci="5" mb="0" cb="2"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="2"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="8" mb="0" cb="4"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="2"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="9" mb="0" cb="2"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="2"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="0" cb="2"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="11" mb="0" cb="2"/><line nr="261" mi="0" ci="18" mb="0" cb="4"/><line nr="262" mi="0" ci="5" mb="0" cb="2"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="2" ci="2" mb="1" cb="1"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="9" mb="0" cb="2"/><line nr="270" mi="0" ci="8" mb="0" cb="2"/><line nr="271" mi="0" ci="9" mb="0" cb="2"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="790"/><counter type="BRANCH" missed="44" covered="140"/><counter type="LINE" missed="13" covered="156"/><counter type="COMPLEXITY" missed="41" covered="64"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="201" covered="1806"/><counter type="BRANCH" missed="68" covered="268"/><counter type="LINE" missed="34" covered="339"/><counter type="COMPLEXITY" missed="64" covered="148"/><counter type="METHOD" missed="6" covered="38"/><counter type="CLASS" missed="0" covered="5"/></package><package name="neureka/acceleration"><class name="neureka/acceleration/AbstractDevice" sourcefilename="AbstractDevice.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleaning" desc="(Lneureka/Tsr;Ljava/lang/Runnable;)Lneureka/acceleration/Device;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="([Lneureka/Tsr;II)Lneureka/acceleration/Device;" line="35"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execute" desc="([Lneureka/Tsr;II)V" line="41"><counter type="INSTRUCTION" missed="2" covered="222"/><counter type="BRANCH" missed="2" covered="26"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execute_recursively" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="78"><counter type="INSTRUCTION" missed="132" covered="395"/><counter type="BRANCH" missed="14" covered="28"/><counter type="LINE" missed="16" covered="49"/><counter type="COMPLEXITY" missed="12" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execute_tensor_scalar" desc="(Lneureka/Tsr;DII)V" line="174"><counter type="INSTRUCTION" missed="144" covered="10"/><counter type="BRANCH" missed="15" covered="1"/><counter type="LINE" missed="15" covered="3"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_createNewDrainTensorIn" desc="(Lneureka/acceleration/Device;[Lneureka/Tsr;I)V" line="199"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="278" covered="694"/><counter type="BRANCH" missed="31" covered="59"/><counter type="LINE" missed="31" covered="87"/><counter type="COMPLEXITY" missed="22" covered="34"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/CPU$exec" sourcefilename="CPU.java"><method name="&lt;init&gt;" desc="()V" line="156"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_adjusted_d" desc="(ILneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;)I" line="167"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate_sigmoid" desc="(Lneureka/Tsr;Lneureka/Tsr;I)V" line="179"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_sigmoid" desc="(Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="192"><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate_tanh" desc="(Lneureka/Tsr;Lneureka/Tsr;I)V" line="211"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_tanh" desc="(Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="224"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate_quadratic" desc="(Lneureka/Tsr;Lneureka/Tsr;I)V" line="245"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_quadratic" desc="(Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="258"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate_ligmoid" desc="(Lneureka/Tsr;Lneureka/Tsr;I)V" line="277"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_ligmoid" desc="(Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="290"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate_gaussian" desc="(Lneureka/Tsr;Lneureka/Tsr;I)V" line="308"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_gaussian" desc="(Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="321"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate_absolute" desc="(Lneureka/Tsr;Lneureka/Tsr;I)V" line="343"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_absolute" desc="(Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="356"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate_sinus" desc="(Lneureka/Tsr;Lneureka/Tsr;I)V" line="378"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_sinus" desc="(Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="391"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate_cosinus" desc="(Lneureka/Tsr;Lneureka/Tsr;I)V" line="413"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_cosinus" desc="(Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="426"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate_relu" desc="(Lneureka/Tsr;Lneureka/Tsr;I)V" line="450"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_relu" desc="(Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="462"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate_identity" desc="(Lneureka/Tsr;Lneureka/Tsr;I)V" line="488"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_identity" desc="(Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="501"><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convolve_multiply" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;)V" line="518"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convolve_multiply_inverse" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;)V" line="529"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast_multiply" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;I)V" line="541"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast_multiply_inverse" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;)V" line="552"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_multiplication" desc="(Lneureka/Tsr;Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="565"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convolve_add" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;I)V" line="588"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convolve_add_inverse" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;)V" line="599"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="broadcast_add" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;I)V" line="611"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast_add_inverse" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;)V" line="622"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_addition" desc="(Lneureka/Tsr;Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="634"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convolve_subtract" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;I)V" line="650"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convolve_subtract_inverse" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;)V" line="661"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="broadcast_subtract" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;I)V" line="673"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast_subtract_inverse" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;)V" line="684"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_subtraction" desc="(Lneureka/Tsr;Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="696"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convolve_divide" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;I)V" line="714"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="broadcast_divide" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;I)V" line="726"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_division" desc="(Lneureka/Tsr;Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="738"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convolve_power" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;I)V" line="763"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="broadcast_power" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;I)V" line="775"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_power" desc="(Lneureka/Tsr;Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="787"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convolve_mod" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;I)V" line="819"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="broadcast_mod" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;I)V" line="831"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_modulo" desc="(Lneureka/Tsr;Lneureka/Tsr;I)Lneureka/acceleration/CPU$exec$Operator;" line="843"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_threaded" desc="(ILneureka/acceleration/CPU$exec$Range;)V" line="865"><counter type="INSTRUCTION" missed="73" covered="13"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="14" covered="5"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_threaded$60" desc="(Lneureka/acceleration/CPU$exec$Range;II)V" line="879"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_modulo$59" desc="(I[DLneureka/Tsr;[DLneureka/Tsr;[I[I[I)D" line="851"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_modulo$58" desc="([DLneureka/Tsr;[DLneureka/Tsr;[I[I[I)D" line="847"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$broadcast_mod$57" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;III)V" line="832"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convolve_mod$56" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;III)V" line="820"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_power$55" desc="(I[DLneureka/Tsr;[DLneureka/Tsr;[I[I[I)D" line="798"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_power$54" desc="([DLneureka/Tsr;[DLneureka/Tsr;[I[I[I)D" line="791"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$broadcast_power$53" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;III)V" line="776"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convolve_power$52" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;III)V" line="764"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_division$51" desc="(I[DLneureka/Tsr;[DLneureka/Tsr;[I[I[I)D" line="746"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_division$50" desc="([DLneureka/Tsr;[DLneureka/Tsr;[I[I[I)D" line="742"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$broadcast_divide$49" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;III)V" line="727"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convolve_divide$48" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;III)V" line="715"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_subtraction$47" desc="(I[I[I[I)D" line="704"><counter type="INSTRUCTION" missed="1" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_subtraction$46" desc="([DLneureka/Tsr;[DLneureka/Tsr;[I[I[I)D" line="700"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$broadcast_subtract_inverse$45" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;II)V" line="685"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$broadcast_subtract$44" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;III)V" line="674"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convolve_subtract_inverse$43" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;II)V" line="662"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$convolve_subtract$42" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;III)V" line="651"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_addition$41" desc="([I[I[I)D" line="641"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_addition$40" desc="([DLneureka/Tsr;[DLneureka/Tsr;[I[I[I)D" line="638"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$broadcast_add_inverse$39" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;II)V" line="623"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$broadcast_add$38" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;III)V" line="612"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convolve_add_inverse$37" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;II)V" line="600"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$convolve_add$36" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;III)V" line="589"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_multiplication$35" desc="(I[DLneureka/Tsr;[DLneureka/Tsr;[I[I[I)D" line="573"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_multiplication$34" desc="([DLneureka/Tsr;[DLneureka/Tsr;[I[I[I)D" line="569"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$broadcast_multiply_inverse$33" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;II)V" line="553"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$broadcast_multiply$32" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;III)V" line="542"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convolve_multiply_inverse$31" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;II)V" line="530"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convolve_multiply$30" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;II)V" line="519"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_identity$29" desc="([DLneureka/Tsr;[I[I[I)D" line="508"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_identity$28" desc="([DLneureka/Tsr;[I[I[I)D" line="504"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate_identity$27" desc="(Lneureka/Tsr;Lneureka/Tsr;III)V" line="489"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_relu$26" desc="([DLneureka/Tsr;[I[I[I)D" line="472"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_relu$25" desc="([DLneureka/Tsr;[I[I[I)D" line="465"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate_relu$24" desc="(Lneureka/Tsr;Lneureka/Tsr;III)V" line="451"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_cosinus$23" desc="([DLneureka/Tsr;[I[I[I)D" line="434"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_cosinus$22" desc="([DLneureka/Tsr;[I[I[I)D" line="429"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate_cosinus$21" desc="(Lneureka/Tsr;Lneureka/Tsr;III)V" line="414"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_sinus$20" desc="([DLneureka/Tsr;[I[I[I)D" line="399"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_sinus$19" desc="([DLneureka/Tsr;[I[I[I)D" line="394"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$activate_sinus$18" desc="(Lneureka/Tsr;Lneureka/Tsr;III)V" line="379"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_absolute$17" desc="([DLneureka/Tsr;[I[I[I)D" line="364"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_absolute$16" desc="([DLneureka/Tsr;[I[I[I)D" line="359"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$activate_absolute$15" desc="(Lneureka/Tsr;Lneureka/Tsr;III)V" line="344"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_gaussian$14" desc="([DLneureka/Tsr;[I[I[I)D" line="329"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_gaussian$13" desc="([DLneureka/Tsr;[I[I[I)D" line="324"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$activate_gaussian$12" desc="(Lneureka/Tsr;Lneureka/Tsr;III)V" line="309"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_ligmoid$11" desc="(Lneureka/Tsr;[I[I[I)D" line="297"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_ligmoid$10" desc="([DLneureka/Tsr;[I[I[I)D" line="293"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate_ligmoid$9" desc="(Lneureka/Tsr;Lneureka/Tsr;III)V" line="278"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_quadratic$8" desc="([DLneureka/Tsr;[I[I[I)D" line="266"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_quadratic$7" desc="([DLneureka/Tsr;[I[I[I)D" line="261"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$activate_quadratic$6" desc="(Lneureka/Tsr;Lneureka/Tsr;III)V" line="246"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_tanh$5" desc="([DLneureka/Tsr;[I[I[I)D" line="232"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_tanh$4" desc="([DLneureka/Tsr;[I[I[I)D" line="227"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate_tanh$3" desc="(Lneureka/Tsr;Lneureka/Tsr;III)V" line="212"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_sigmoid$2" desc="([DLneureka/Tsr;[I[I[I)D" line="198"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_sigmoid$1" desc="([DLneureka/Tsr;[I[I[I)D" line="195"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate_sigmoid$0" desc="(Lneureka/Tsr;Lneureka/Tsr;III)V" line="180"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="514" covered="818"/><counter type="BRANCH" missed="25" covered="41"/><counter type="LINE" missed="120" covered="182"/><counter type="COMPLEXITY" missed="58" covered="83"/><counter type="METHOD" missed="42" covered="66"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/Device" sourcefilename="Device.java"><method name="find" desc="(Ljava/lang/String;)Lneureka/acceleration/Device;" line="12"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$find$1" desc="(Ljava/lang/String;[Lneureka/acceleration/Device;Lneureka/acceleration/opencl/OpenCLPlatform;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$find$0" desc="(Ljava/lang/String;[Lneureka/acceleration/Device;Lneureka/acceleration/opencl/OpenCLDevice;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/AbstractDevice$_util" sourcefilename="AbstractDevice.java"><method name="&lt;init&gt;" desc="()V" line="211"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_subset" desc="([Lneureka/Tsr;III)[Lneureka/Tsr;" line="214"><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_without" desc="([Lneureka/Tsr;I)[Lneureka/Tsr;" line="225"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_offsetted" desc="([Lneureka/Tsr;I)[Lneureka/Tsr;" line="235"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="139"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/CPU$exec$Operator" sourcefilename="CPU.java"/><class name="neureka/acceleration/CPU$exec$Range" sourcefilename="CPU.java"/><class name="neureka/acceleration/CPU" sourcefilename="CPU.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_enqueue" desc="([Lneureka/Tsr;II)V" line="15"><counter type="INSTRUCTION" missed="169" covered="233"/><counter type="BRANCH" missed="22" covered="23"/><counter type="LINE" missed="24" covered="23"/><counter type="COMPLEXITY" missed="22" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_enqueue" desc="(Lneureka/Tsr;DII)V" line="92"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="()V" line="99"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="103"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="108"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/acceleration/Device;" line="113"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="has" desc="(Lneureka/Tsr;)Z" line="118"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rmv" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="123"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overwrite64" desc="(Lneureka/Tsr;[D)Lneureka/acceleration/Device;" line="128"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overwrite32" desc="(Lneureka/Tsr;[F)Lneureka/acceleration/Device;" line="133"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swap" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/acceleration/Device;" line="138"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value64Of" desc="(Lneureka/Tsr;)[D" line="143"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value32Of" desc="(Lneureka/Tsr;)[F" line="148"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tensors" desc="()Ljava/util/Collection;" line="153"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="190" covered="279"/><counter type="BRANCH" missed="22" covered="25"/><counter type="LINE" missed="34" covered="31"/><counter type="COMPLEXITY" missed="32" covered="25"/><counter type="METHOD" missed="10" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/CPU$exec$_template" sourcefilename="CPU.java"><method name="convolve" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;IIILneureka/acceleration/CPU$exec$Operator;)V" line="902"><counter type="INSTRUCTION" missed="15" covered="435"/><counter type="BRANCH" missed="8" covered="62"/><counter type="LINE" missed="4" covered="89"/><counter type="COMPLEXITY" missed="8" covered="28"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;IIILneureka/acceleration/CPU$exec$Operator;)V" line="1045"><counter type="INSTRUCTION" missed="2" covered="263"/><counter type="BRANCH" missed="5" covered="35"/><counter type="LINE" missed="0" covered="62"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(Lneureka/Tsr;IILneureka/acceleration/CPU$exec$Operator;)V" line="1138"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="746"/><counter type="BRANCH" missed="13" covered="101"/><counter type="LINE" missed="4" covered="166"/><counter type="COMPLEXITY" missed="13" covered="47"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Device.java"><line nr="12" mi="0" ci="7" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="9" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="1" cb="1"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CPU.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="20" mb="0" cb="2"/><line nr="16" mi="0" ci="11" mb="22" cb="17"/><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="18" mi="9" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="9" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="9" mb="0" cb="0"/><line nr="22" mi="0" ci="9" mb="0" cb="0"/><line nr="23" mi="9" ci="0" mb="0" cb="0"/><line nr="24" mi="9" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="12" mb="0" cb="0"/><line nr="28" mi="0" ci="12" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="2"/><line nr="32" mi="0" ci="16" mb="0" cb="2"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="11" mb="0" cb="0"/><line nr="38" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="12" ci="0" mb="0" cb="0"/><line nr="41" mi="11" ci="0" mb="0" cb="0"/><line nr="42" mi="11" ci="0" mb="0" cb="0"/><line nr="44" mi="12" ci="0" mb="0" cb="0"/><line nr="45" mi="11" ci="0" mb="0" cb="0"/><line nr="46" mi="11" ci="0" mb="0" cb="0"/><line nr="48" mi="12" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="11" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="12" mb="0" cb="0"/><line nr="78" mi="0" ci="12" mb="0" cb="0"/><line nr="79" mi="0" ci="12" mb="0" cb="0"/><line nr="80" mi="0" ci="12" mb="0" cb="0"/><line nr="81" mi="0" ci="12" mb="0" cb="0"/><line nr="82" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="9" ci="0" mb="0" cb="0"/><line nr="84" mi="9" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="12" mb="0" cb="2"/><line nr="94" mi="0" ci="22" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="2"/><line nr="168" mi="0" ci="18" mb="0" cb="4"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="1" cb="1"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="13" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="6" ci="0" mb="0" cb="0"/><line nr="199" mi="14" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="2"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="10" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="14" mb="0" cb="0"/><line nr="245" mi="7" ci="0" mb="0" cb="0"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="251" mi="1" ci="0" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="2" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="6" ci="0" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="266" mi="8" ci="0" mb="0" cb="0"/><line nr="277" mi="0" ci="7" mb="0" cb="0"/><line nr="278" mi="0" ci="6" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="2"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="7" mb="0" cb="0"/><line nr="297" mi="0" ci="11" mb="0" cb="0"/><line nr="308" mi="7" ci="0" mb="0" cb="0"/><line nr="309" mi="6" ci="0" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="1" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="2" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="324" mi="6" ci="0" mb="0" cb="0"/><line nr="325" mi="7" ci="0" mb="0" cb="0"/><line nr="328" mi="4" ci="0" mb="0" cb="0"/><line nr="329" mi="6" ci="0" mb="0" cb="0"/><line nr="330" mi="11" ci="0" mb="0" cb="0"/><line nr="343" mi="7" ci="0" mb="0" cb="0"/><line nr="344" mi="6" ci="0" mb="0" cb="0"/><line nr="347" mi="1" ci="0" mb="0" cb="0"/><line nr="349" mi="1" ci="0" mb="0" cb="0"/><line nr="350" mi="1" ci="0" mb="0" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="2" ci="0" mb="2" cb="0"/><line nr="358" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="6" ci="0" mb="0" cb="0"/><line nr="360" mi="3" ci="0" mb="0" cb="0"/><line nr="363" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="6" ci="0" mb="0" cb="0"/><line nr="365" mi="8" ci="0" mb="2" cb="0"/><line nr="378" mi="7" ci="0" mb="0" cb="0"/><line nr="379" mi="6" ci="0" mb="0" cb="0"/><line nr="382" mi="1" ci="0" mb="0" cb="0"/><line nr="384" mi="1" ci="0" mb="0" cb="0"/><line nr="385" mi="1" ci="0" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="0" cb="0"/><line nr="392" mi="2" ci="0" mb="2" cb="0"/><line nr="393" mi="4" ci="0" mb="0" cb="0"/><line nr="394" mi="6" ci="0" mb="0" cb="0"/><line nr="395" mi="3" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="0" cb="0"/><line nr="399" mi="6" ci="0" mb="0" cb="0"/><line nr="400" mi="3" ci="0" mb="0" cb="0"/><line nr="413" mi="0" ci="7" mb="0" cb="0"/><line nr="414" mi="0" ci="6" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="419" mi="0" ci="1" mb="0" cb="0"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><line nr="427" mi="0" ci="2" mb="0" cb="2"/><line nr="428" mi="0" ci="4" mb="0" cb="0"/><line nr="429" mi="0" ci="6" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="0" ci="4" mb="0" cb="0"/><line nr="434" mi="0" ci="6" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="450" mi="0" ci="7" mb="0" cb="0"/><line nr="451" mi="0" ci="6" mb="0" cb="0"/><line nr="454" mi="0" ci="1" mb="0" cb="0"/><line nr="456" mi="0" ci="1" mb="0" cb="0"/><line nr="457" mi="0" ci="1" mb="0" cb="0"/><line nr="462" mi="0" ci="3" mb="0" cb="0"/><line nr="463" mi="0" ci="2" mb="0" cb="2"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="8" mb="1" cb="1"/><line nr="466" mi="6" ci="0" mb="0" cb="0"/><line nr="468" mi="0" ci="8" mb="0" cb="0"/><line nr="471" mi="0" ci="4" mb="0" cb="0"/><line nr="472" mi="0" ci="8" mb="1" cb="1"/><line nr="473" mi="2" ci="0" mb="0" cb="0"/><line nr="475" mi="0" ci="2" mb="0" cb="0"/><line nr="488" mi="0" ci="7" mb="0" cb="0"/><line nr="489" mi="0" ci="6" mb="0" cb="0"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="494" mi="0" ci="1" mb="0" cb="0"/><line nr="495" mi="0" ci="1" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="1" cb="1"/><line nr="503" mi="0" ci="4" mb="0" cb="0"/><line nr="504" mi="0" ci="6" mb="0" cb="0"/><line nr="507" mi="4" ci="0" mb="0" cb="0"/><line nr="508" mi="6" ci="0" mb="0" cb="0"/><line nr="518" mi="0" ci="7" mb="0" cb="0"/><line nr="519" mi="0" ci="10" mb="0" cb="0"/><line nr="522" mi="0" ci="1" mb="0" cb="0"/><line nr="524" mi="0" ci="1" mb="0" cb="0"/><line nr="525" mi="0" ci="1" mb="0" cb="0"/><line nr="529" mi="0" ci="7" mb="0" cb="0"/><line nr="530" mi="0" ci="10" mb="0" cb="0"/><line nr="533" mi="0" ci="1" mb="0" cb="0"/><line nr="535" mi="0" ci="1" mb="0" cb="0"/><line nr="536" mi="0" ci="1" mb="0" cb="0"/><line nr="541" mi="0" ci="8" mb="0" cb="0"/><line nr="542" mi="0" ci="13" mb="0" cb="0"/><line nr="545" mi="0" ci="2" mb="0" cb="0"/><line nr="547" mi="0" ci="1" mb="0" cb="0"/><line nr="548" mi="0" ci="1" mb="0" cb="0"/><line nr="552" mi="0" ci="7" mb="0" cb="0"/><line nr="553" mi="0" ci="10" mb="0" cb="0"/><line nr="556" mi="0" ci="1" mb="0" cb="0"/><line nr="558" mi="0" ci="1" mb="0" cb="0"/><line nr="559" mi="0" ci="1" mb="0" cb="0"/><line nr="565" mi="0" ci="3" mb="0" cb="0"/><line nr="566" mi="0" ci="3" mb="0" cb="0"/><line nr="567" mi="0" ci="2" mb="0" cb="2"/><line nr="568" mi="0" ci="6" mb="0" cb="0"/><line nr="569" mi="0" ci="12" mb="0" cb="0"/><line nr="572" mi="0" ci="7" mb="0" cb="0"/><line nr="573" mi="0" ci="2" mb="0" cb="2"/><line nr="574" mi="0" ci="6" mb="0" cb="0"/><line nr="576" mi="0" ci="6" mb="0" cb="0"/><line nr="588" mi="8" ci="0" mb="0" cb="0"/><line nr="589" mi="10" ci="0" mb="0" cb="0"/><line nr="592" mi="1" ci="0" mb="0" cb="0"/><line nr="594" mi="1" ci="0" mb="0" cb="0"/><line nr="595" mi="1" ci="0" mb="0" cb="0"/><line nr="599" mi="7" ci="0" mb="0" cb="0"/><line nr="600" mi="10" ci="0" mb="0" cb="0"/><line nr="603" mi="1" ci="0" mb="0" cb="0"/><line nr="605" mi="1" ci="0" mb="0" cb="0"/><line nr="606" mi="1" ci="0" mb="0" cb="0"/><line nr="611" mi="0" ci="8" mb="0" cb="0"/><line nr="612" mi="0" ci="10" mb="0" cb="0"/><line nr="615" mi="0" ci="1" mb="0" cb="0"/><line nr="617" mi="0" ci="1" mb="0" cb="0"/><line nr="618" mi="0" ci="1" mb="0" cb="0"/><line nr="622" mi="7" ci="0" mb="0" cb="0"/><line nr="623" mi="10" ci="0" mb="0" cb="0"/><line nr="626" mi="1" ci="0" mb="0" cb="0"/><line nr="628" mi="1" ci="0" mb="0" cb="0"/><line nr="629" mi="1" ci="0" mb="0" cb="0"/><line nr="634" mi="0" ci="3" mb="0" cb="0"/><line nr="635" mi="0" ci="3" mb="0" cb="0"/><line nr="636" mi="0" ci="2" mb="0" cb="2"/><line nr="637" mi="0" ci="6" mb="0" cb="0"/><line nr="638" mi="0" ci="12" mb="0" cb="0"/><line nr="641" mi="0" ci="4" mb="0" cb="0"/><line nr="650" mi="8" ci="0" mb="0" cb="0"/><line nr="651" mi="10" ci="0" mb="0" cb="0"/><line nr="654" mi="1" ci="0" mb="0" cb="0"/><line nr="656" mi="1" ci="0" mb="0" cb="0"/><line nr="657" mi="1" ci="0" mb="0" cb="0"/><line nr="661" mi="7" ci="0" mb="0" cb="0"/><line nr="662" mi="10" ci="0" mb="0" cb="0"/><line nr="665" mi="1" ci="0" mb="0" cb="0"/><line nr="667" mi="1" ci="0" mb="0" cb="0"/><line nr="668" mi="1" ci="0" mb="0" cb="0"/><line nr="673" mi="0" ci="8" mb="0" cb="0"/><line nr="674" mi="0" ci="10" mb="0" cb="0"/><line nr="677" mi="0" ci="1" mb="0" cb="0"/><line nr="679" mi="0" ci="1" mb="0" cb="0"/><line nr="680" mi="0" ci="1" mb="0" cb="0"/><line nr="684" mi="7" ci="0" mb="0" cb="0"/><line nr="685" mi="10" ci="0" mb="0" cb="0"/><line nr="688" mi="1" ci="0" mb="0" cb="0"/><line nr="690" mi="1" ci="0" mb="0" cb="0"/><line nr="691" mi="1" ci="0" mb="0" cb="0"/><line nr="696" mi="0" ci="3" mb="0" cb="0"/><line nr="697" mi="0" ci="3" mb="0" cb="0"/><line nr="698" mi="0" ci="2" mb="0" cb="2"/><line nr="699" mi="0" ci="6" mb="0" cb="0"/><line nr="700" mi="0" ci="12" mb="0" cb="0"/><line nr="703" mi="0" ci="3" mb="0" cb="0"/><line nr="704" mi="1" ci="5" mb="1" cb="1"/><line nr="714" mi="8" ci="0" mb="0" cb="0"/><line nr="715" mi="10" ci="0" mb="0" cb="0"/><line nr="718" mi="1" ci="0" mb="0" cb="0"/><line nr="720" mi="1" ci="0" mb="0" cb="0"/><line nr="721" mi="1" ci="0" mb="0" cb="0"/><line nr="726" mi="0" ci="8" mb="0" cb="0"/><line nr="727" mi="0" ci="10" mb="0" cb="0"/><line nr="730" mi="0" ci="1" mb="0" cb="0"/><line nr="732" mi="0" ci="1" mb="0" cb="0"/><line nr="733" mi="0" ci="1" mb="0" cb="0"/><line nr="738" mi="0" ci="3" mb="0" cb="0"/><line nr="739" mi="0" ci="3" mb="0" cb="0"/><line nr="740" mi="0" ci="2" mb="0" cb="2"/><line nr="741" mi="0" ci="6" mb="0" cb="0"/><line nr="742" mi="0" ci="12" mb="0" cb="0"/><line nr="745" mi="0" ci="7" mb="0" cb="0"/><line nr="746" mi="0" ci="2" mb="0" cb="2"/><line nr="747" mi="0" ci="8" mb="0" cb="0"/><line nr="749" mi="0" ci="4" mb="0" cb="0"/><line nr="750" mi="0" ci="5" mb="0" cb="0"/><line nr="752" mi="0" ci="6" mb="0" cb="0"/><line nr="763" mi="8" ci="0" mb="0" cb="0"/><line nr="764" mi="10" ci="0" mb="0" cb="0"/><line nr="767" mi="1" ci="0" mb="0" cb="0"/><line nr="769" mi="1" ci="0" mb="0" cb="0"/><line nr="770" mi="1" ci="0" mb="0" cb="0"/><line nr="775" mi="0" ci="8" mb="0" cb="0"/><line nr="776" mi="0" ci="10" mb="0" cb="0"/><line nr="779" mi="0" ci="1" mb="0" cb="0"/><line nr="781" mi="0" ci="1" mb="0" cb="0"/><line nr="782" mi="0" ci="1" mb="0" cb="0"/><line nr="787" mi="0" ci="3" mb="0" cb="0"/><line nr="788" mi="0" ci="3" mb="0" cb="0"/><line nr="789" mi="0" ci="2" mb="0" cb="2"/><line nr="790" mi="0" ci="6" mb="0" cb="0"/><line nr="791" mi="0" ci="5" mb="0" cb="0"/><line nr="792" mi="0" ci="5" mb="0" cb="0"/><line nr="793" mi="0" ci="2" mb="0" cb="0"/><line nr="797" mi="0" ci="7" mb="0" cb="0"/><line nr="798" mi="0" ci="2" mb="0" cb="2"/><line nr="799" mi="0" ci="9" mb="0" cb="0"/><line nr="800" mi="0" ci="2" mb="0" cb="0"/><line nr="801" mi="0" ci="5" mb="0" cb="0"/><line nr="802" mi="0" ci="4" mb="0" cb="0"/><line nr="805" mi="0" ci="8" mb="0" cb="0"/><line nr="806" mi="0" ci="5" mb="0" cb="0"/><line nr="807" mi="0" ci="2" mb="0" cb="0"/><line nr="808" mi="0" ci="4" mb="0" cb="0"/><line nr="819" mi="8" ci="0" mb="0" cb="0"/><line nr="820" mi="10" ci="0" mb="0" cb="0"/><line nr="823" mi="1" ci="0" mb="0" cb="0"/><line nr="825" mi="1" ci="0" mb="0" cb="0"/><line nr="826" mi="1" ci="0" mb="0" cb="0"/><line nr="831" mi="0" ci="8" mb="0" cb="0"/><line nr="832" mi="0" ci="10" mb="0" cb="0"/><line nr="835" mi="0" ci="1" mb="0" cb="0"/><line nr="837" mi="0" ci="1" mb="0" cb="0"/><line nr="838" mi="0" ci="1" mb="0" cb="0"/><line nr="843" mi="0" ci="3" mb="0" cb="0"/><line nr="844" mi="0" ci="3" mb="0" cb="0"/><line nr="845" mi="0" ci="2" mb="0" cb="2"/><line nr="846" mi="0" ci="6" mb="0" cb="0"/><line nr="847" mi="0" ci="12" mb="0" cb="0"/><line nr="850" mi="0" ci="7" mb="0" cb="0"/><line nr="851" mi="0" ci="2" mb="0" cb="2"/><line nr="852" mi="0" ci="8" mb="0" cb="0"/><line nr="854" mi="0" ci="4" mb="0" cb="0"/><line nr="855" mi="0" ci="5" mb="0" cb="0"/><line nr="857" mi="0" ci="6" mb="0" cb="0"/><line nr="865" mi="0" ci="2" mb="0" cb="0"/><line nr="866" mi="0" ci="3" mb="1" cb="1"/><line nr="867" mi="10" ci="0" mb="2" cb="0"/><line nr="869" mi="0" ci="2" mb="1" cb="1"/><line nr="870" mi="0" ci="5" mb="0" cb="0"/><line nr="872" mi="3" ci="0" mb="0" cb="0"/><line nr="873" mi="4" ci="0" mb="0" cb="0"/><line nr="874" mi="3" ci="0" mb="0" cb="0"/><line nr="875" mi="7" ci="0" mb="2" cb="0"/><line nr="876" mi="4" ci="0" mb="0" cb="0"/><line nr="877" mi="13" ci="0" mb="2" cb="0"/><line nr="878" mi="10" ci="0" mb="0" cb="0"/><line nr="879" mi="4" ci="0" mb="0" cb="0"/><line nr="880" mi="1" ci="0" mb="0" cb="0"/><line nr="881" mi="4" ci="0" mb="0" cb="0"/><line nr="883" mi="7" ci="0" mb="2" cb="0"/><line nr="885" mi="4" ci="0" mb="0" cb="0"/><line nr="886" mi="1" ci="0" mb="0" cb="0"/><line nr="887" mi="2" ci="0" mb="0" cb="0"/><line nr="888" mi="1" ci="0" mb="0" cb="0"/><line nr="891" mi="0" ci="1" mb="0" cb="0"/><line nr="902" mi="0" ci="3" mb="0" cb="0"/><line nr="903" mi="0" ci="3" mb="0" cb="0"/><line nr="904" mi="0" ci="3" mb="0" cb="0"/><line nr="905" mi="0" ci="3" mb="0" cb="0"/><line nr="906" mi="0" ci="3" mb="0" cb="0"/><line nr="907" mi="0" ci="3" mb="0" cb="0"/><line nr="908" mi="0" ci="3" mb="0" cb="0"/><line nr="909" mi="0" ci="3" mb="0" cb="0"/><line nr="915" mi="0" ci="2" mb="0" cb="2"/><line nr="916" mi="0" ci="3" mb="0" cb="2"/><line nr="918" mi="0" ci="2" mb="0" cb="0"/><line nr="919" mi="0" ci="3" mb="0" cb="2"/><line nr="920" mi="0" ci="7" mb="0" cb="2"/><line nr="921" mi="0" ci="6" mb="0" cb="0"/><line nr="922" mi="0" ci="7" mb="0" cb="0"/><line nr="923" mi="0" ci="7" mb="0" cb="2"/><line nr="924" mi="0" ci="6" mb="0" cb="0"/><line nr="925" mi="0" ci="5" mb="0" cb="0"/><line nr="926" mi="0" ci="7" mb="1" cb="1"/><line nr="927" mi="0" ci="4" mb="0" cb="0"/><line nr="928" mi="0" ci="6" mb="0" cb="0"/><line nr="930" mi="0" ci="2" mb="0" cb="0"/><line nr="934" mi="0" ci="2" mb="0" cb="0"/><line nr="935" mi="0" ci="2" mb="0" cb="0"/><line nr="936" mi="0" ci="2" mb="0" cb="0"/><line nr="937" mi="0" ci="2" mb="0" cb="2"/><line nr="938" mi="0" ci="7" mb="0" cb="2"/><line nr="939" mi="0" ci="2" mb="0" cb="2"/><line nr="940" mi="0" ci="8" mb="0" cb="0"/><line nr="941" mi="0" ci="2" mb="0" cb="0"/><line nr="942" mi="0" ci="3" mb="0" cb="0"/><line nr="944" mi="0" ci="14" mb="2" cb="2"/><line nr="945" mi="0" ci="7" mb="0" cb="0"/><line nr="946" mi="0" ci="7" mb="0" cb="0"/><line nr="947" mi="0" ci="14" mb="0" cb="4"/><line nr="948" mi="0" ci="11" mb="1" cb="3"/><line nr="949" mi="0" ci="7" mb="0" cb="2"/><line nr="950" mi="0" ci="6" mb="0" cb="0"/><line nr="951" mi="0" ci="7" mb="0" cb="0"/><line nr="952" mi="0" ci="7" mb="0" cb="2"/><line nr="953" mi="0" ci="6" mb="0" cb="0"/><line nr="954" mi="0" ci="5" mb="0" cb="0"/><line nr="955" mi="0" ci="7" mb="1" cb="1"/><line nr="956" mi="0" ci="4" mb="0" cb="0"/><line nr="957" mi="0" ci="6" mb="0" cb="0"/><line nr="959" mi="0" ci="2" mb="0" cb="0"/><line nr="961" mi="0" ci="3" mb="0" cb="0"/><line nr="964" mi="2" ci="0" mb="0" cb="0"/><line nr="968" mi="0" ci="6" mb="0" cb="0"/><line nr="970" mi="0" ci="3" mb="0" cb="0"/><line nr="971" mi="0" ci="1" mb="0" cb="0"/><line nr="972" mi="0" ci="1" mb="0" cb="0"/><line nr="975" mi="0" ci="3" mb="0" cb="2"/><line nr="976" mi="0" ci="2" mb="0" cb="0"/><line nr="977" mi="0" ci="3" mb="0" cb="2"/><line nr="978" mi="0" ci="7" mb="1" cb="1"/><line nr="979" mi="6" ci="0" mb="0" cb="0"/><line nr="980" mi="5" ci="0" mb="0" cb="0"/><line nr="982" mi="0" ci="7" mb="0" cb="2"/><line nr="983" mi="0" ci="11" mb="0" cb="0"/><line nr="985" mi="0" ci="10" mb="0" cb="0"/><line nr="988" mi="0" ci="2" mb="0" cb="0"/><line nr="992" mi="0" ci="2" mb="0" cb="0"/><line nr="993" mi="0" ci="2" mb="0" cb="0"/><line nr="994" mi="0" ci="2" mb="0" cb="0"/><line nr="995" mi="0" ci="2" mb="0" cb="2"/><line nr="996" mi="0" ci="7" mb="0" cb="2"/><line nr="997" mi="0" ci="2" mb="0" cb="2"/><line nr="998" mi="0" ci="2" mb="0" cb="0"/><line nr="999" mi="0" ci="7" mb="0" cb="2"/><line nr="1000" mi="0" ci="17" mb="0" cb="6"/><line nr="1002" mi="0" ci="2" mb="0" cb="2"/><line nr="1003" mi="0" ci="8" mb="0" cb="0"/><line nr="1005" mi="0" ci="2" mb="0" cb="0"/><line nr="1006" mi="0" ci="2" mb="0" cb="0"/><line nr="1007" mi="0" ci="1" mb="0" cb="0"/><line nr="1008" mi="0" ci="7" mb="1" cb="1"/><line nr="1009" mi="0" ci="7" mb="0" cb="0"/><line nr="1010" mi="0" ci="7" mb="0" cb="2"/><line nr="1011" mi="0" ci="11" mb="1" cb="3"/><line nr="1012" mi="0" ci="6" mb="0" cb="0"/><line nr="1013" mi="0" ci="4" mb="0" cb="0"/><line nr="1014" mi="0" ci="2" mb="0" cb="0"/><line nr="1016" mi="0" ci="7" mb="0" cb="2"/><line nr="1017" mi="0" ci="11" mb="0" cb="0"/><line nr="1019" mi="0" ci="10" mb="0" cb="0"/><line nr="1021" mi="0" ci="3" mb="0" cb="0"/><line nr="1024" mi="2" ci="0" mb="0" cb="0"/><line nr="1029" mi="0" ci="6" mb="0" cb="0"/><line nr="1031" mi="0" ci="3" mb="0" cb="0"/><line nr="1032" mi="0" ci="1" mb="0" cb="0"/><line nr="1033" mi="0" ci="1" mb="0" cb="0"/><line nr="1036" mi="0" ci="1" mb="0" cb="0"/><line nr="1045" mi="0" ci="3" mb="0" cb="0"/><line nr="1046" mi="0" ci="3" mb="0" cb="0"/><line nr="1047" mi="1" ci="6" mb="1" cb="1"/><line nr="1048" mi="0" ci="3" mb="0" cb="0"/><line nr="1049" mi="0" ci="4" mb="0" cb="0"/><line nr="1050" mi="0" ci="3" mb="0" cb="0"/><line nr="1051" mi="0" ci="3" mb="0" cb="0"/><line nr="1052" mi="0" ci="3" mb="0" cb="0"/><line nr="1057" mi="0" ci="2" mb="0" cb="2"/><line nr="1058" mi="0" ci="3" mb="0" cb="2"/><line nr="1059" mi="0" ci="2" mb="0" cb="0"/><line nr="1060" mi="0" ci="3" mb="0" cb="2"/><line nr="1061" mi="0" ci="7" mb="0" cb="2"/><line nr="1062" mi="0" ci="6" mb="0" cb="0"/><line nr="1063" mi="0" ci="7" mb="0" cb="0"/><line nr="1064" mi="0" ci="7" mb="0" cb="2"/><line nr="1065" mi="0" ci="6" mb="0" cb="0"/><line nr="1066" mi="0" ci="5" mb="0" cb="0"/><line nr="1067" mi="0" ci="7" mb="1" cb="1"/><line nr="1068" mi="0" ci="4" mb="0" cb="0"/><line nr="1069" mi="0" ci="6" mb="0" cb="0"/><line nr="1071" mi="0" ci="2" mb="0" cb="0"/><line nr="1075" mi="0" ci="8" mb="0" cb="0"/><line nr="1076" mi="0" ci="2" mb="0" cb="0"/><line nr="1079" mi="0" ci="3" mb="0" cb="0"/><line nr="1080" mi="0" ci="1" mb="0" cb="0"/><line nr="1081" mi="0" ci="1" mb="0" cb="0"/><line nr="1084" mi="0" ci="3" mb="0" cb="2"/><line nr="1085" mi="0" ci="2" mb="0" cb="0"/><line nr="1086" mi="0" ci="3" mb="0" cb="2"/><line nr="1087" mi="0" ci="7" mb="0" cb="2"/><line nr="1088" mi="0" ci="6" mb="0" cb="0"/><line nr="1089" mi="0" ci="7" mb="0" cb="0"/><line nr="1090" mi="0" ci="7" mb="0" cb="2"/><line nr="1091" mi="0" ci="4" mb="0" cb="0"/><line nr="1092" mi="0" ci="6" mb="0" cb="0"/><line nr="1094" mi="0" ci="2" mb="0" cb="0"/><line nr="1098" mi="0" ci="2" mb="0" cb="0"/><line nr="1099" mi="0" ci="2" mb="0" cb="0"/><line nr="1100" mi="0" ci="2" mb="0" cb="0"/><line nr="1101" mi="0" ci="2" mb="0" cb="2"/><line nr="1102" mi="0" ci="7" mb="0" cb="2"/><line nr="1103" mi="0" ci="2" mb="0" cb="2"/><line nr="1104" mi="0" ci="8" mb="0" cb="0"/><line nr="1105" mi="0" ci="2" mb="0" cb="0"/><line nr="1106" mi="0" ci="3" mb="0" cb="0"/><line nr="1108" mi="0" ci="7" mb="0" cb="2"/><line nr="1109" mi="0" ci="7" mb="0" cb="0"/><line nr="1110" mi="0" ci="7" mb="0" cb="0"/><line nr="1111" mi="0" ci="7" mb="0" cb="2"/><line nr="1112" mi="0" ci="4" mb="0" cb="0"/><line nr="1113" mi="0" ci="4" mb="0" cb="0"/><line nr="1114" mi="1" ci="10" mb="2" cb="2"/><line nr="1115" mi="0" ci="2" mb="0" cb="0"/><line nr="1117" mi="0" ci="3" mb="0" cb="0"/><line nr="1120" mi="0" ci="11" mb="1" cb="3"/><line nr="1121" mi="0" ci="2" mb="0" cb="0"/><line nr="1126" mi="0" ci="6" mb="0" cb="0"/><line nr="1128" mi="0" ci="3" mb="0" cb="0"/><line nr="1129" mi="0" ci="1" mb="0" cb="0"/><line nr="1130" mi="0" ci="1" mb="0" cb="0"/><line nr="1132" mi="0" ci="1" mb="0" cb="0"/><line nr="1138" mi="0" ci="3" mb="0" cb="0"/><line nr="1139" mi="0" ci="3" mb="0" cb="0"/><line nr="1140" mi="0" ci="4" mb="0" cb="0"/><line nr="1141" mi="0" ci="3" mb="0" cb="0"/><line nr="1142" mi="0" ci="3" mb="0" cb="0"/><line nr="1143" mi="0" ci="3" mb="0" cb="2"/><line nr="1144" mi="0" ci="2" mb="0" cb="0"/><line nr="1145" mi="0" ci="3" mb="0" cb="2"/><line nr="1146" mi="0" ci="6" mb="0" cb="0"/><line nr="1147" mi="0" ci="2" mb="0" cb="0"/><line nr="1150" mi="0" ci="10" mb="0" cb="0"/><line nr="1152" mi="0" ci="3" mb="0" cb="0"/><line nr="1153" mi="0" ci="1" mb="0" cb="0"/><line nr="1154" mi="0" ci="1" mb="0" cb="0"/><line nr="1156" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="721" covered="1843"/><counter type="BRANCH" missed="60" covered="167"/><counter type="LINE" missed="158" covered="379"/><counter type="COMPLEXITY" missed="103" covered="155"/><counter type="METHOD" missed="52" covered="74"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="AbstractDevice.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="2"/><line nr="43" mi="1" ci="7" mb="1" cb="1"/><line nr="44" mi="0" ci="28" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="48" mi="1" ci="7" mb="1" cb="1"/><line nr="49" mi="0" ci="28" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="4"/><line nr="58" mi="0" ci="10" mb="0" cb="4"/><line nr="60" mi="0" ci="19" mb="0" cb="8"/><line nr="63" mi="0" ci="11" mb="0" cb="4"/><line nr="64" mi="0" ci="24" mb="0" cb="0"/><line nr="65" mi="0" ci="14" mb="0" cb="0"/><line nr="67" mi="0" ci="24" mb="0" cb="0"/><line nr="68" mi="0" ci="14" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="2"/><line nr="80" mi="0" ci="9" mb="1" cb="3"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="2"/><line nr="89" mi="0" ci="25" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="2" cb="4"/><line nr="98" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="14" ci="0" mb="2" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="9" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="1" cb="1"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="13" mb="0" cb="0"/><line nr="107" mi="0" ci="29" mb="0" cb="0"/><line nr="108" mi="0" ci="25" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="9" ci="0" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="11" ci="0" mb="0" cb="0"/><line nr="116" mi="25" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="1" cb="1"/><line nr="124" mi="5" ci="10" mb="1" cb="1"/><line nr="125" mi="0" ci="14" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="8" ci="0" mb="0" cb="0"/><line nr="134" mi="7" ci="0" mb="0" cb="0"/><line nr="135" mi="12" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="2" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="1" cb="1"/><line nr="143" mi="0" ci="13" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="12" mb="0" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="26" mb="0" cb="0"/><line nr="151" mi="0" ci="32" mb="0" cb="0"/><line nr="152" mi="3" ci="2" mb="1" cb="1"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="5" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="2"/><line nr="163" mi="0" ci="13" mb="0" cb="6"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="1" cb="1"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="7" ci="0" mb="2" cb="0"/><line nr="180" mi="7" ci="0" mb="2" cb="0"/><line nr="181" mi="2" ci="0" mb="2" cb="0"/><line nr="183" mi="11" ci="0" mb="0" cb="0"/><line nr="184" mi="12" ci="0" mb="0" cb="0"/><line nr="185" mi="7" ci="0" mb="2" cb="0"/><line nr="186" mi="13" ci="0" mb="0" cb="0"/><line nr="187" mi="12" ci="0" mb="0" cb="0"/><line nr="188" mi="14" ci="0" mb="4" cb="0"/><line nr="189" mi="11" ci="0" mb="0" cb="0"/><line nr="190" mi="12" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="2" cb="0"/><line nr="192" mi="11" ci="0" mb="0" cb="0"/><line nr="193" mi="13" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="2"/><line nr="201" mi="0" ci="7" mb="0" cb="2"/><line nr="202" mi="0" ci="10" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="1" cb="1"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="8" mb="0" cb="2"/><line nr="220" mi="0" ci="10" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="2"/><line nr="228" mi="0" ci="13" mb="0" cb="2"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="0"/><line nr="237" mi="0" ci="13" mb="0" cb="4"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="13" mb="1" cb="3"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="10" mb="0" cb="2"/><line nr="246" mi="0" ci="8" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="289" covered="833"/><counter type="BRANCH" missed="33" covered="75"/><counter type="LINE" missed="34" covered="110"/><counter type="COMPLEXITY" missed="25" covered="44"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="1010" covered="2720"/><counter type="BRANCH" missed="94" covered="243"/><counter type="LINE" missed="192" covered="499"/><counter type="COMPLEXITY" missed="129" covered="202"/><counter type="METHOD" missed="53" covered="89"/><counter type="CLASS" missed="0" covered="6"/></package><package name="neureka/calculus/environment"><class name="neureka/calculus/environment/Cache" sourcefilename="Cache.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FUNCTIONS" desc="()Ljava/util/Map;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="free" desc="(Lneureka/autograd/GraphLock;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preprocess" desc="([Lneureka/Tsr;Lneureka/calculus/Function;Ljava/util/function/Supplier;II)Lneureka/Tsr;" line="31"><counter type="INSTRUCTION" missed="0" covered="146"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_get" desc="(Lneureka/autograd/GraphNode;II)Lneureka/Tsr;" line="70"><counter type="INSTRUCTION" missed="11" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_put" desc="(Lneureka/Tsr;Lneureka/autograd/GraphNode;II)V" line="81"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_keyed" desc="(I)I" line="95"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_put$2" desc="(Ljava/lang/Long;Ljava/lang/Long;)I" line="85"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$preprocess$1" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lneureka/autograd/GraphLock;Lneureka/autograd/GraphLock;)I" line="21"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="277"/><counter type="BRANCH" missed="3" covered="33"/><counter type="LINE" missed="1" covered="44"/><counter type="COMPLEXITY" missed="3" covered="25"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/Types" sourcefilename="Types.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="252"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOperation" desc="(Ljava/lang/String;)Z" line="49"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOperation" desc="(I)Z" line="52"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFunction" desc="(Ljava/lang/String;)Z" line="56"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFunction" desc="(I)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIndexer" desc="(Ljava/lang/String;)Z" line="63"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isIndexer" desc="(I)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConvection" desc="(Ljava/lang/String;)Z" line="70"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConvection" desc="(I)Z" line="73"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCommutative" desc="(Ljava/lang/String;)Z" line="78"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="17" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCommutative" desc="(I)Z" line="99"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="316"/><counter type="BRANCH" missed="18" covered="17"/><counter type="LINE" missed="23" covered="14"/><counter type="COMPLEXITY" missed="23" covered="13"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Types.java"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="196" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="9" mb="0" cb="2"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="2"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="2"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="2"/><line nr="56" mi="9" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="2"/><line nr="63" mi="9" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="20" mb="0" cb="4"/><line nr="70" mi="9" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="20" mb="1" cb="3"/><line nr="78" mi="8" ci="0" mb="17" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="316"/><counter type="BRANCH" missed="18" covered="17"/><counter type="LINE" missed="23" covered="14"/><counter type="COMPLEXITY" missed="23" covered="13"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Cache.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="13" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="2"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="16" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="2"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="4"/><line nr="43" mi="0" ci="4" mb="0" cb="4"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="16" mb="0" cb="2"/><line nr="48" mi="0" ci="4" mb="0" cb="2"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="20" mb="1" cb="5"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="1" cb="1"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="15" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="2"/><line nr="72" mi="0" ci="10" mb="1" cb="1"/><line nr="73" mi="11" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="15" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="6" mb="0" cb="2"/><line nr="85" mi="0" ci="11" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="11" covered="277"/><counter type="BRANCH" missed="3" covered="33"/><counter type="LINE" missed="1" covered="44"/><counter type="COMPLEXITY" missed="3" covered="25"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="96" covered="593"/><counter type="BRANCH" missed="21" covered="50"/><counter type="LINE" missed="24" covered="58"/><counter type="COMPLEXITY" missed="26" covered="38"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/calculus"><class name="neureka/calculus/Function$setup" sourcefilename="Function.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="commit" desc="([Lneureka/Tsr;Ljava/lang/String;Z)Lneureka/Tsr;" line="24"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commit" desc="(Lneureka/Tsr;[Lneureka/Tsr;Ljava/lang/String;Z)Lneureka/Tsr;" line="28"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commit" desc="([Lneureka/Tsr;Lneureka/calculus/Function;)Lneureka/Tsr;" line="32"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="commit" desc="(Lneureka/Tsr;[Lneureka/Tsr;Lneureka/calculus/Function;)Lneureka/Tsr;" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commit" desc="(Lneureka/Tsr;[Lneureka/Tsr;Lneureka/calculus/Function;Ljava/util/function/Supplier;)Lneureka/Tsr;" line="41"><counter type="INSTRUCTION" missed="0" covered="99"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$commit$0" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="121"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/Function" sourcefilename="Function.java"><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Function.java"><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="16" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="16" mb="0" cb="2"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="6"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="130"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="2" covered="25"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="8" covered="130"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="2" covered="25"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/utility"><class name="neureka/utility/DataHelper" sourcefilename="DataHelper.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="longHash" desc="(Ljava/lang/String;)J" line="10"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDoubleOf" desc="(J)D" line="21"><counter type="INSTRUCTION" missed="0" covered="186"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntegerOf" desc="(JI)I" line="48"><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntegerOf" desc="(JII)I" line="54"><counter type="INSTRUCTION" missed="2" covered="131"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomDouble" desc="()D" line="63"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleToFloat" desc="([D)[F" line="86"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatToDouble" desc="([F)[D" line="95"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="83" covered="489"/><counter type="BRANCH" missed="10" covered="22"/><counter type="LINE" missed="17" covered="43"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DataHelper.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="7" mb="0" cb="2"/><line nr="14" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="18" mb="0" cb="0"/><line nr="23" mi="0" ci="75" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="4"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="15" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="2"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="2"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="19" mb="0" cb="2"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="75" mb="0" cb="0"/><line nr="49" mi="0" ci="16" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="75" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="2" ci="6" mb="1" cb="1"/><line nr="57" mi="0" ci="21" mb="0" cb="2"/><line nr="58" mi="0" ci="14" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="16" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="4" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="15" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="2" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="1" cb="1"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="15" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="2"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="15" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="489"/><counter type="BRANCH" missed="10" covered="22"/><counter type="LINE" missed="17" covered="43"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="83" covered="489"/><counter type="BRANCH" missed="10" covered="22"/><counter type="LINE" missed="17" covered="43"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></package><package name="neureka/acceleration/opencl"><class name="neureka/acceleration/opencl/OpenCLDevice" sourcefilename="OpenCLDevice.java"><method name="CLDeviceID" desc="()Lorg/jocl/cl_device_id;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/acceleration/opencl/OpenCLPlatform;Lorg/jocl/cl_device_id;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tensors" desc="()Ljava/util/Collection;" line="67"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="()V" line="81"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="88"><counter type="INSTRUCTION" missed="9" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="100"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/acceleration/Device;" line="106"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_add" desc="(Lneureka/Tsr;ILneureka/acceleration/opencl/OpenCLDevice$cl_tsr;)Lneureka/acceleration/Device;" line="117"><counter type="INSTRUCTION" missed="8" covered="287"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Lneureka/Tsr;)Z" line="201"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_store" desc="(Lneureka/Tsr;Lneureka/acceleration/opencl/OpenCLDevice$cl_tsr;IZ)V" line="205"><counter type="INSTRUCTION" missed="21" covered="72"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rmv" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="246"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_rmv" desc="(Lneureka/acceleration/opencl/utility/WeakTensorReference;)V" line="255"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overwrite64" desc="(Lneureka/Tsr;[D)Lneureka/acceleration/Device;" line="267"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overwrite32" desc="(Lneureka/Tsr;[F)Lneureka/acceleration/Device;" line="288"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swap" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/acceleration/Device;" line="309"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value64Of" desc="(Lneureka/Tsr;)[D" line="318"><counter type="INSTRUCTION" missed="26" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value32Of" desc="(Lneureka/Tsr;)[F" line="340"><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_enqueue" desc="([Lneureka/Tsr;II)V" line="363"><counter type="INSTRUCTION" missed="158" covered="307"/><counter type="BRANCH" missed="10" covered="9"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_enqueue" desc="(Lneureka/Tsr;DII)V" line="426"><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="452"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vendor" desc="()Ljava/lang/String;" line="456"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="version" desc="()Ljava/lang/String;" line="460"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Ljava/lang/String;" line="464"><counter type="INSTRUCTION" missed="20" covered="19"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxComputeUnits" desc="()I" line="477"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWorkItemSimensions" desc="()J" line="481"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWorkItemSizes" desc="()[J" line="485"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWorkGroupSize" desc="()J" line="489"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxClockFrequenzy" desc="()J" line="493"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxAddressBits" desc="()I" line="497"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxMemAllocSize" desc="()J" line="501"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalMemSize" desc="()J" line="505"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorCorrectionSupport" desc="()I" line="509"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="localMemType" desc="()I" line="513"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="localMemSize" desc="()J" line="517"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxConstantBufferSize" desc="()J" line="521"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxConstantBufferSizeKB" desc="()J" line="525"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="queueExecIsOrdered" desc="()Z" line="529"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="queueProfilingIsEnabled" desc="()Z" line="534"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="imageSupport" desc="()I" line="539"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxReadImageArgs" desc="()I" line="543"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWriteImageArgs" desc="()I" line="547"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleFPConfig" desc="()J" line="551"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="image2DMaxWidth" desc="()J" line="555"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="image2DMaxHeight" desc="()J" line="559"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="image3DMaxWidth" desc="()J" line="563"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="image3DMaxHeight" desc="()J" line="567"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="image3DMaxDepth" desc="()J" line="571"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthChar" desc="()I" line="575"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthShort" desc="()I" line="579"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthInt" desc="()I" line="583"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthLong" desc="()I" line="587"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthFloat" desc="()I" line="591"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthDouble" desc="()I" line="595"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_add$3" desc="(Lneureka/acceleration/opencl/utility/WeakTensorReference;)V" line="187"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$dispose$2" desc="(Ljava/lang/Object;Lneureka/acceleration/opencl/OpenCLDevice$cl_tsr;)V" line="81"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$tensors$1" desc="(Ljava/util/Collection;Ljava/lang/Object;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="498" covered="1113"/><counter type="BRANCH" missed="34" covered="51"/><counter type="LINE" missed="68" covered="168"/><counter type="COMPLEXITY" missed="56" covered="47"/><counter type="METHOD" missed="29" covered="28"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/OpenCLPlatform$Parser" sourcefilename="OpenCLPlatform.java"/><class name="neureka/acceleration/opencl/OpenCLPlatform" sourcefilename="OpenCLPlatform.java"><method name="kernelNameOf" desc="(I)Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jocl/cl_platform_id;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recompile" desc="()V" line="102"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_compile" desc="([Lorg/jocl/cl_device_id;)V" line="112"><counter type="INSTRUCTION" missed="10" covered="183"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convolve_kernels_of" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;" line="186"><counter type="INSTRUCTION" missed="0" covered="190"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getID" desc="()Lorg/jocl/cl_platform_id;" line="443"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDevices" desc="()Ljava/util/List;" line="447"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKernels" desc="()Ljava/util/Map;" line="451"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContext" desc="()Lorg/jocl/cl_context;" line="455"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PLATFORMS" desc="()Ljava/util/List;" line="459"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convolve_kernels_of$3" desc="([Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" line="211"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convolve_kernels_of$2" desc="(Ljava/lang/String;)Ljava/lang/String;" line="206"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convolve_kernels_of$1" desc="(Ljava/lang/String;)Ljava/lang/String;" line="192"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_compile$0" desc="(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/String;Ljava/lang/String;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="130"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="741"/><counter type="BRANCH" missed="2" covered="26"/><counter type="LINE" missed="2" covered="144"/><counter type="COMPLEXITY" missed="3" covered="26"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/OpenCLPlatform$_setup" sourcefilename="OpenCLPlatform.java"><method name="findAllPlatforms" desc="()Ljava/util/List;" line="467"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFile" desc="(Ljava/io/InputStream;)Ljava/lang/String;" line="491"><counter type="INSTRUCTION" missed="7" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="463"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="81"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/OpenCLDevice$DeviceQuery" sourcefilename="OpenCLDevice.java"><method name="&lt;init&gt;" desc="()V" line="598"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInt" desc="(Lorg/jocl/cl_device_id;I)I" line="609"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInts" desc="(Lorg/jocl/cl_device_id;II)[I" line="622"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLong" desc="(Lorg/jocl/cl_device_id;I)J" line="636"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLongs" desc="(Lorg/jocl/cl_device_id;II)[J" line="649"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_device_id;I)Ljava/lang/String;" line="664"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_platform_id;I)Ljava/lang/String;" line="685"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="(Lorg/jocl/cl_device_id;I)J" line="705"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSizes" desc="(Lorg/jocl/cl_device_id;II)[J" line="720"><counter type="INSTRUCTION" missed="17" covered="41"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="130"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="8" covered="23"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/OpenCLDevice$cl_data" sourcefilename="OpenCLDevice.java"><method name="&lt;init&gt;" desc="(Lneureka/acceleration/opencl/OpenCLDevice;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/OpenCLDevice$cl_tsr" sourcefilename="OpenCLDevice.java"><method name="&lt;init&gt;" desc="(Lneureka/acceleration/opencl/OpenCLDevice;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OpenCLDevice.java"><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="13" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="1" cb="1"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="2"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="1" cb="3"/><line nr="123" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="13" mb="0" cb="2"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="17" mb="0" cb="2"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="21" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="2"/><line nr="145" mi="0" ci="11" mb="0" cb="2"/><line nr="146" mi="0" ci="10" mb="0" cb="0"/><line nr="151" mi="0" ci="30" mb="0" cb="6"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="161" mi="0" ci="14" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="2"/><line nr="171" mi="0" ci="15" mb="0" cb="0"/><line nr="173" mi="0" ci="14" mb="0" cb="0"/><line nr="175" mi="0" ci="11" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="13" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="3" mb="1" cb="1"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="4" ci="4" mb="1" cb="1"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="8" ci="0" mb="2" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="10" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="2"/><line nr="232" mi="0" ci="17" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="2" ci="2" mb="1" cb="1"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="6" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="2"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="260" mi="0" ci="7" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="6" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="0" mb="2" cb="0"/><line nr="269" mi="7" ci="0" mb="0" cb="0"/><line nr="271" mi="15" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="6" ci="0" mb="0" cb="0"/><line nr="289" mi="4" ci="0" mb="2" cb="0"/><line nr="290" mi="16" ci="0" mb="0" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="302" mi="6" ci="0" mb="0" cb="0"/><line nr="304" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="0" cb="0"/><line nr="310" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="6" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="1" cb="1"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="15" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="334" mi="2" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="6" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="1" cb="1"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="15" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="356" mi="5" ci="0" mb="0" cb="0"/><line nr="363" mi="0" ci="11" mb="7" cb="2"/><line nr="365" mi="0" ci="2" mb="0" cb="2"/><line nr="366" mi="6" ci="9" mb="1" cb="1"/><line nr="367" mi="0" ci="1" mb="0" cb="0"/><line nr="369" mi="0" ci="21" mb="0" cb="0"/><line nr="371" mi="0" ci="1" mb="0" cb="0"/><line nr="372" mi="22" ci="0" mb="0" cb="0"/><line nr="373" mi="22" ci="0" mb="0" cb="0"/><line nr="374" mi="22" ci="0" mb="0" cb="0"/><line nr="375" mi="22" ci="0" mb="0" cb="0"/><line nr="376" mi="22" ci="0" mb="0" cb="0"/><line nr="377" mi="22" ci="0" mb="0" cb="0"/><line nr="378" mi="15" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="10" mb="1" cb="1"/><line nr="386" mi="1" ci="7" mb="1" cb="1"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="389" mi="0" ci="7" mb="0" cb="0"/><line nr="391" mi="0" ci="10" mb="0" cb="0"/><line nr="392" mi="0" ci="12" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="2"/><line nr="394" mi="0" ci="8" mb="0" cb="0"/><line nr="395" mi="0" ci="15" mb="0" cb="0"/><line nr="396" mi="0" ci="8" mb="0" cb="0"/><line nr="397" mi="0" ci="17" mb="0" cb="0"/><line nr="398" mi="0" ci="15" mb="0" cb="0"/><line nr="399" mi="0" ci="13" mb="0" cb="0"/><line nr="402" mi="0" ci="12" mb="0" cb="0"/><line nr="403" mi="0" ci="8" mb="0" cb="0"/><line nr="404" mi="0" ci="15" mb="0" cb="0"/><line nr="405" mi="0" ci="8" mb="0" cb="0"/><line nr="406" mi="0" ci="17" mb="0" cb="0"/><line nr="407" mi="0" ci="8" mb="0" cb="0"/><line nr="408" mi="0" ci="17" mb="0" cb="0"/><line nr="409" mi="0" ci="15" mb="0" cb="0"/><line nr="410" mi="0" ci="12" mb="0" cb="0"/><line nr="412" mi="0" ci="18" mb="0" cb="0"/><line nr="422" mi="0" ci="1" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><line nr="427" mi="0" ci="9" mb="0" cb="0"/><line nr="428" mi="0" ci="7" mb="0" cb="0"/><line nr="429" mi="0" ci="8" mb="0" cb="0"/><line nr="430" mi="0" ci="8" mb="0" cb="0"/><line nr="431" mi="0" ci="8" mb="0" cb="0"/><line nr="432" mi="0" ci="13" mb="0" cb="0"/><line nr="433" mi="0" ci="8" mb="0" cb="0"/><line nr="434" mi="0" ci="13" mb="0" cb="0"/><line nr="435" mi="0" ci="13" mb="0" cb="0"/><line nr="436" mi="0" ci="13" mb="0" cb="0"/><line nr="437" mi="0" ci="12" mb="0" cb="0"/><line nr="438" mi="0" ci="18" mb="0" cb="0"/><line nr="448" mi="0" ci="1" mb="0" cb="0"/><line nr="452" mi="0" ci="5" mb="0" cb="0"/><line nr="456" mi="0" ci="5" mb="0" cb="0"/><line nr="460" mi="5" ci="0" mb="0" cb="0"/><line nr="464" mi="0" ci="5" mb="0" cb="0"/><line nr="465" mi="0" ci="6" mb="1" cb="1"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="467" mi="0" ci="6" mb="1" cb="1"/><line nr="468" mi="0" ci="2" mb="0" cb="0"/><line nr="469" mi="6" ci="0" mb="2" cb="0"/><line nr="470" mi="2" ci="0" mb="0" cb="0"/><line nr="471" mi="6" ci="0" mb="2" cb="0"/><line nr="472" mi="2" ci="0" mb="0" cb="0"/><line nr="473" mi="2" ci="0" mb="0" cb="0"/><line nr="477" mi="5" ci="0" mb="0" cb="0"/><line nr="481" mi="5" ci="0" mb="0" cb="0"/><line nr="485" mi="6" ci="0" mb="0" cb="0"/><line nr="489" mi="5" ci="0" mb="0" cb="0"/><line nr="493" mi="0" ci="5" mb="0" cb="0"/><line nr="497" mi="5" ci="0" mb="0" cb="0"/><line nr="501" mi="5" ci="0" mb="0" cb="0"/><line nr="505" mi="0" ci="5" mb="0" cb="0"/><line nr="509" mi="5" ci="0" mb="0" cb="0"/><line nr="513" mi="5" ci="0" mb="0" cb="0"/><line nr="517" mi="5" ci="0" mb="0" cb="0"/><line nr="521" mi="0" ci="5" mb="0" cb="0"/><line nr="525" mi="9" ci="0" mb="0" cb="0"/><line nr="529" mi="5" ci="0" mb="0" cb="0"/><line nr="530" mi="10" ci="0" mb="2" cb="0"/><line nr="534" mi="5" ci="0" mb="0" cb="0"/><line nr="535" mi="10" ci="0" mb="2" cb="0"/><line nr="539" mi="5" ci="0" mb="0" cb="0"/><line nr="543" mi="5" ci="0" mb="0" cb="0"/><line nr="547" mi="0" ci="5" mb="0" cb="0"/><line nr="551" mi="5" ci="0" mb="0" cb="0"/><line nr="555" mi="5" ci="0" mb="0" cb="0"/><line nr="559" mi="0" ci="5" mb="0" cb="0"/><line nr="563" mi="5" ci="0" mb="0" cb="0"/><line nr="567" mi="0" ci="5" mb="0" cb="0"/><line nr="571" mi="5" ci="0" mb="0" cb="0"/><line nr="575" mi="5" ci="0" mb="0" cb="0"/><line nr="579" mi="5" ci="0" mb="0" cb="0"/><line nr="583" mi="5" ci="0" mb="0" cb="0"/><line nr="587" mi="5" ci="0" mb="0" cb="0"/><line nr="591" mi="5" ci="0" mb="0" cb="0"/><line nr="595" mi="5" ci="0" mb="0" cb="0"/><line nr="598" mi="3" ci="0" mb="0" cb="0"/><line nr="609" mi="0" ci="7" mb="0" cb="0"/><line nr="622" mi="0" ci="3" mb="0" cb="0"/><line nr="623" mi="0" ci="11" mb="0" cb="0"/><line nr="624" mi="0" ci="2" mb="0" cb="0"/><line nr="636" mi="0" ci="7" mb="0" cb="0"/><line nr="649" mi="0" ci="3" mb="0" cb="0"/><line nr="650" mi="0" ci="11" mb="0" cb="0"/><line nr="651" mi="0" ci="2" mb="0" cb="0"/><line nr="664" mi="0" ci="3" mb="0" cb="0"/><line nr="665" mi="0" ci="7" mb="0" cb="0"/><line nr="668" mi="0" ci="6" mb="0" cb="0"/><line nr="669" mi="0" ci="10" mb="0" cb="0"/><line nr="672" mi="0" ci="10" mb="0" cb="0"/><line nr="685" mi="3" ci="0" mb="0" cb="0"/><line nr="686" mi="7" ci="0" mb="0" cb="0"/><line nr="689" mi="6" ci="0" mb="0" cb="0"/><line nr="690" mi="10" ci="0" mb="0" cb="0"/><line nr="693" mi="10" ci="0" mb="0" cb="0"/><line nr="705" mi="0" ci="7" mb="0" cb="0"/><line nr="720" mi="0" ci="4" mb="0" cb="0"/><line nr="721" mi="0" ci="3" mb="0" cb="0"/><line nr="722" mi="0" ci="9" mb="0" cb="0"/><line nr="723" mi="0" ci="2" mb="0" cb="0"/><line nr="724" mi="0" ci="3" mb="0" cb="0"/><line nr="725" mi="0" ci="3" mb="1" cb="1"/><line nr="727" mi="8" ci="0" mb="2" cb="0"/><line nr="729" mi="9" ci="0" mb="0" cb="0"/><line nr="734" mi="0" ci="7" mb="0" cb="2"/><line nr="736" mi="0" ci="8" mb="0" cb="0"/><line nr="739" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="554" covered="1271"/><counter type="BRANCH" missed="37" covered="54"/><counter type="LINE" missed="76" covered="197"/><counter type="COMPLEXITY" missed="60" covered="57"/><counter type="METHOD" missed="31" covered="37"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="OpenCLPlatform.java"><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="16" mb="0" cb="2"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="2"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="27" mb="0" cb="0"/><line nr="122" mi="0" ci="16" mb="0" cb="2"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="2"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="0" ci="12" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="1" cb="1"/><line nr="140" mi="10" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="12" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="9" mb="0" cb="0"/><line nr="174" mi="0" ci="10" mb="0" cb="2"/><line nr="175" mi="0" ci="2" mb="1" cb="1"/><line nr="176" mi="0" ci="9" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="7" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="9" mb="0" cb="2"/><line nr="218" mi="0" ci="7" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="2"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="282" mi="0" ci="6" mb="0" cb="0"/><line nr="288" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="7" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="2"/><line nr="302" mi="0" ci="6" mb="0" cb="0"/><line nr="308" mi="0" ci="6" mb="0" cb="0"/><line nr="314" mi="0" ci="6" mb="0" cb="0"/><line nr="324" mi="0" ci="6" mb="0" cb="0"/><line nr="334" mi="0" ci="7" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="0" cb="2"/><line nr="345" mi="0" ci="6" mb="0" cb="0"/><line nr="351" mi="0" ci="6" mb="0" cb="0"/><line nr="357" mi="0" ci="6" mb="0" cb="0"/><line nr="367" mi="0" ci="6" mb="0" cb="0"/><line nr="377" mi="0" ci="6" mb="0" cb="0"/><line nr="387" mi="0" ci="7" mb="0" cb="0"/><line nr="394" mi="0" ci="6" mb="0" cb="0"/><line nr="400" mi="0" ci="6" mb="0" cb="0"/><line nr="406" mi="0" ci="6" mb="0" cb="0"/><line nr="416" mi="0" ci="6" mb="0" cb="0"/><line nr="426" mi="0" ci="6" mb="0" cb="0"/><line nr="439" mi="0" ci="2" mb="0" cb="0"/><line nr="443" mi="3" ci="0" mb="0" cb="0"/><line nr="447" mi="0" ci="3" mb="0" cb="0"/><line nr="451" mi="0" ci="3" mb="0" cb="0"/><line nr="455" mi="0" ci="3" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="463" mi="0" ci="3" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="0" cb="0"/><line nr="468" mi="0" ci="5" mb="0" cb="0"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="472" mi="0" ci="6" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="0" cb="0"/><line nr="475" mi="0" ci="16" mb="0" cb="2"/><line nr="476" mi="0" ci="7" mb="0" cb="0"/><line nr="478" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="0" ci="8" mb="0" cb="0"/><line nr="492" mi="0" ci="4" mb="0" cb="0"/><line nr="493" mi="0" ci="2" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="0" ci="3" mb="0" cb="2"/><line nr="497" mi="0" ci="7" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="1" ci="0" mb="0" cb="0"/><line nr="501" mi="2" ci="0" mb="0" cb="0"/><line nr="502" mi="2" ci="0" mb="0" cb="0"/><line nr="503" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="822"/><counter type="BRANCH" missed="2" covered="30"/><counter type="LINE" missed="6" covered="160"/><counter type="COMPLEXITY" missed="3" covered="31"/><counter type="METHOD" missed="1" covered="17"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="574" covered="2093"/><counter type="BRANCH" missed="39" covered="84"/><counter type="LINE" missed="82" covered="357"/><counter type="COMPLEXITY" missed="63" covered="88"/><counter type="METHOD" missed="32" covered="54"/><counter type="CLASS" missed="0" covered="6"/></package><counter type="INSTRUCTION" missed="4661" covered="16939"/><counter type="BRANCH" missed="662" covered="1716"/><counter type="LINE" missed="754" covered="2925"/><counter type="COMPLEXITY" missed="717" covered="1242"/><counter type="METHOD" missed="200" covered="530"/><counter type="CLASS" missed="3" covered="47"/></report>