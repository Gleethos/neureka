<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="neureka"><sessioninfo id="DESKTOP-6UFJ24U-30d11151" start="1585387991865" dump="1585388038939"/><sessioninfo id="DESKTOP-6UFJ24U-526585b3" start="1585387991956" dump="1585388039689"/><sessioninfo id="DESKTOP-6UFJ24U-f7860952" start="1585387991945" dump="1585388041664"/><sessioninfo id="DESKTOP-6UFJ24U-9699e651" start="1585387991936" dump="1585388058558"/><sessioninfo id="DESKTOP-6UFJ24U-ae4a7c33" start="1585387991902" dump="1585388061436"/><sessioninfo id="DESKTOP-6UFJ24U-68f6aae2" start="1585387991967" dump="1585388077326"/><package name="neureka/acceleration/opencl/utility"><class name="neureka/acceleration/opencl/utility/DeviceQuery" sourcefilename="DeviceQuery.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="query" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="8" covered="418"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="0" covered="86"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInt" desc="(Lorg/jocl/cl_device_id;I)I" line="194"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInts" desc="(Lorg/jocl/cl_device_id;II)[I" line="207"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLong" desc="(Lorg/jocl/cl_device_id;I)J" line="221"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLongs" desc="(Lorg/jocl/cl_device_id;II)[J" line="234"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_device_id;I)Ljava/lang/String;" line="249"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_platform_id;I)Ljava/lang/String;" line="270"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="(Lorg/jocl/cl_device_id;I)J" line="290"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSizes" desc="(Lorg/jocl/cl_device_id;II)[J" line="305"><counter type="INSTRUCTION" missed="17" covered="41"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="584"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="3" covered="114"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/utility/WeakTensorReference" sourcefilename="WeakTensorReference.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DeviceQuery.java"><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="2"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="2"/><line nr="72" mi="0" ci="9" mb="0" cb="2"/><line nr="73" mi="3" ci="6" mb="1" cb="1"/><line nr="74" mi="3" ci="6" mb="1" cb="1"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="12" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="2" ci="6" mb="1" cb="1"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="0" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="1" cb="1"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="1" cb="1"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="9" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="11" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="11" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="7" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="254" mi="0" ci="10" mb="0" cb="0"/><line nr="257" mi="0" ci="10" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="7" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="10" mb="0" cb="0"/><line nr="278" mi="0" ci="10" mb="0" cb="0"/><line nr="290" mi="0" ci="7" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="9" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="1" cb="1"/><line nr="312" mi="8" ci="0" mb="2" cb="0"/><line nr="314" mi="9" ci="0" mb="0" cb="0"/><line nr="319" mi="0" ci="7" mb="0" cb="2"/><line nr="321" mi="0" ci="8" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="584"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="3" covered="114"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeakTensorReference.java"><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="9" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="37" covered="596"/><counter type="BRANCH" missed="10" covered="18"/><counter type="LINE" missed="4" covered="118"/><counter type="COMPLEXITY" missed="10" covered="17"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/framing"><class name="neureka/framing/IndexAlias" sourcefilename="IndexAlias.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="24"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lneureka/Tsr;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/util/List;)[I" line="45"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([Ljava/lang/Object;)[I" line="49"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="65"><counter type="INSTRUCTION" missed="9" covered="15"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="72"><counter type="INSTRUCTION" missed="11" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_initializeIdxmap" desc="(Ljava/lang/Object;ILjava/lang/Object;I)V" line="78"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;Ljava/lang/Object;I)V" line="88"><counter type="INSTRUCTION" missed="11" covered="17"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keysOf" desc="(Ljava/lang/Object;)Ljava/util/List;" line="95"><counter type="INSTRUCTION" missed="14" covered="20"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keysOf" desc="(Ljava/lang/Object;I)Ljava/util/List;" line="103"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_fixed" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="0" covered="201"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$6" desc="([Ljava/lang/Object;[ILjava/lang/StringBuilder;[ILjava/lang/Object;Ljava/lang/Object;)V" line="158"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$5" desc="([I[Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Integer;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$4" desc="([I[ILjava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;)V" line="140"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$3" desc="(IILjava/lang/Integer;)Ljava/lang/Boolean;" line="133"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$keysOf$2" desc="(ILjava/util/List;Ljava/lang/Object;Ljava/lang/Integer;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$keysOf$1" desc="(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Integer;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lneureka/Tsr;[ILjava/lang/Object;Ljava/util/List;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="121" covered="664"/><counter type="BRANCH" missed="25" covered="53"/><counter type="LINE" missed="16" covered="108"/><counter type="COMPLEXITY" missed="21" covered="38"/><counter type="METHOD" missed="3" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/framing/Relation" sourcefilename="Relation.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="17"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addParent" desc="(Lneureka/Tsr;)Lneureka/framing/Relation;" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addChild" desc="(Lneureka/Tsr;)Lneureka/framing/Relation;" line="45"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foreachChild" desc="(Ljava/util/function/Consumer;)Lneureka/framing/Relation;" line="59"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasParent" desc="()Z" line="73"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasChildren" desc="()Z" line="77"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="childCount" desc="()I" line="81"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="116" covered="79"/><counter type="BRANCH" missed="25" covered="7"/><counter type="LINE" missed="21" covered="14"/><counter type="COMPLEXITY" missed="16" covered="8"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Relation.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="2" cb="0"/><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="9" ci="0" mb="2" cb="0"/><line nr="20" mi="7" ci="0" mb="2" cb="0"/><line nr="21" mi="8" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="2" cb="0"/><line nr="26" mi="17" ci="0" mb="2" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="2" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="2" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="2"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="17" ci="0" mb="2" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="2" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="6" mb="1" cb="1"/><line nr="77" mi="1" ci="6" mb="1" cb="1"/><line nr="81" mi="2" ci="7" mb="1" cb="1"/><counter type="INSTRUCTION" missed="116" covered="79"/><counter type="BRANCH" missed="25" covered="7"/><counter type="LINE" missed="21" covered="14"/><counter type="COMPLEXITY" missed="16" covered="8"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IndexAlias.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="7" mb="0" cb="0"/><line nr="14" mi="0" ci="17" mb="0" cb="2"/><line nr="15" mi="0" ci="8" mb="0" cb="2"/><line nr="16" mi="0" ci="4" mb="1" cb="1"/><line nr="17" mi="0" ci="11" mb="0" cb="2"/><line nr="18" mi="0" ci="18" mb="1" cb="1"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="6" ci="0" mb="0" cb="0"/><line nr="26" mi="16" ci="0" mb="2" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="2"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="35" mi="0" ci="16" mb="0" cb="2"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="12" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="2" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="53" mi="12" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="1" cb="1"/><line nr="67" mi="9" ci="0" mb="2" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="11" ci="3" mb="1" cb="1"/><line nr="74" mi="0" ci="13" mb="1" cb="1"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="10" mb="0" cb="2"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="11" mb="1" cb="1"/><line nr="90" mi="11" ci="0" mb="2" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="14" mb="1" cb="1"/><line nr="98" mi="14" ci="0" mb="2" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="19" mb="1" cb="3"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="1" cb="1"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="10" mb="0" cb="0"/><line nr="116" mi="0" ci="10" mb="0" cb="2"/><line nr="117" mi="0" ci="10" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="16" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="20" mb="0" cb="4"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="2"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="9" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="10" mb="0" cb="2"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="1" cb="1"/><line nr="164" mi="0" ci="14" mb="1" cb="1"/><line nr="166" mi="0" ci="4" mb="0" cb="2"/><line nr="167" mi="0" ci="11" mb="0" cb="0"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="20" mb="0" cb="4"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="0" cb="2"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="11" mb="0" cb="2"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="121" covered="664"/><counter type="BRANCH" missed="25" covered="53"/><counter type="LINE" missed="16" covered="108"/><counter type="COMPLEXITY" missed="21" covered="38"/><counter type="METHOD" missed="3" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="237" covered="743"/><counter type="BRANCH" missed="50" covered="60"/><counter type="LINE" missed="37" covered="122"/><counter type="COMPLEXITY" missed="37" covered="46"/><counter type="METHOD" missed="5" covered="23"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/optimization/implementations"><class name="neureka/optimization/implementations/Template" sourcefilename="Template.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimize" desc="(Lneureka/Tsr;)V" line="12"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/optimization/implementations/ADAM" sourcefilename="ADAM.java"><method name="&lt;init&gt;" desc="(Lneureka/Tsr;)V" line="14"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_optimize" desc="()V" line="30"><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="189" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Template.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ADAM.java"><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="2" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="0" cb="0"/><line nr="22" mi="7" ci="0" mb="0" cb="0"/><line nr="23" mi="7" ci="0" mb="0" cb="0"/><line nr="24" mi="7" ci="0" mb="0" cb="0"/><line nr="25" mi="7" ci="0" mb="0" cb="0"/><line nr="26" mi="7" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="7" ci="0" mb="0" cb="0"/><line nr="32" mi="14" ci="0" mb="0" cb="0"/><line nr="34" mi="15" ci="0" mb="0" cb="0"/><line nr="35" mi="15" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="10" ci="0" mb="0" cb="0"/><line nr="41" mi="10" ci="0" mb="0" cb="0"/><line nr="43" mi="17" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="14" ci="0" mb="0" cb="0"/><line nr="47" mi="10" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="189" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="193" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="neureka/calculus/factory"><class name="neureka/calculus/factory/AbstractFunction$Exec" sourcefilename="AbstractFunction.java"><method name="&lt;init&gt;" desc="()V" line="423"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reLu" desc="(DZ)D" line="429"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sigmoid" desc="(DZ)D" line="443"><counter type="INSTRUCTION" missed="21" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tanh" desc="(DZ)D" line="453"><counter type="INSTRUCTION" missed="14" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quadratic" desc="(DZ)D" line="463"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ligmoid" desc="(DZ)D" line="470"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linear" desc="(DZ)D" line="477"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gaussian" desc="(DZ)D" line="484"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="absolute" desc="(DZ)D" line="491"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sinus" desc="(DZ)D" line="498"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cosinus" desc="(DZ)D" line="505"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="summation" desc="([DIILjava/util/ArrayList;)D" line="512"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="summation" desc="([DILjava/util/ArrayList;)D" line="529"><counter type="INSTRUCTION" missed="14" covered="61"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PI" desc="([DIILjava/util/ArrayList;)D" line="559"><counter type="INSTRUCTION" missed="64" covered="30"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PI" desc="([DILjava/util/ArrayList;)D" line="584"><counter type="INSTRUCTION" missed="7" covered="86"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="power" desc="([DIILjava/util/ArrayList;)D" line="615"><counter type="INSTRUCTION" missed="122" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="power" desc="([DILjava/util/ArrayList;)D" line="642"><counter type="INSTRUCTION" missed="6" covered="127"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="division" desc="([DIILjava/util/ArrayList;)D" line="674"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="division" desc="([DILjava/util/ArrayList;)D" line="697"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplication" desc="([DIILjava/util/ArrayList;)D" line="725"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplication" desc="([DILjava/util/ArrayList;)D" line="749"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idy" desc="([DILjava/util/ArrayList;)D" line="776"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="modulo" desc="([DIILjava/util/ArrayList;)D" line="786"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="modulo" desc="([DILjava/util/ArrayList;)D" line="800"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtraction" desc="([DIILjava/util/ArrayList;)D" line="815"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtraction" desc="([DILjava/util/ArrayList;)D" line="837"><counter type="INSTRUCTION" missed="35" covered="30"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addition" desc="([DIILjava/util/ArrayList;)D" line="860"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addition" desc="([DILjava/util/ArrayList;)D" line="878"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="565" covered="860"/><counter type="BRANCH" missed="68" covered="76"/><counter type="LINE" missed="89" covered="157"/><counter type="COMPLEXITY" missed="51" covered="49"/><counter type="METHOD" missed="12" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/AbstractFunction" sourcefilename="AbstractFunction.java"><method name="&lt;init&gt;" desc="(IZLjava/util/ArrayList;Z)V" line="30"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="39"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFlat" desc="()Z" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doesAD" desc="()Z" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="id" desc="()I" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="()Lneureka/calculus/environment/OperationType;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="15" covered="188"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dependsOn" desc="(I)Z" line="101"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="110"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(D)D" line="128"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getADAgent" desc="([Lneureka/Tsr;IZ)Lneureka/autograd/ADAgent;" line="147"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_tensor_activation" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="159"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execute" desc="([Lneureka/Tsr;IILneureka/acceleration/Device;)Lneureka/Tsr;" line="175"><counter type="INSTRUCTION" missed="2" covered="250"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="1" covered="36"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execution" desc="([Lneureka/Tsr;IILneureka/acceleration/Device;)Lneureka/Tsr;" line="224"><counter type="INSTRUCTION" missed="0" covered="364"/><counter type="BRANCH" missed="2" covered="48"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="2" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_apply" desc="(Lneureka/acceleration/Device;ILjava/util/function/Supplier;)Lneureka/Tsr;" line="301"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_device" desc="([Lneureka/Tsr;)Lneureka/acceleration/Device;" line="320"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_src_acti" desc="([Lneureka/Tsr;III)[Lneureka/Tsr;" line="327"><counter type="INSTRUCTION" missed="27" covered="109"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_shareGuestDevice" desc="([Lneureka/Tsr;)Z" line="351"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_scalar_activation" desc="(DZ)D" line="371"><counter type="INSTRUCTION" missed="22" covered="30"/><counter type="BRANCH" missed="6" covered="5"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_scalar_activation" desc="([DII)D" line="399"><counter type="INSTRUCTION" missed="59" covered="97"/><counter type="BRANCH" missed="12" covered="18"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="9" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_execute$2" desc="([Lneureka/Tsr;IILneureka/acceleration/Device;)Lneureka/Tsr;" line="219"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_tensor_activation$1" desc="([Lneureka/Tsr;IILneureka/acceleration/Device;)Lneureka/Tsr;" line="167"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_tensor_activation$0" desc="([Lneureka/Tsr;IILneureka/acceleration/Device;)Lneureka/Tsr;" line="162"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="140" covered="1343"/><counter type="BRANCH" missed="31" covered="182"/><counter type="LINE" missed="16" covered="172"/><counter type="COMPLEXITY" missed="29" covered="109"/><counter type="METHOD" missed="2" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractFunction.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="4"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="1" cb="3"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="13" mb="0" cb="2"/><line nr="73" mi="0" ci="9" mb="0" cb="2"/><line nr="74" mi="0" ci="5" mb="1" cb="1"/><line nr="75" mi="0" ci="6" mb="0" cb="2"/><line nr="76" mi="0" ci="7" mb="0" cb="2"/><line nr="77" mi="0" ci="11" mb="1" cb="1"/><line nr="78" mi="11" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="2"/><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="15" mb="0" cb="4"/><line nr="92" mi="0" ci="26" mb="0" cb="4"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="11" mb="1" cb="1"/><line nr="102" mi="0" ci="6" mb="0" cb="2"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="9" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="2"/><line nr="162" mi="0" ci="18" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="4"/><line nr="167" mi="0" ci="20" mb="0" cb="0"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="2"/><line nr="176" mi="0" ci="10" mb="0" cb="0"/><line nr="177" mi="0" ci="10" mb="0" cb="0"/><line nr="178" mi="0" ci="13" mb="0" cb="2"/><line nr="179" mi="0" ci="15" mb="0" cb="0"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="14" mb="0" cb="4"/><line nr="183" mi="0" ci="2" mb="1" cb="1"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="12" mb="0" cb="0"/><line nr="186" mi="0" ci="12" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="0" ci="11" mb="0" cb="2"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="2"/><line nr="195" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="11" mb="0" cb="2"/><line nr="197" mi="0" ci="13" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="2"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="16" mb="0" cb="2"/><line nr="202" mi="0" ci="3" mb="1" cb="1"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="4" mb="1" cb="1"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="18" mb="0" cb="0"/><line nr="224" mi="0" ci="7" mb="1" cb="5"/><line nr="225" mi="0" ci="4" mb="0" cb="2"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="7" mb="0" cb="0"/><line nr="228" mi="0" ci="8" mb="0" cb="2"/><line nr="229" mi="0" ci="20" mb="0" cb="2"/><line nr="231" mi="0" ci="8" mb="0" cb="0"/><line nr="232" mi="0" ci="8" mb="1" cb="3"/><line nr="233" mi="0" ci="9" mb="0" cb="0"/><line nr="238" mi="0" ci="11" mb="0" cb="2"/><line nr="239" mi="0" ci="7" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="2"/><line nr="245" mi="0" ci="4" mb="0" cb="2"/><line nr="246" mi="0" ci="9" mb="0" cb="2"/><line nr="247" mi="0" ci="14" mb="0" cb="0"/><line nr="250" mi="0" ci="8" mb="0" cb="2"/><line nr="251" mi="0" ci="27" mb="0" cb="2"/><line nr="256" mi="0" ci="4" mb="0" cb="2"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="2"/><line nr="265" mi="0" ci="9" mb="0" cb="2"/><line nr="266" mi="0" ci="13" mb="0" cb="0"/><line nr="269" mi="0" ci="8" mb="0" cb="2"/><line nr="270" mi="0" ci="25" mb="0" cb="2"/><line nr="274" mi="0" ci="9" mb="0" cb="2"/><line nr="275" mi="0" ci="12" mb="0" cb="4"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="7" mb="0" cb="0"/><line nr="284" mi="0" ci="17" mb="0" cb="0"/><line nr="285" mi="0" ci="7" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="2"/><line nr="289" mi="0" ci="6" mb="0" cb="0"/><line nr="290" mi="0" ci="21" mb="0" cb="2"/><line nr="291" mi="0" ci="8" mb="0" cb="0"/><line nr="293" mi="0" ci="7" mb="0" cb="0"/><line nr="294" mi="0" ci="7" mb="0" cb="0"/><line nr="297" mi="0" ci="12" mb="0" cb="2"/><line nr="301" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="2"/><line nr="303" mi="0" ci="10" mb="0" cb="2"/><line nr="304" mi="0" ci="12" mb="0" cb="2"/><line nr="305" mi="0" ci="2" mb="0" cb="2"/><line nr="306" mi="0" ci="2" mb="0" cb="2"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="22" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="0" ci="7" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="12" mb="0" cb="4"/><line nr="323" mi="0" ci="11" mb="1" cb="3"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="0" ci="7" mb="0" cb="0"/><line nr="329" mi="0" ci="8" mb="0" cb="2"/><line nr="330" mi="0" ci="8" mb="0" cb="2"/><line nr="331" mi="0" ci="2" mb="1" cb="1"/><line nr="332" mi="0" ci="26" mb="0" cb="2"/><line nr="334" mi="27" ci="0" mb="2" cb="0"/><line nr="336" mi="0" ci="9" mb="0" cb="2"/><line nr="339" mi="0" ci="8" mb="0" cb="2"/><line nr="340" mi="0" ci="4" mb="0" cb="2"/><line nr="341" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="2"/><line nr="343" mi="0" ci="13" mb="0" cb="0"/><line nr="344" mi="0" ci="16" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="16" mb="0" cb="2"/><line nr="354" mi="0" ci="10" mb="0" cb="2"/><line nr="356" mi="0" ci="2" mb="0" cb="2"/><line nr="357" mi="0" ci="17" mb="0" cb="2"/><line nr="358" mi="0" ci="14" mb="0" cb="6"/><line nr="361" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="12" mb="0" cb="6"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="10" mb="6" cb="5"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="375" mi="0" ci="4" mb="0" cb="0"/><line nr="377" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="4" ci="0" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="383" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="4" ci="0" mb="0" cb="0"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="4" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="10" mb="3" cb="7"/><line nr="401" mi="6" ci="9" mb="1" cb="1"/><line nr="403" mi="0" ci="15" mb="0" cb="2"/><line nr="405" mi="6" ci="9" mb="1" cb="1"/><line nr="407" mi="0" ci="15" mb="0" cb="2"/><line nr="409" mi="0" ci="15" mb="0" cb="2"/><line nr="411" mi="15" ci="0" mb="2" cb="0"/><line nr="413" mi="6" ci="9" mb="1" cb="1"/><line nr="415" mi="0" ci="15" mb="0" cb="2"/><line nr="417" mi="15" ci="0" mb="2" cb="0"/><line nr="419" mi="11" ci="0" mb="2" cb="0"/><line nr="423" mi="3" ci="0" mb="0" cb="0"/><line nr="429" mi="2" ci="0" mb="2" cb="0"/><line nr="430" mi="7" ci="0" mb="2" cb="0"/><line nr="431" mi="4" ci="0" mb="0" cb="0"/><line nr="432" mi="2" ci="0" mb="0" cb="0"/><line nr="434" mi="7" ci="0" mb="2" cb="0"/><line nr="435" mi="2" ci="0" mb="0" cb="0"/><line nr="436" mi="2" ci="0" mb="0" cb="0"/><line nr="443" mi="0" ci="2" mb="1" cb="1"/><line nr="444" mi="0" ci="9" mb="0" cb="0"/><line nr="446" mi="21" ci="0" mb="0" cb="0"/><line nr="453" mi="0" ci="2" mb="1" cb="1"/><line nr="454" mi="0" ci="10" mb="0" cb="0"/><line nr="456" mi="14" ci="0" mb="0" cb="0"/><line nr="463" mi="6" ci="0" mb="2" cb="0"/><line nr="464" mi="4" ci="0" mb="0" cb="0"/><line nr="470" mi="0" ci="9" mb="0" cb="2"/><line nr="471" mi="0" ci="4" mb="0" cb="0"/><line nr="477" mi="4" ci="0" mb="2" cb="0"/><line nr="478" mi="2" ci="0" mb="0" cb="0"/><line nr="484" mi="9" ci="0" mb="2" cb="0"/><line nr="485" mi="11" ci="0" mb="0" cb="0"/><line nr="491" mi="5" ci="0" mb="2" cb="0"/><line nr="492" mi="8" ci="0" mb="2" cb="0"/><line nr="498" mi="0" ci="5" mb="0" cb="2"/><line nr="499" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="5" mb="0" cb="2"/><line nr="506" mi="0" ci="4" mb="0" cb="0"/><line nr="512" mi="2" ci="0" mb="2" cb="0"/><line nr="513" mi="2" ci="0" mb="0" cb="0"/><line nr="514" mi="2" ci="0" mb="0" cb="0"/><line nr="515" mi="8" ci="0" mb="2" cb="0"/><line nr="516" mi="10" ci="0" mb="0" cb="0"/><line nr="517" mi="2" ci="0" mb="0" cb="0"/><line nr="519" mi="2" ci="0" mb="2" cb="0"/><line nr="520" mi="7" ci="0" mb="0" cb="0"/><line nr="522" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="9" ci="0" mb="0" cb="0"/><line nr="529" mi="0" ci="2" mb="0" cb="2"/><line nr="530" mi="0" ci="2" mb="0" cb="0"/><line nr="531" mi="0" ci="2" mb="0" cb="0"/><line nr="532" mi="0" ci="8" mb="0" cb="2"/><line nr="533" mi="0" ci="10" mb="0" cb="0"/><line nr="534" mi="0" ci="2" mb="0" cb="0"/><line nr="536" mi="0" ci="2" mb="1" cb="1"/><line nr="537" mi="7" ci="0" mb="0" cb="0"/><line nr="539" mi="0" ci="2" mb="0" cb="0"/><line nr="541" mi="0" ci="2" mb="0" cb="0"/><line nr="542" mi="0" ci="2" mb="0" cb="0"/><line nr="543" mi="0" ci="8" mb="0" cb="2"/><line nr="544" mi="0" ci="9" mb="0" cb="0"/><line nr="545" mi="0" ci="4" mb="0" cb="0"/><line nr="546" mi="0" ci="2" mb="0" cb="0"/><line nr="548" mi="0" ci="2" mb="1" cb="1"/><line nr="549" mi="7" ci="0" mb="0" cb="0"/><line nr="551" mi="0" ci="2" mb="0" cb="0"/><line nr="559" mi="0" ci="2" mb="1" cb="1"/><line nr="560" mi="0" ci="2" mb="0" cb="0"/><line nr="561" mi="0" ci="2" mb="0" cb="0"/><line nr="562" mi="0" ci="8" mb="0" cb="2"/><line nr="563" mi="0" ci="10" mb="0" cb="0"/><line nr="564" mi="0" ci="2" mb="0" cb="0"/><line nr="566" mi="8" ci="2" mb="1" cb="1"/><line nr="567" mi="0" ci="2" mb="0" cb="0"/><line nr="570" mi="8" ci="0" mb="0" cb="0"/><line nr="571" mi="9" ci="0" mb="0" cb="0"/><line nr="572" mi="8" ci="0" mb="2" cb="0"/><line nr="573" mi="8" ci="0" mb="0" cb="0"/><line nr="574" mi="9" ci="0" mb="0" cb="0"/><line nr="575" mi="8" ci="0" mb="0" cb="0"/><line nr="576" mi="4" ci="0" mb="0" cb="0"/><line nr="578" mi="2" ci="0" mb="0" cb="0"/><line nr="584" mi="0" ci="2" mb="0" cb="2"/><line nr="585" mi="0" ci="2" mb="0" cb="0"/><line nr="586" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="0" ci="8" mb="0" cb="2"/><line nr="589" mi="0" ci="10" mb="0" cb="0"/><line nr="590" mi="0" ci="2" mb="0" cb="0"/><line nr="593" mi="7" ci="2" mb="1" cb="1"/><line nr="594" mi="0" ci="2" mb="0" cb="0"/><line nr="597" mi="0" ci="8" mb="0" cb="0"/><line nr="598" mi="0" ci="9" mb="0" cb="0"/><line nr="599" mi="0" ci="8" mb="0" cb="2"/><line nr="600" mi="0" ci="8" mb="0" cb="0"/><line nr="601" mi="0" ci="9" mb="0" cb="0"/><line nr="602" mi="0" ci="8" mb="0" cb="0"/><line nr="603" mi="0" ci="4" mb="0" cb="0"/><line nr="605" mi="0" ci="2" mb="0" cb="0"/><line nr="615" mi="2" ci="0" mb="2" cb="0"/><line nr="616" mi="8" ci="0" mb="0" cb="0"/><line nr="617" mi="8" ci="0" mb="2" cb="0"/><line nr="618" mi="8" ci="0" mb="0" cb="0"/><line nr="619" mi="4" ci="0" mb="0" cb="0"/><line nr="621" mi="2" ci="0" mb="0" cb="0"/><line nr="623" mi="2" ci="0" mb="0" cb="0"/><line nr="624" mi="8" ci="0" mb="2" cb="0"/><line nr="625" mi="2" ci="0" mb="0" cb="0"/><line nr="626" mi="8" ci="0" mb="2" cb="0"/><line nr="627" mi="10" ci="0" mb="0" cb="0"/><line nr="629" mi="2" ci="0" mb="2" cb="0"/><line nr="630" mi="26" ci="0" mb="0" cb="0"/><line nr="632" mi="8" ci="0" mb="0" cb="0"/><line nr="633" mi="22" ci="0" mb="2" cb="0"/><line nr="636" mi="2" ci="0" mb="0" cb="0"/><line nr="642" mi="0" ci="2" mb="0" cb="2"/><line nr="643" mi="0" ci="7" mb="0" cb="0"/><line nr="644" mi="0" ci="8" mb="0" cb="2"/><line nr="645" mi="0" ci="7" mb="0" cb="0"/><line nr="646" mi="0" ci="4" mb="0" cb="0"/><line nr="648" mi="0" ci="2" mb="0" cb="0"/><line nr="650" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="0" ci="2" mb="0" cb="0"/><line nr="652" mi="0" ci="2" mb="0" cb="0"/><line nr="653" mi="0" ci="8" mb="0" cb="2"/><line nr="654" mi="0" ci="2" mb="0" cb="0"/><line nr="655" mi="0" ci="7" mb="0" cb="0"/><line nr="656" mi="0" ci="8" mb="0" cb="2"/><line nr="657" mi="5" ci="3" mb="1" cb="1"/><line nr="658" mi="0" ci="10" mb="0" cb="0"/><line nr="660" mi="0" ci="4" mb="0" cb="0"/><line nr="661" mi="0" ci="4" mb="0" cb="0"/><line nr="663" mi="0" ci="2" mb="0" cb="0"/><line nr="664" mi="0" ci="7" mb="0" cb="0"/><line nr="665" mi="0" ci="18" mb="0" cb="0"/><line nr="666" mi="1" ci="16" mb="1" cb="1"/><line nr="667" mi="0" ci="2" mb="0" cb="0"/><line nr="674" mi="0" ci="2" mb="0" cb="2"/><line nr="675" mi="0" ci="8" mb="0" cb="0"/><line nr="676" mi="0" ci="8" mb="0" cb="2"/><line nr="677" mi="0" ci="8" mb="0" cb="0"/><line nr="678" mi="0" ci="4" mb="0" cb="0"/><line nr="680" mi="0" ci="2" mb="0" cb="0"/><line nr="683" mi="0" ci="8" mb="0" cb="0"/><line nr="684" mi="0" ci="9" mb="0" cb="0"/><line nr="685" mi="0" ci="10" mb="0" cb="2"/><line nr="686" mi="0" ci="10" mb="0" cb="0"/><line nr="687" mi="0" ci="11" mb="0" cb="0"/><line nr="688" mi="0" ci="12" mb="0" cb="0"/><line nr="689" mi="0" ci="4" mb="0" cb="0"/><line nr="691" mi="0" ci="2" mb="0" cb="0"/><line nr="697" mi="0" ci="2" mb="0" cb="2"/><line nr="698" mi="0" ci="7" mb="0" cb="0"/><line nr="699" mi="0" ci="8" mb="0" cb="2"/><line nr="700" mi="0" ci="7" mb="0" cb="0"/><line nr="701" mi="0" ci="4" mb="0" cb="0"/><line nr="703" mi="0" ci="2" mb="0" cb="0"/><line nr="705" mi="0" ci="2" mb="0" cb="0"/><line nr="706" mi="0" ci="7" mb="0" cb="0"/><line nr="707" mi="0" ci="8" mb="0" cb="0"/><line nr="709" mi="0" ci="10" mb="0" cb="2"/><line nr="711" mi="0" ci="9" mb="0" cb="0"/><line nr="712" mi="0" ci="10" mb="0" cb="0"/><line nr="713" mi="0" ci="2" mb="0" cb="0"/><line nr="714" mi="0" ci="2" mb="0" cb="0"/><line nr="715" mi="0" ci="12" mb="0" cb="0"/><line nr="716" mi="0" ci="4" mb="0" cb="0"/><line nr="718" mi="0" ci="2" mb="0" cb="0"/><line nr="725" mi="0" ci="2" mb="0" cb="2"/><line nr="726" mi="0" ci="8" mb="0" cb="0"/><line nr="727" mi="0" ci="8" mb="0" cb="2"/><line nr="728" mi="0" ci="8" mb="0" cb="0"/><line nr="729" mi="0" ci="4" mb="0" cb="0"/><line nr="731" mi="0" ci="2" mb="0" cb="0"/><line nr="734" mi="0" ci="8" mb="0" cb="0"/><line nr="735" mi="0" ci="9" mb="0" cb="0"/><line nr="737" mi="0" ci="8" mb="0" cb="2"/><line nr="738" mi="0" ci="8" mb="0" cb="0"/><line nr="739" mi="0" ci="9" mb="0" cb="0"/><line nr="740" mi="0" ci="8" mb="0" cb="0"/><line nr="741" mi="0" ci="4" mb="0" cb="0"/><line nr="743" mi="0" ci="2" mb="0" cb="0"/><line nr="749" mi="0" ci="2" mb="0" cb="2"/><line nr="750" mi="0" ci="7" mb="0" cb="0"/><line nr="751" mi="0" ci="8" mb="0" cb="2"/><line nr="752" mi="0" ci="7" mb="0" cb="0"/><line nr="753" mi="0" ci="4" mb="0" cb="0"/><line nr="755" mi="0" ci="2" mb="0" cb="0"/><line nr="758" mi="0" ci="7" mb="0" cb="0"/><line nr="759" mi="0" ci="8" mb="0" cb="0"/><line nr="760" mi="0" ci="8" mb="0" cb="2"/><line nr="761" mi="0" ci="7" mb="0" cb="0"/><line nr="762" mi="0" ci="8" mb="0" cb="0"/><line nr="764" mi="0" ci="8" mb="0" cb="0"/><line nr="765" mi="0" ci="4" mb="0" cb="0"/><line nr="767" mi="0" ci="2" mb="0" cb="0"/><line nr="776" mi="2" ci="0" mb="2" cb="0"/><line nr="777" mi="6" ci="0" mb="0" cb="0"/><line nr="780" mi="2" ci="0" mb="0" cb="0"/><line nr="786" mi="2" ci="0" mb="2" cb="0"/><line nr="787" mi="8" ci="0" mb="0" cb="0"/><line nr="788" mi="8" ci="0" mb="2" cb="0"/><line nr="789" mi="8" ci="0" mb="0" cb="0"/><line nr="790" mi="4" ci="0" mb="0" cb="0"/><line nr="792" mi="2" ci="0" mb="0" cb="0"/><line nr="794" mi="9" ci="0" mb="0" cb="0"/><line nr="800" mi="2" ci="0" mb="2" cb="0"/><line nr="801" mi="7" ci="0" mb="0" cb="0"/><line nr="802" mi="8" ci="0" mb="2" cb="0"/><line nr="803" mi="7" ci="0" mb="0" cb="0"/><line nr="804" mi="4" ci="0" mb="0" cb="0"/><line nr="806" mi="2" ci="0" mb="0" cb="0"/><line nr="808" mi="8" ci="0" mb="0" cb="0"/><line nr="815" mi="2" ci="0" mb="2" cb="0"/><line nr="816" mi="8" ci="0" mb="0" cb="0"/><line nr="817" mi="8" ci="0" mb="2" cb="0"/><line nr="818" mi="8" ci="0" mb="0" cb="0"/><line nr="819" mi="4" ci="0" mb="0" cb="0"/><line nr="821" mi="2" ci="0" mb="0" cb="0"/><line nr="823" mi="2" ci="0" mb="0" cb="0"/><line nr="824" mi="8" ci="0" mb="2" cb="0"/><line nr="825" mi="2" ci="0" mb="2" cb="0"/><line nr="826" mi="12" ci="0" mb="0" cb="0"/><line nr="828" mi="11" ci="0" mb="0" cb="0"/><line nr="831" mi="2" ci="0" mb="0" cb="0"/><line nr="837" mi="0" ci="2" mb="1" cb="1"/><line nr="838" mi="0" ci="7" mb="0" cb="0"/><line nr="839" mi="0" ci="8" mb="0" cb="2"/><line nr="840" mi="0" ci="7" mb="0" cb="0"/><line nr="841" mi="0" ci="4" mb="0" cb="0"/><line nr="843" mi="0" ci="2" mb="0" cb="0"/><line nr="845" mi="2" ci="0" mb="0" cb="0"/><line nr="846" mi="8" ci="0" mb="2" cb="0"/><line nr="847" mi="2" ci="0" mb="2" cb="0"/><line nr="848" mi="11" ci="0" mb="0" cb="0"/><line nr="850" mi="10" ci="0" mb="0" cb="0"/><line nr="853" mi="2" ci="0" mb="0" cb="0"/><line nr="860" mi="0" ci="2" mb="0" cb="2"/><line nr="861" mi="0" ci="8" mb="0" cb="0"/><line nr="862" mi="0" ci="8" mb="0" cb="2"/><line nr="863" mi="0" ci="8" mb="0" cb="0"/><line nr="864" mi="0" ci="4" mb="0" cb="0"/><line nr="866" mi="0" ci="2" mb="0" cb="0"/><line nr="868" mi="0" ci="2" mb="0" cb="0"/><line nr="869" mi="0" ci="8" mb="0" cb="2"/><line nr="870" mi="0" ci="11" mb="0" cb="0"/><line nr="872" mi="0" ci="2" mb="0" cb="0"/><line nr="878" mi="0" ci="2" mb="0" cb="2"/><line nr="879" mi="0" ci="7" mb="0" cb="0"/><line nr="880" mi="0" ci="8" mb="0" cb="2"/><line nr="881" mi="0" ci="7" mb="0" cb="0"/><line nr="882" mi="0" ci="4" mb="0" cb="0"/><line nr="884" mi="0" ci="2" mb="0" cb="0"/><line nr="886" mi="0" ci="2" mb="0" cb="0"/><line nr="887" mi="0" ci="8" mb="0" cb="2"/><line nr="888" mi="0" ci="10" mb="0" cb="0"/><line nr="890" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="705" covered="2203"/><counter type="BRANCH" missed="99" covered="258"/><counter type="LINE" missed="105" covered="329"/><counter type="COMPLEXITY" missed="80" covered="158"/><counter type="METHOD" missed="14" covered="37"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="705" covered="2203"/><counter type="BRANCH" missed="99" covered="258"/><counter type="LINE" missed="105" covered="329"/><counter type="COMPLEXITY" missed="80" covered="158"/><counter type="METHOD" missed="14" covered="37"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka"><class name="neureka/Neureka$Settings$Debug" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka$Settings;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="168"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keepDerivativeTargetPayloads" desc="()Z" line="172"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setKeepDerivativeTargetPayloads" desc="(Z)V" line="176"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lneureka/Neureka;" line="33"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="(Lgroovy/lang/Closure;)Lneureka/Neureka;" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="settings" desc="()Lneureka/Neureka$Settings;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="settings" desc="(Lgroovy/lang/Closure;)Lneureka/Neureka$Settings;" line="60"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="utility" desc="()Lneureka/Neureka$Utility;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="version" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings$AutoDiff" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka$Settings;)V" line="202"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="207"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainPendingErrorForJITProp" desc="()Z" line="212"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRetainPendingErrorForJITProp" desc="(Z)V" line="216"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyGradientWhenTensorIsUsed" desc="()Z" line="221"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setApplyGradientWhenTensorIsUsed" desc="(Z)V" line="225"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings$Indexing" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka$Settings;)V" line="235"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="240"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="legacy" desc="()Z" line="244"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLegacy" desc="(Z)V" line="248"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debug" desc="()Lneureka/Neureka$Settings$Debug;" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debug" desc="(Lgroovy/lang/Closure;)Lneureka/Neureka$Settings$Debug;" line="94"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="autoDiff" desc="()Lneureka/Neureka$Settings$AutoDiff;" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="autoDiff" desc="(Lgroovy/lang/Closure;)Lneureka/Neureka$Settings$AutoDiff;" line="104"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexing" desc="()Lneureka/Neureka$Settings$Indexing;" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexing" desc="(Lgroovy/lang/Closure;)Lneureka/Neureka$Settings$Indexing;" line="114"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="view" desc="()Lneureka/Neureka$Settings$View;" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="view" desc="(Lgroovy/lang/Closure;)Lneureka/Neureka$Settings$View;" line="124"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLocked" desc="()Z" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsLocked" desc="(Z)V" line="134"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="138"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="101"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Component" sourcefilename="Component.java"/><class name="neureka/Tsr" sourcefilename="Tsr.java"><method name="setRqsGradient" desc="(Z)Lneureka/Tsr;" line="43"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rqsGradient" desc="()Z" line="49"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setRqsGradient" desc="(Z)V" line="53"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsOutsourced" desc="(Z)Lneureka/Tsr;" line="62"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOutsourced" desc="()Z" line="83"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setIsOutsourced" desc="(Z)V" line="87"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsVirtual" desc="(Z)Lneureka/Tsr;" line="96"><counter type="INSTRUCTION" missed="25" covered="100"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVirtual" desc="()Z" line="122"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setIsVirtual" desc="(Z)V" line="126"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_addOrReject" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="159"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUndefined" desc="()Z" line="163"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSlice" desc="()Z" line="167"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sliceCount" desc="()I" line="172"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSliceParent" desc="()Z" line="177"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="belongsToGraph" desc="()Z" line="182"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeave" desc="()Z" line="186"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBranch" desc="()Z" line="190"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="device" desc="()Lneureka/acceleration/Device;" line="200"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graphNode" desc="()Lneureka/autograd/GraphNode;" line="209"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="index" desc="()Lneureka/framing/IndexAlias;" line="217"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_become" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="224"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="()Lneureka/Tsr;" line="246"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_configureFromNewShape" desc="([I)V" line="270"><counter type="INSTRUCTION" missed="12" covered="39"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="141"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([ILjava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([ILjava/lang/String;)V" line="342"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_intArray" desc="([Ljava/lang/Object;)[I" line="347"><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_doubleArray" desc="([Ljava/lang/Object;)[D" line="360"><counter type="INSTRUCTION" missed="9" covered="48"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([Ljava/lang/Object;)V" line="375"><counter type="INSTRUCTION" missed="53" covered="333"/><counter type="BRANCH" missed="15" covered="49"/><counter type="LINE" missed="6" covered="47"/><counter type="COMPLEXITY" missed="12" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="33"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([I)V" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([I)V" line="454"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([ID)V" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([ID)V" line="463"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([I[D)V" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([I[D)V" line="475"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/Tsr;Z)V" line="33"><counter type="INSTRUCTION" missed="17" covered="47"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/Tsr;Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="1" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Lneureka/Tsr;Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Lneureka/Tsr;Ljava/lang/String;Z)V" line="33"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([Lneureka/Tsr;Ljava/lang/String;Z)V" line="516"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backward" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="531"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backward" desc="(D)Lneureka/Tsr;" line="543"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyGradient" desc="()V" line="548"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="T" desc="()Lneureka/Tsr;" line="559"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="566"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="569"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="572"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negative" desc="()Lneureka/Tsr;" line="575"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="578"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="581"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="div" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="584"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="div" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="587"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mod" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="590"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="power" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="593"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="power" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="596"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xor" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="599"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xor" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="602"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lneureka/Tsr;)Z" line="605"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="label" desc="([[Ljava/lang/String;)Lneureka/Tsr;" line="609"><counter type="INSTRUCTION" missed="10" covered="47"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="label" desc="(Ljava/util/List;)Lneureka/Tsr;" line="625"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="label" desc="(Ljava/util/Map;)Lneureka/Tsr;" line="631"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAt" desc="(Ljava/lang/Object;Lneureka/Tsr;)Lneureka/Tsr;" line="636"><counter type="INSTRUCTION" missed="7" covered="72"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAt" desc="([I)D" line="651"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAt" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="655"><counter type="INSTRUCTION" missed="2" covered="314"/><counter type="BRANCH" missed="4" covered="42"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_configureSubsetFromRanges" desc="([Ljava/lang/Object;[I[II)I" line="723"><counter type="INSTRUCTION" missed="31" covered="320"/><counter type="BRANCH" missed="7" covered="27"/><counter type="LINE" missed="3" covered="42"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue64" desc="([D)Lneureka/Tsr;" line="889"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue32" desc="([F)Lneureka/Tsr;" line="895"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/Object;)Lneureka/Tsr;" line="901"><counter type="INSTRUCTION" missed="23" covered="52"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="916"><counter type="INSTRUCTION" missed="16" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gradient64" desc="()[D" line="924"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gradient32" desc="()[F" line="930"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addToGradient" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="936"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="to32" desc="()Lneureka/Tsr;" line="945"><counter type="INSTRUCTION" missed="8" covered="25"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="to64" desc="()Lneureka/Tsr;" line="956"><counter type="INSTRUCTION" missed="8" covered="25"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value64" desc="(I)D" line="967"><counter type="INSTRUCTION" missed="23" covered="12"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value64" desc="()[D" line="977"><counter type="INSTRUCTION" missed="4" covered="53"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value32" desc="(I)F" line="990"><counter type="INSTRUCTION" missed="16" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value32" desc="()[F" line="1000"><counter type="INSTRUCTION" missed="9" covered="36"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="([D)Lneureka/Tsr;" line="1012"><counter type="INSTRUCTION" missed="9" covered="8"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="1023"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_toString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="1027"><counter type="INSTRUCTION" missed="12" covered="229"/><counter type="BRANCH" missed="8" covered="38"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_stringified" desc="([DZI)Ljava/lang/String;" line="1105"><counter type="INSTRUCTION" missed="12" covered="66"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="1121"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeFit" desc="([Lneureka/Tsr;)V" line="1128"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_toString$17" desc="(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/String;Ljava/lang/String;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="1091"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_toString$16" desc="(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="1071"><counter type="INSTRUCTION" missed="10" covered="33"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$to64$15" desc="(Ljava/lang/Object;)V" line="960"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$to32$14" desc="(Ljava/lang/Object;)V" line="949"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$addToGradient$13" desc="(Lneureka/Tsr;Ljava/lang/Object;)V" line="939"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$addToGradient$12" desc="(Lneureka/Tsr;Ljava/lang/Object;)V" line="937"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$applyGradient$11" desc="(Ljava/lang/Object;)V" line="550"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$applyGradient$10" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="550"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$applyGradient$9" desc="(Ljava/lang/Object;)V" line="548"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$backward$8" desc="(Lneureka/Tsr;Ljava/lang/Object;)V" line="531"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$delete$7" desc="(Ljava/lang/Object;)V" line="257"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$delete$6" desc="(Ljava/lang/Object;)V" line="248"><counter type="INSTRUCTION" missed="5" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$delete$5" desc="(Ljava/lang/Object;)V" line="246"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_become$4" desc="(Lneureka/Tsr;Ljava/lang/Object;)V" line="233"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setIsVirtual$3" desc="(Lneureka/Tsr;)V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setIsOutsourced$2" desc="(Ljava/lang/Object;)V" line="67"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setIsOutsourced$1" desc="(Ljava/lang/Object;)V" line="70"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setIsOutsourced$0" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="71"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="482" covered="3384"/><counter type="BRANCH" missed="114" covered="384"/><counter type="LINE" missed="44" covered="549"/><counter type="COMPLEXITY" missed="115" covered="250"/><counter type="METHOD" missed="12" covered="104"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$Create" sourcefilename="Tsr.java"><method name="&lt;init&gt;" desc="()V" line="1146"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="E" desc="([I)Lneureka/Tsr;" line="1149"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newRandom" desc="([I)Lneureka/Tsr;" line="1153"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newRandom" desc="([IJ)Lneureka/Tsr;" line="1157"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTsrLike" desc="(Lneureka/Tsr;D)Lneureka/Tsr;" line="1162"><counter type="INSTRUCTION" missed="7" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTsrLike" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1170"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_newEmptyLike" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1178"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="83"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$IO" sourcefilename="Tsr.java"><method name="&lt;init&gt;" desc="()V" line="784"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFrom" desc="(Lneureka/Tsr;I)D" line="787"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFrom" desc="(Lneureka/Tsr;[I)D" line="793"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInto" desc="(Lneureka/Tsr;ID)V" line="798"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInto" desc="(Lneureka/Tsr;[ID)V" line="803"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInto" desc="(Lneureka/Tsr;ID)V" line="808"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInto" desc="(Lneureka/Tsr;[ID)V" line="813"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInto" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/Tsr;" line="818"><counter type="INSTRUCTION" missed="15" covered="20"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subInto" desc="(Lneureka/Tsr;ID)V" line="824"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subInto" desc="(Lneureka/Tsr;[ID)V" line="829"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subInto" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="834"><counter type="INSTRUCTION" missed="19" covered="32"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mulInto" desc="(Lneureka/Tsr;ID)V" line="848"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mulInto" desc="(Lneureka/Tsr;[ID)V" line="853"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="191"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="3" covered="39"/><counter type="COMPLEXITY" missed="9" covered="13"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$Exec" sourcefilename="Tsr.java"><method name="&lt;init&gt;" desc="()V" line="859"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reshaped" desc="(Lneureka/Tsr;[IZ)Lneureka/Tsr;" line="862"><counter type="INSTRUCTION" missed="57" covered="46"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="46"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings$View" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka$Settings;)V" line="259"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="264"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="legacy" desc="()Z" line="268"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLegacy" desc="(Z)V" line="272"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Utility" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="()V" line="280"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readResource" desc="(Ljava/lang/String;)Ljava/lang/String;" line="290"><counter type="INSTRUCTION" missed="7" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Neureka.java"><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="2"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="1" cb="3"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="1" ci="4" mb="1" cb="1"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="1" ci="4" mb="1" cb="1"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="1" ci="4" mb="1" cb="1"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="1" ci="4" mb="1" cb="1"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="1" ci="4" mb="1" cb="1"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="6" mb="0" cb="0"/><line nr="292" mi="0" ci="8" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="2"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="9" mb="0" cb="2"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="302" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="345"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="6" covered="105"/><counter type="COMPLEXITY" missed="7" covered="43"/><counter type="METHOD" missed="1" covered="39"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="Tsr.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="6" ci="57" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="4"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="9" mb="0" cb="2"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="1" cb="3"/><line nr="67" mi="5" ci="5" mb="1" cb="1"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="12" ci="0" mb="2" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="9" mb="0" cb="2"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="6" mb="1" cb="1"/><line nr="100" mi="6" ci="15" mb="1" cb="3"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="10" ci="2" mb="1" cb="1"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="3" ci="9" mb="1" cb="1"/><line nr="107" mi="4" ci="9" mb="1" cb="1"/><line nr="108" mi="0" ci="7" mb="0" cb="2"/><line nr="109" mi="0" ci="10" mb="1" cb="1"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="1" cb="3"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="10" mb="0" cb="2"/><line nr="126" mi="0" ci="4" mb="1" cb="1"/><line nr="127" mi="0" ci="9" mb="0" cb="2"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="2"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="5" mb="0" cb="2"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="10" mb="0" cb="4"/><line nr="163" mi="0" ci="7" mb="0" cb="2"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="9" mb="1" cb="3"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="1" ci="6" mb="1" cb="1"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="9" mb="1" cb="3"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="14" mb="1" cb="3"/><line nr="190" mi="0" ci="7" mb="0" cb="2"/><line nr="200" mi="0" ci="8" mb="0" cb="2"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="2"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="1" cb="1"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="8" mb="1" cb="1"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="12" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="1" cb="1"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="5" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="3" ci="7" mb="1" cb="1"/><line nr="272" mi="4" ci="9" mb="1" cb="1"/><line nr="273" mi="0" ci="6" mb="1" cb="3"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="8" ci="0" mb="0" cb="0"/><line nr="287" mi="1" ci="0" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="2"/><line nr="290" mi="0" ci="3" mb="0" cb="2"/><line nr="291" mi="0" ci="6" mb="0" cb="2"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="16" mb="0" cb="2"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="7" mb="1" cb="1"/><line nr="297" mi="0" ci="12" mb="0" cb="0"/><line nr="299" mi="0" ci="9" mb="0" cb="4"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="16" mb="0" cb="2"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="20" mb="0" cb="2"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="1" mb="0" cb="0"/><line nr="310" mi="0" ci="12" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="16" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="20" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="24" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="28" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="32" mb="0" cb="0"/><line nr="326" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="36" ci="0" mb="0" cb="0"/><line nr="329" mi="1" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="40" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="334" mi="0" ci="44" mb="0" cb="0"/><line nr="335" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="7" mb="0" cb="0"/><line nr="344" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="7" mb="0" cb="2"/><line nr="350" mi="0" ci="5" mb="1" cb="1"/><line nr="351" mi="9" ci="0" mb="0" cb="0"/><line nr="353" mi="0" ci="8" mb="0" cb="0"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="7" mb="0" cb="2"/><line nr="363" mi="0" ci="15" mb="0" cb="2"/><line nr="364" mi="9" ci="5" mb="1" cb="1"/><line nr="365" mi="0" ci="13" mb="1" cb="1"/><line nr="367" mi="0" ci="2" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="1" mb="0" cb="0"/><line nr="375" mi="1" ci="5" mb="2" cb="2"/><line nr="376" mi="0" ci="4" mb="1" cb="1"/><line nr="377" mi="5" ci="0" mb="2" cb="0"/><line nr="378" mi="8" ci="0" mb="0" cb="0"/><line nr="379" mi="1" ci="0" mb="0" cb="0"/><line nr="380" mi="10" ci="0" mb="4" cb="0"/><line nr="381" mi="14" ci="0" mb="0" cb="0"/><line nr="384" mi="0" ci="17" mb="0" cb="2"/><line nr="385" mi="0" ci="17" mb="0" cb="2"/><line nr="386" mi="0" ci="5" mb="0" cb="2"/><line nr="387" mi="0" ci="16" mb="1" cb="3"/><line nr="388" mi="0" ci="10" mb="0" cb="0"/><line nr="390" mi="0" ci="6" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="392" mi="0" ci="17" mb="0" cb="2"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="396" mi="0" ci="5" mb="0" cb="2"/><line nr="397" mi="10" ci="8" mb="1" cb="1"/><line nr="398" mi="0" ci="17" mb="1" cb="1"/><line nr="401" mi="0" ci="15" mb="0" cb="6"/><line nr="402" mi="0" ci="18" mb="0" cb="2"/><line nr="403" mi="0" ci="11" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="10" mb="1" cb="3"/><line nr="406" mi="0" ci="11" mb="0" cb="0"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="408" mi="0" ci="10" mb="0" cb="4"/><line nr="409" mi="0" ci="10" mb="0" cb="0"/><line nr="410" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="2" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="0"/><line nr="416" mi="0" ci="16" mb="0" cb="2"/><line nr="417" mi="0" ci="9" mb="0" cb="4"/><line nr="418" mi="0" ci="3" mb="0" cb="2"/><line nr="419" mi="0" ci="4" mb="1" cb="1"/><line nr="420" mi="0" ci="5" mb="0" cb="0"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="2" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><line nr="427" mi="0" ci="4" mb="0" cb="0"/><line nr="428" mi="0" ci="2" mb="0" cb="0"/><line nr="429" mi="0" ci="16" mb="0" cb="2"/><line nr="430" mi="0" ci="4" mb="0" cb="2"/><line nr="431" mi="0" ci="5" mb="0" cb="0"/><line nr="432" mi="0" ci="8" mb="0" cb="0"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="0" ci="3" mb="0" cb="2"/><line nr="435" mi="0" ci="6" mb="0" cb="0"/><line nr="436" mi="0" ci="3" mb="1" cb="1"/><line nr="437" mi="4" ci="0" mb="0" cb="0"/><line nr="440" mi="0" ci="6" mb="0" cb="0"/><line nr="441" mi="0" ci="1" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="2" mb="0" cb="0"/><line nr="446" mi="0" ci="9" mb="0" cb="0"/><line nr="447" mi="0" ci="1" mb="0" cb="0"/><line nr="449" mi="0" ci="2" mb="0" cb="0"/><line nr="450" mi="0" ci="3" mb="0" cb="0"/><line nr="451" mi="0" ci="1" mb="0" cb="0"/><line nr="454" mi="0" ci="5" mb="0" cb="0"/><line nr="455" mi="0" ci="3" mb="0" cb="0"/><line nr="456" mi="0" ci="1" mb="0" cb="0"/><line nr="458" mi="0" ci="2" mb="0" cb="0"/><line nr="459" mi="0" ci="4" mb="0" cb="0"/><line nr="460" mi="0" ci="1" mb="0" cb="0"/><line nr="463" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="9" mb="0" cb="2"/><line nr="466" mi="0" ci="3" mb="0" cb="0"/><line nr="467" mi="0" ci="6" mb="0" cb="0"/><line nr="468" mi="0" ci="1" mb="0" cb="0"/><line nr="470" mi="0" ci="2" mb="0" cb="0"/><line nr="471" mi="0" ci="4" mb="0" cb="0"/><line nr="472" mi="0" ci="1" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="0" cb="0"/><line nr="476" mi="0" ci="3" mb="0" cb="0"/><line nr="477" mi="0" ci="1" mb="0" cb="0"/><line nr="482" mi="0" ci="2" mb="0" cb="0"/><line nr="483" mi="3" ci="9" mb="1" cb="1"/><line nr="484" mi="0" ci="3" mb="0" cb="0"/><line nr="486" mi="4" ci="9" mb="1" cb="1"/><line nr="487" mi="0" ci="2" mb="1" cb="1"/><line nr="488" mi="0" ci="3" mb="1" cb="1"/><line nr="489" mi="0" ci="3" mb="0" cb="0"/><line nr="490" mi="0" ci="7" mb="0" cb="0"/><line nr="491" mi="0" ci="1" mb="0" cb="0"/><line nr="492" mi="3" ci="0" mb="0" cb="0"/><line nr="493" mi="7" ci="0" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="0"/><line nr="497" mi="0" ci="1" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="0" cb="0"/><line nr="503" mi="1" ci="2" mb="1" cb="1"/><line nr="504" mi="0" ci="10" mb="0" cb="0"/><line nr="505" mi="0" ci="1" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="5" mb="0" cb="0"/><line nr="509" mi="0" ci="1" mb="0" cb="0"/><line nr="511" mi="0" ci="2" mb="0" cb="0"/><line nr="512" mi="0" ci="5" mb="0" cb="0"/><line nr="513" mi="0" ci="1" mb="0" cb="0"/><line nr="516" mi="0" ci="10" mb="2" cb="4"/><line nr="517" mi="0" ci="6" mb="0" cb="0"/><line nr="518" mi="0" ci="4" mb="0" cb="0"/><line nr="519" mi="0" ci="1" mb="0" cb="0"/><line nr="531" mi="0" ci="11" mb="0" cb="2"/><line nr="532" mi="0" ci="7" mb="1" cb="1"/><line nr="534" mi="0" ci="2" mb="0" cb="0"/><line nr="543" mi="0" ci="9" mb="0" cb="0"/><line nr="544" mi="0" ci="2" mb="0" cb="0"/><line nr="548" mi="0" ci="9" mb="0" cb="0"/><line nr="549" mi="0" ci="6" mb="0" cb="0"/><line nr="550" mi="6" ci="6" mb="0" cb="0"/><line nr="551" mi="0" ci="4" mb="0" cb="0"/><line nr="552" mi="0" ci="16" mb="0" cb="0"/><line nr="553" mi="0" ci="1" mb="0" cb="0"/><line nr="554" mi="0" ci="1" mb="0" cb="0"/><line nr="559" mi="0" ci="4" mb="0" cb="0"/><line nr="560" mi="0" ci="19" mb="0" cb="4"/><line nr="561" mi="0" ci="6" mb="0" cb="0"/><line nr="562" mi="0" ci="7" mb="0" cb="0"/><line nr="566" mi="0" ci="15" mb="0" cb="0"/><line nr="569" mi="0" ci="9" mb="0" cb="0"/><line nr="572" mi="0" ci="15" mb="0" cb="0"/><line nr="575" mi="0" ci="11" mb="0" cb="0"/><line nr="578" mi="0" ci="15" mb="0" cb="0"/><line nr="581" mi="0" ci="9" mb="0" cb="0"/><line nr="584" mi="0" ci="15" mb="0" cb="0"/><line nr="587" mi="0" ci="9" mb="0" cb="0"/><line nr="590" mi="0" ci="15" mb="0" cb="0"/><line nr="593" mi="0" ci="15" mb="0" cb="0"/><line nr="596" mi="0" ci="9" mb="0" cb="0"/><line nr="599" mi="0" ci="15" mb="0" cb="0"/><line nr="602" mi="0" ci="9" mb="0" cb="0"/><line nr="605" mi="0" ci="9" mb="0" cb="2"/><line nr="609" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="0" ci="2" mb="1" cb="1"/><line nr="611" mi="6" ci="0" mb="0" cb="0"/><line nr="612" mi="4" ci="0" mb="0" cb="0"/><line nr="614" mi="0" ci="8" mb="0" cb="2"/><line nr="615" mi="0" ci="4" mb="1" cb="1"/><line nr="616" mi="0" ci="10" mb="0" cb="2"/><line nr="617" mi="0" ci="16" mb="1" cb="1"/><line nr="621" mi="0" ci="2" mb="0" cb="0"/><line nr="625" mi="0" ci="5" mb="0" cb="0"/><line nr="626" mi="0" ci="9" mb="1" cb="1"/><line nr="627" mi="0" ci="2" mb="0" cb="0"/><line nr="631" mi="0" ci="8" mb="0" cb="0"/><line nr="632" mi="0" ci="2" mb="0" cb="0"/><line nr="636" mi="5" ci="3" mb="1" cb="1"/><line nr="637" mi="2" ci="7" mb="1" cb="1"/><line nr="638" mi="0" ci="2" mb="0" cb="0"/><line nr="639" mi="0" ci="6" mb="0" cb="4"/><line nr="640" mi="0" ci="5" mb="0" cb="0"/><line nr="641" mi="0" ci="4" mb="0" cb="0"/><line nr="642" mi="0" ci="2" mb="0" cb="0"/><line nr="644" mi="0" ci="16" mb="2" cb="4"/><line nr="645" mi="0" ci="16" mb="0" cb="0"/><line nr="646" mi="0" ci="9" mb="0" cb="2"/><line nr="647" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="7" ci="0" mb="0" cb="0"/><line nr="655" mi="2" ci="2" mb="1" cb="1"/><line nr="656" mi="0" ci="9" mb="0" cb="4"/><line nr="657" mi="0" ci="2" mb="0" cb="0"/><line nr="658" mi="0" ci="4" mb="0" cb="0"/><line nr="659" mi="0" ci="3" mb="0" cb="2"/><line nr="660" mi="0" ci="4" mb="0" cb="0"/><line nr="661" mi="0" ci="2" mb="0" cb="0"/><line nr="662" mi="0" ci="26" mb="0" cb="6"/><line nr="663" mi="0" ci="2" mb="0" cb="2"/><line nr="664" mi="0" ci="5" mb="0" cb="0"/><line nr="665" mi="0" ci="3" mb="0" cb="0"/><line nr="666" mi="0" ci="2" mb="1" cb="1"/><line nr="667" mi="0" ci="27" mb="0" cb="4"/><line nr="668" mi="0" ci="5" mb="0" cb="0"/><line nr="671" mi="0" ci="2" mb="0" cb="0"/><line nr="672" mi="0" ci="26" mb="1" cb="5"/><line nr="673" mi="0" ci="10" mb="0" cb="2"/><line nr="674" mi="0" ci="3" mb="0" cb="0"/><line nr="675" mi="0" ci="7" mb="0" cb="0"/><line nr="677" mi="0" ci="1" mb="0" cb="0"/><line nr="678" mi="0" ci="3" mb="1" cb="1"/><line nr="680" mi="0" ci="6" mb="0" cb="0"/><line nr="681" mi="0" ci="5" mb="0" cb="0"/><line nr="682" mi="0" ci="7" mb="0" cb="0"/><line nr="683" mi="0" ci="5" mb="0" cb="0"/><line nr="684" mi="0" ci="11" mb="0" cb="2"/><line nr="685" mi="0" ci="11" mb="0" cb="0"/><line nr="686" mi="0" ci="17" mb="0" cb="0"/><line nr="689" mi="0" ci="4" mb="0" cb="0"/><line nr="690" mi="0" ci="4" mb="0" cb="0"/><line nr="691" mi="0" ci="4" mb="0" cb="0"/><line nr="692" mi="0" ci="5" mb="0" cb="0"/><line nr="693" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="7" mb="0" cb="2"/><line nr="695" mi="0" ci="21" mb="0" cb="4"/><line nr="697" mi="0" ci="4" mb="0" cb="0"/><line nr="698" mi="0" ci="3" mb="0" cb="2"/><line nr="699" mi="0" ci="5" mb="0" cb="0"/><line nr="700" mi="0" ci="5" mb="0" cb="0"/><line nr="702" mi="0" ci="7" mb="0" cb="2"/><line nr="703" mi="0" ci="8" mb="0" cb="0"/><line nr="704" mi="0" ci="5" mb="0" cb="0"/><line nr="705" mi="0" ci="8" mb="0" cb="2"/><line nr="706" mi="0" ci="4" mb="0" cb="0"/><line nr="707" mi="0" ci="4" mb="0" cb="0"/><line nr="708" mi="0" ci="2" mb="0" cb="0"/><line nr="723" mi="0" ci="8" mb="0" cb="2"/><line nr="724" mi="0" ci="2" mb="0" cb="0"/><line nr="725" mi="0" ci="2" mb="0" cb="0"/><line nr="726" mi="0" ci="5" mb="0" cb="2"/><line nr="727" mi="0" ci="5" mb="0" cb="2"/><line nr="728" mi="0" ci="7" mb="0" cb="0"/><line nr="729" mi="0" ci="7" mb="0" cb="0"/><line nr="730" mi="0" ci="9" mb="0" cb="0"/><line nr="731" mi="0" ci="12" mb="0" cb="2"/><line nr="732" mi="0" ci="15" mb="0" cb="0"/><line nr="733" mi="0" ci="20" mb="0" cb="0"/><line nr="735" mi="0" ci="2" mb="0" cb="0"/><line nr="736" mi="0" ci="1" mb="0" cb="0"/><line nr="738" mi="0" ci="5" mb="0" cb="0"/><line nr="739" mi="0" ci="2" mb="1" cb="1"/><line nr="740" mi="0" ci="10" mb="0" cb="0"/><line nr="741" mi="0" ci="2" mb="0" cb="0"/><line nr="742" mi="0" ci="2" mb="0" cb="0"/><line nr="743" mi="0" ci="1" mb="0" cb="0"/><line nr="744" mi="7" ci="0" mb="0" cb="0"/><line nr="746" mi="0" ci="1" mb="0" cb="0"/><line nr="748" mi="0" ci="8" mb="0" cb="0"/><line nr="749" mi="0" ci="24" mb="0" cb="2"/><line nr="750" mi="0" ci="22" mb="1" cb="3"/><line nr="751" mi="0" ci="5" mb="0" cb="0"/><line nr="752" mi="0" ci="8" mb="1" cb="1"/><line nr="753" mi="0" ci="2" mb="1" cb="1"/><line nr="754" mi="0" ci="14" mb="0" cb="0"/><line nr="757" mi="9" ci="0" mb="0" cb="0"/><line nr="759" mi="0" ci="14" mb="1" cb="1"/><line nr="760" mi="0" ci="2" mb="1" cb="1"/><line nr="761" mi="0" ci="20" mb="0" cb="0"/><line nr="764" mi="15" ci="0" mb="0" cb="0"/><line nr="766" mi="0" ci="1" mb="0" cb="0"/><line nr="767" mi="0" ci="9" mb="0" cb="0"/><line nr="768" mi="0" ci="15" mb="0" cb="0"/><line nr="771" mi="0" ci="7" mb="1" cb="5"/><line nr="772" mi="0" ci="2" mb="0" cb="0"/><line nr="773" mi="0" ci="2" mb="0" cb="0"/><line nr="774" mi="0" ci="2" mb="0" cb="0"/><line nr="776" mi="0" ci="11" mb="0" cb="2"/><line nr="777" mi="0" ci="11" mb="0" cb="2"/><line nr="778" mi="0" ci="10" mb="0" cb="0"/><line nr="779" mi="0" ci="6" mb="0" cb="0"/><line nr="781" mi="0" ci="7" mb="0" cb="0"/><line nr="784" mi="3" ci="0" mb="0" cb="0"/><line nr="787" mi="2" ci="6" mb="2" cb="2"/><line nr="788" mi="0" ci="8" mb="1" cb="1"/><line nr="789" mi="7" ci="0" mb="0" cb="0"/><line nr="793" mi="0" ci="4" mb="0" cb="0"/><line nr="794" mi="0" ci="7" mb="0" cb="0"/><line nr="798" mi="0" ci="4" mb="0" cb="0"/><line nr="799" mi="0" ci="7" mb="0" cb="0"/><line nr="800" mi="0" ci="1" mb="0" cb="0"/><line nr="803" mi="0" ci="4" mb="0" cb="0"/><line nr="804" mi="0" ci="7" mb="0" cb="0"/><line nr="805" mi="0" ci="1" mb="0" cb="0"/><line nr="808" mi="0" ci="4" mb="0" cb="0"/><line nr="809" mi="0" ci="10" mb="0" cb="0"/><line nr="810" mi="0" ci="1" mb="0" cb="0"/><line nr="813" mi="0" ci="4" mb="0" cb="0"/><line nr="814" mi="0" ci="10" mb="0" cb="0"/><line nr="815" mi="0" ci="1" mb="0" cb="0"/><line nr="818" mi="15" ci="3" mb="3" cb="1"/><line nr="819" mi="0" ci="15" mb="0" cb="0"/><line nr="820" mi="0" ci="2" mb="0" cb="0"/><line nr="824" mi="0" ci="4" mb="0" cb="0"/><line nr="825" mi="0" ci="10" mb="0" cb="0"/><line nr="826" mi="0" ci="1" mb="0" cb="0"/><line nr="829" mi="0" ci="4" mb="0" cb="0"/><line nr="830" mi="0" ci="10" mb="0" cb="0"/><line nr="831" mi="0" ci="1" mb="0" cb="0"/><line nr="834" mi="3" ci="3" mb="3" cb="1"/><line nr="835" mi="12" ci="0" mb="0" cb="0"/><line nr="837" mi="4" ci="3" mb="1" cb="1"/><line nr="838" mi="0" ci="5" mb="0" cb="0"/><line nr="839" mi="0" ci="3" mb="0" cb="0"/><line nr="840" mi="0" ci="7" mb="0" cb="2"/><line nr="841" mi="0" ci="6" mb="0" cb="0"/><line nr="842" mi="0" ci="4" mb="0" cb="0"/><line nr="845" mi="0" ci="1" mb="0" cb="0"/><line nr="848" mi="0" ci="4" mb="0" cb="0"/><line nr="849" mi="0" ci="10" mb="0" cb="0"/><line nr="850" mi="0" ci="1" mb="0" cb="0"/><line nr="853" mi="0" ci="4" mb="0" cb="0"/><line nr="854" mi="0" ci="10" mb="0" cb="0"/><line nr="855" mi="0" ci="1" mb="0" cb="0"/><line nr="859" mi="3" ci="0" mb="0" cb="0"/><line nr="862" mi="1" ci="9" mb="1" cb="1"/><line nr="863" mi="0" ci="10" mb="0" cb="0"/><line nr="864" mi="0" ci="10" mb="0" cb="0"/><line nr="865" mi="0" ci="7" mb="0" cb="0"/><line nr="866" mi="0" ci="2" mb="0" cb="0"/><line nr="867" mi="5" ci="4" mb="1" cb="1"/><line nr="868" mi="0" ci="2" mb="1" cb="1"/><line nr="869" mi="4" ci="0" mb="0" cb="0"/><line nr="870" mi="8" ci="0" mb="2" cb="0"/><line nr="871" mi="8" ci="0" mb="0" cb="0"/><line nr="873" mi="5" ci="0" mb="2" cb="0"/><line nr="874" mi="8" ci="0" mb="2" cb="0"/><line nr="875" mi="14" ci="0" mb="0" cb="0"/><line nr="878" mi="4" ci="0" mb="0" cb="0"/><line nr="880" mi="0" ci="2" mb="0" cb="0"/><line nr="889" mi="0" ci="12" mb="0" cb="2"/><line nr="890" mi="0" ci="3" mb="0" cb="0"/><line nr="891" mi="0" ci="2" mb="0" cb="0"/><line nr="895" mi="0" ci="12" mb="0" cb="2"/><line nr="896" mi="0" ci="3" mb="0" cb="0"/><line nr="897" mi="0" ci="2" mb="0" cb="0"/><line nr="901" mi="0" ci="9" mb="0" cb="2"/><line nr="902" mi="6" ci="3" mb="1" cb="1"/><line nr="903" mi="0" ci="3" mb="0" cb="2"/><line nr="904" mi="0" ci="4" mb="0" cb="0"/><line nr="905" mi="9" ci="3" mb="1" cb="1"/><line nr="906" mi="0" ci="9" mb="0" cb="0"/><line nr="907" mi="0" ci="3" mb="1" cb="1"/><line nr="908" mi="0" ci="4" mb="0" cb="0"/><line nr="909" mi="0" ci="12" mb="1" cb="1"/><line nr="910" mi="8" ci="0" mb="0" cb="0"/><line nr="912" mi="0" ci="2" mb="0" cb="0"/><line nr="916" mi="0" ci="3" mb="1" cb="1"/><line nr="917" mi="5" ci="0" mb="0" cb="0"/><line nr="918" mi="11" ci="0" mb="2" cb="0"/><line nr="920" mi="0" ci="3" mb="0" cb="0"/><line nr="924" mi="0" ci="5" mb="0" cb="0"/><line nr="925" mi="0" ci="4" mb="0" cb="2"/><line nr="926" mi="4" ci="6" mb="1" cb="1"/><line nr="930" mi="5" ci="0" mb="0" cb="0"/><line nr="931" mi="4" ci="0" mb="2" cb="0"/><line nr="932" mi="10" ci="0" mb="2" cb="0"/><line nr="936" mi="0" ci="7" mb="0" cb="2"/><line nr="937" mi="0" ci="18" mb="0" cb="0"/><line nr="938" mi="0" ci="1" mb="0" cb="0"/><line nr="939" mi="0" ci="14" mb="0" cb="0"/><line nr="941" mi="0" ci="2" mb="0" cb="0"/><line nr="945" mi="0" ci="3" mb="1" cb="1"/><line nr="946" mi="0" ci="5" mb="0" cb="0"/><line nr="947" mi="4" ci="2" mb="1" cb="1"/><line nr="948" mi="0" ci="6" mb="0" cb="0"/><line nr="949" mi="5" ci="5" mb="0" cb="0"/><line nr="950" mi="4" ci="2" mb="1" cb="1"/><line nr="952" mi="0" ci="2" mb="0" cb="0"/><line nr="956" mi="0" ci="3" mb="1" cb="1"/><line nr="957" mi="0" ci="5" mb="0" cb="0"/><line nr="958" mi="4" ci="2" mb="1" cb="1"/><line nr="959" mi="0" ci="6" mb="0" cb="0"/><line nr="960" mi="5" ci="5" mb="0" cb="0"/><line nr="961" mi="4" ci="2" mb="1" cb="1"/><line nr="963" mi="0" ci="2" mb="0" cb="0"/><line nr="967" mi="0" ci="3" mb="1" cb="1"/><line nr="968" mi="0" ci="9" mb="1" cb="1"/><line nr="969" mi="7" ci="0" mb="0" cb="0"/><line nr="971" mi="9" ci="0" mb="2" cb="0"/><line nr="972" mi="7" ci="0" mb="0" cb="0"/><line nr="977" mi="0" ci="10" mb="1" cb="5"/><line nr="978" mi="0" ci="7" mb="0" cb="0"/><line nr="980" mi="0" ci="12" mb="0" cb="2"/><line nr="981" mi="0" ci="5" mb="0" cb="4"/><line nr="982" mi="0" ci="4" mb="0" cb="0"/><line nr="983" mi="4" ci="8" mb="1" cb="1"/><line nr="984" mi="0" ci="5" mb="0" cb="0"/><line nr="986" mi="0" ci="2" mb="0" cb="0"/><line nr="990" mi="0" ci="3" mb="1" cb="1"/><line nr="991" mi="10" ci="0" mb="2" cb="0"/><line nr="992" mi="6" ci="0" mb="0" cb="0"/><line nr="994" mi="0" ci="10" mb="0" cb="2"/><line nr="995" mi="0" ci="6" mb="0" cb="0"/><line nr="1000" mi="0" ci="10" mb="1" cb="5"/><line nr="1001" mi="0" ci="7" mb="0" cb="0"/><line nr="1003" mi="0" ci="12" mb="0" cb="2"/><line nr="1004" mi="0" ci="5" mb="1" cb="3"/><line nr="1005" mi="4" ci="0" mb="0" cb="0"/><line nr="1006" mi="5" ci="0" mb="0" cb="0"/><line nr="1008" mi="0" ci="2" mb="0" cb="0"/><line nr="1012" mi="0" ci="3" mb="0" cb="0"/><line nr="1013" mi="9" ci="3" mb="3" cb="1"/><line nr="1014" mi="0" ci="2" mb="0" cb="0"/><line nr="1023" mi="2" ci="9" mb="1" cb="1"/><line nr="1027" mi="2" ci="5" mb="1" cb="1"/><line nr="1028" mi="1" ci="5" mb="1" cb="1"/><line nr="1029" mi="1" ci="5" mb="1" cb="1"/><line nr="1030" mi="3" ci="5" mb="1" cb="1"/><line nr="1031" mi="0" ci="8" mb="0" cb="2"/><line nr="1032" mi="0" ci="5" mb="0" cb="2"/><line nr="1033" mi="2" ci="3" mb="1" cb="1"/><line nr="1034" mi="0" ci="4" mb="0" cb="0"/><line nr="1035" mi="0" ci="3" mb="0" cb="0"/><line nr="1036" mi="0" ci="9" mb="0" cb="2"/><line nr="1037" mi="0" ci="6" mb="0" cb="0"/><line nr="1038" mi="0" ci="10" mb="0" cb="2"/><line nr="1040" mi="0" ci="4" mb="0" cb="0"/><line nr="1041" mi="0" ci="2" mb="0" cb="0"/><line nr="1042" mi="0" ci="5" mb="0" cb="2"/><line nr="1043" mi="0" ci="3" mb="0" cb="0"/><line nr="1044" mi="0" ci="4" mb="0" cb="0"/><line nr="1046" mi="3" ci="8" mb="2" cb="2"/><line nr="1047" mi="0" ci="2" mb="0" cb="0"/><line nr="1048" mi="0" ci="9" mb="0" cb="0"/><line nr="1049" mi="0" ci="1" mb="0" cb="0"/><line nr="1051" mi="0" ci="5" mb="0" cb="2"/><line nr="1052" mi="0" ci="3" mb="0" cb="0"/><line nr="1053" mi="0" ci="4" mb="0" cb="0"/><line nr="1055" mi="0" ci="4" mb="0" cb="2"/><line nr="1056" mi="0" ci="3" mb="0" cb="2"/><line nr="1057" mi="0" ci="3" mb="0" cb="0"/><line nr="1058" mi="0" ci="5" mb="0" cb="0"/><line nr="1059" mi="0" ci="2" mb="0" cb="2"/><line nr="1060" mi="0" ci="11" mb="0" cb="0"/><line nr="1062" mi="0" ci="3" mb="0" cb="0"/><line nr="1066" mi="0" ci="4" mb="0" cb="2"/><line nr="1067" mi="0" ci="10" mb="0" cb="4"/><line nr="1068" mi="0" ci="5" mb="0" cb="0"/><line nr="1069" mi="0" ci="5" mb="0" cb="0"/><line nr="1070" mi="0" ci="9" mb="0" cb="0"/><line nr="1071" mi="0" ci="3" mb="1" cb="1"/><line nr="1072" mi="7" ci="0" mb="0" cb="0"/><line nr="1074" mi="0" ci="9" mb="0" cb="0"/><line nr="1076" mi="0" ci="8" mb="0" cb="0"/><line nr="1078" mi="3" ci="12" mb="1" cb="1"/><line nr="1081" mi="0" ci="1" mb="0" cb="0"/><line nr="1082" mi="0" ci="6" mb="0" cb="0"/><line nr="1085" mi="0" ci="4" mb="0" cb="2"/><line nr="1086" mi="0" ci="10" mb="0" cb="4"/><line nr="1087" mi="0" ci="5" mb="0" cb="0"/><line nr="1088" mi="0" ci="3" mb="1" cb="1"/><line nr="1089" mi="0" ci="5" mb="0" cb="0"/><line nr="1090" mi="0" ci="6" mb="0" cb="0"/><line nr="1091" mi="0" ci="3" mb="0" cb="2"/><line nr="1092" mi="0" ci="7" mb="0" cb="0"/><line nr="1094" mi="0" ci="11" mb="0" cb="0"/><line nr="1096" mi="0" ci="1" mb="0" cb="0"/><line nr="1097" mi="0" ci="6" mb="0" cb="0"/><line nr="1101" mi="0" ci="2" mb="0" cb="0"/><line nr="1105" mi="0" ci="4" mb="0" cb="0"/><line nr="1106" mi="0" ci="3" mb="0" cb="0"/><line nr="1107" mi="0" ci="4" mb="0" cb="0"/><line nr="1108" mi="0" ci="6" mb="0" cb="2"/><line nr="1109" mi="0" ci="7" mb="0" cb="2"/><line nr="1111" mi="0" ci="15" mb="1" cb="3"/><line nr="1112" mi="12" ci="0" mb="2" cb="0"/><line nr="1113" mi="0" ci="4" mb="0" cb="0"/><line nr="1114" mi="0" ci="10" mb="0" cb="2"/><line nr="1115" mi="0" ci="10" mb="0" cb="2"/><line nr="1117" mi="0" ci="3" mb="0" cb="0"/><line nr="1121" mi="0" ci="4" mb="0" cb="0"/><line nr="1128" mi="0" ci="2" mb="0" cb="0"/><line nr="1129" mi="0" ci="23" mb="0" cb="4"/><line nr="1130" mi="0" ci="8" mb="0" cb="2"/><line nr="1131" mi="0" ci="6" mb="0" cb="2"/><line nr="1132" mi="0" ci="5" mb="0" cb="0"/><line nr="1133" mi="0" ci="3" mb="0" cb="0"/><line nr="1134" mi="0" ci="5" mb="0" cb="0"/><line nr="1135" mi="0" ci="11" mb="0" cb="2"/><line nr="1136" mi="0" ci="13" mb="0" cb="2"/><line nr="1137" mi="0" ci="3" mb="0" cb="0"/><line nr="1138" mi="0" ci="2" mb="0" cb="0"/><line nr="1140" mi="0" ci="8" mb="0" cb="0"/><line nr="1144" mi="0" ci="1" mb="0" cb="0"/><line nr="1146" mi="3" ci="0" mb="0" cb="0"/><line nr="1149" mi="6" ci="0" mb="0" cb="0"/><line nr="1153" mi="0" ci="4" mb="0" cb="0"/><line nr="1157" mi="0" ci="3" mb="0" cb="0"/><line nr="1158" mi="0" ci="8" mb="0" cb="0"/><line nr="1162" mi="0" ci="3" mb="0" cb="0"/><line nr="1163" mi="7" ci="3" mb="1" cb="1"/><line nr="1164" mi="0" ci="5" mb="0" cb="0"/><line nr="1165" mi="0" ci="10" mb="1" cb="1"/><line nr="1166" mi="0" ci="2" mb="0" cb="0"/><line nr="1170" mi="0" ci="3" mb="0" cb="0"/><line nr="1171" mi="7" ci="3" mb="1" cb="1"/><line nr="1172" mi="0" ci="6" mb="0" cb="0"/><line nr="1173" mi="0" ci="10" mb="0" cb="2"/><line nr="1174" mi="0" ci="2" mb="0" cb="0"/><line nr="1178" mi="0" ci="4" mb="0" cb="0"/><line nr="1179" mi="0" ci="5" mb="0" cb="0"/><line nr="1180" mi="0" ci="5" mb="0" cb="0"/><line nr="1181" mi="0" ci="5" mb="0" cb="0"/><line nr="1182" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="611" covered="3704"/><counter type="BRANCH" missed="136" covered="400"/><counter type="LINE" missed="57" covered="614"/><counter type="COMPLEXITY" missed="136" covered="270"/><counter type="METHOD" missed="16" covered="122"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="Component.java"/><counter type="INSTRUCTION" missed="627" covered="4049"/><counter type="BRANCH" missed="142" covered="414"/><counter type="LINE" missed="63" covered="719"/><counter type="COMPLEXITY" missed="143" covered="313"/><counter type="METHOD" missed="17" covered="161"/><counter type="CLASS" missed="0" covered="11"/></package><package name="neureka/autograd"><class name="neureka/autograd/GraphNode" sourcefilename="GraphNode.java"><method name="usesAD" desc="()Z" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usesForwardAD" desc="()Z" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usesReverseAD" desc="()Z" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reliesOnJustInTimeProp" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAndRemovePendingError" desc="()Lneureka/autograd/PendingError;" line="87"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsedAsDerivative" desc="()Z" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="()Lneureka/calculus/Function;" line="113"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParents" desc="()[Lneureka/autograd/GraphNode;" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPayload" desc="()Lneureka/Tsr;" line="142"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setPayload" desc="(Lneureka/Tsr;)V" line="146"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="169"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lock" desc="()Lneureka/autograd/GraphLock;" line="186"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="195"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nid" desc="()J" line="204"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="obtainLocking" desc="(Lneureka/autograd/GraphLock;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_attachChild" desc="(Lneureka/autograd/GraphNode;)V" line="222"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCachable" desc="()Z" line="234"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeave" desc="()Z" line="243"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGraphLeave" desc="()Z" line="247"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVirtual" desc="()Z" line="258"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lneureka/calculus/Function;Ljava/lang/Object;Ljava/util/function/Supplier;)V" line="80"><counter type="INSTRUCTION" missed="5" covered="114"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="(Lneureka/Tsr;Lneureka/calculus/Function;[Lneureka/Tsr;Lneureka/autograd/GraphLock;)V" line="284"><counter type="INSTRUCTION" missed="10" covered="244"/><counter type="BRANCH" missed="9" covered="45"/><counter type="LINE" missed="1" covered="42"/><counter type="COMPLEXITY" missed="9" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_modeOf" desc="([Lneureka/Tsr;Lneureka/calculus/Function;)I" line="362"><counter type="INSTRUCTION" missed="5" covered="102"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backward" desc="(Lneureka/Tsr;)V" line="394"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_backward" desc="(Lneureka/Tsr;Ljava/util/Set;Z)V" line="424"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_carryPendingBackPropToGradients" desc="(Ljava/util/Set;)V" line="460"><counter type="INSTRUCTION" missed="3" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backwardJIT" desc="(Lneureka/Tsr;)V" line="484"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_backwardJIT" desc="(Lneureka/Tsr;Lneureka/autograd/GraphNode;)V" line="489"><counter type="INSTRUCTION" missed="14" covered="48"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_deleteDerivativesRecursively" desc="()V" line="523"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_numberOfReverseModeADChildren" desc="()I" line="535"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mode" desc="()I" line="551"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="function" desc="()Lneureka/calculus/Function;" line="558"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lneureka/autograd/GraphNode;Ljava/lang/Object;)V" line="566"><counter type="INSTRUCTION" missed="6" covered="41"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lneureka/autograd/GraphNode;)Ljava/lang/Object;" line="586"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="has" desc="(Lneureka/autograd/GraphNode;)Z" line="598"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="609"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachBackward" desc="(Lneureka/Tsr;Ljava/util/function/BiConsumer;)V" line="617"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachForward" desc="(Lneureka/Tsr;Ljava/util/function/BiConsumer;)V" line="628"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachDerivative" desc="(Ljava/util/function/BiConsumer;)V" line="639"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachTarget" desc="(Ljava/util/function/Consumer;)V" line="648"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEach" desc="(Lneureka/Tsr;Ljava/util/function/BiConsumer;)V" line="657"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasDerivatives" desc="()Z" line="666"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="()Ljava/lang/String;" line="673"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="683"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="691"><counter type="INSTRUCTION" missed="16" covered="37"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_toString" desc="(Ljava/lang/String;Z)Ljava/lang/String;" line="715"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEach$14" desc="(Ljava/util/function/BiConsumer;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="658"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachTarget$13" desc="(Ljava/util/function/Consumer;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="649"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachForward$12" desc="(Ljava/util/function/BiConsumer;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="630"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachBackward$11" desc="(Ljava/util/function/BiConsumer;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="619"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$put$10" desc="(Lneureka/autograd/GraphNode;Lneureka/autograd/GraphNode;)I" line="566"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_backwardJIT$9" desc="(Lneureka/autograd/GraphNode;Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="508"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_backwardJIT$8" desc="(Lneureka/autograd/GraphNode;Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="507"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_carryPendingBackPropToGradients$7" desc="(Ljava/util/Set;Lneureka/autograd/GraphNode;)V" line="461"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_backward$6" desc="(Ljava/util/Set;Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="445"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_backward$5" desc="(Ljava/util/Set;Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="444"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$backward$4" desc="(Lneureka/autograd/GraphNode;)V" line="400"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$backward$3" desc="(Ljava/util/Set;Lneureka/autograd/GraphNode;)V" line="397"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_construct$2" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="336"><counter type="INSTRUCTION" missed="19" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Ljava/lang/Object;)V" line="275"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_setPayload$0" desc="()V" line="151"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="125" covered="1300"/><counter type="BRANCH" missed="49" covered="205"/><counter type="LINE" missed="15" covered="230"/><counter type="COMPLEXITY" missed="48" covered="141"/><counter type="METHOD" missed="4" covered="58"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/PendingError" sourcefilename="PendingError.java"><method name="&lt;init&gt;" desc="(Lneureka/Tsr;I)V" line="11"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulate" desc="(Lneureka/Tsr;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFullyAccumulated" desc="()Z" line="24"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccumulatedError" desc="()Lneureka/Tsr;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/GraphLock" sourcefilename="GraphLock.java"><method name="&lt;init&gt;" desc="(Lneureka/calculus/Function;[Lneureka/Tsr;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLocked" desc="()Z" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/ADAgent" sourcefilename="ADAgent.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;Lneureka/autograd/ADAgent$ADAction;Lneureka/autograd/ADAgent$ADAction;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/Tsr;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forward" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="33"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="backward" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derivative" desc="()Lneureka/Tsr;" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isForward" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="27"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="45"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/JITProp" sourcefilename="JITProp.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPending" desc="(Ljava/util/Set;)V" line="21"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="noteFinished" desc="(Lneureka/autograd/GraphNode;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finished" desc="()Ljava/util/Set;" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDone" desc="()Z" line="60"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$execute$0" desc="(Lneureka/autograd/GraphNode;)V" line="46"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="48"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="5" covered="15"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/ADAgent$ADAction" sourcefilename="ADAgent.java"/><sourcefile name="GraphNode.java"><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="2"/><line nr="40" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="7" mb="0" cb="2"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="2" ci="8" mb="1" cb="1"/><line nr="146" mi="0" ci="2" mb="1" cb="1"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="2"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="11" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="4"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="8" mb="0" cb="2"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="9" mb="0" cb="2"/><line nr="243" mi="0" ci="10" mb="1" cb="3"/><line nr="247" mi="0" ci="5" mb="0" cb="2"/><line nr="248" mi="0" ci="17" mb="0" cb="2"/><line nr="249" mi="0" ci="7" mb="0" cb="2"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="7" ci="0" mb="2" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="1" cb="1"/><line nr="268" mi="5" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="270" mi="0" ci="10" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="1" cb="1"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="2"/><line nr="275" mi="0" ci="25" mb="0" cb="2"/><line nr="276" mi="0" ci="20" mb="0" cb="2"/><line nr="277" mi="0" ci="18" mb="0" cb="2"/><line nr="279" mi="0" ci="14" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="5" ci="2" mb="1" cb="1"/><line nr="285" mi="0" ci="4" mb="0" cb="2"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="2"/><line nr="290" mi="0" ci="8" mb="0" cb="2"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="8" mb="0" cb="2"/><line nr="298" mi="0" ci="10" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="1" cb="1"/><line nr="300" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="6" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="1" cb="1"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="2"/><line nr="309" mi="0" ci="17" mb="0" cb="2"/><line nr="310" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="10" mb="0" cb="2"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="1" cb="3"/><line nr="317" mi="0" ci="21" mb="0" cb="4"/><line nr="319" mi="0" ci="6" mb="1" cb="3"/><line nr="321" mi="0" ci="3" mb="0" cb="2"/><line nr="322" mi="0" ci="9" mb="0" cb="2"/><line nr="323" mi="0" ci="7" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="2"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="326" mi="0" ci="6" mb="1" cb="3"/><line nr="328" mi="0" ci="8" mb="1" cb="3"/><line nr="330" mi="0" ci="9" mb="0" cb="0"/><line nr="333" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="19" ci="4" mb="1" cb="1"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="1" cb="1"/><line nr="344" mi="0" ci="8" mb="0" cb="2"/><line nr="345" mi="0" ci="7" mb="0" cb="0"/><line nr="346" mi="0" ci="8" mb="1" cb="3"/><line nr="347" mi="0" ci="8" mb="0" cb="0"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="362" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="365" mi="0" ci="8" mb="0" cb="2"/><line nr="366" mi="0" ci="7" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="1" cb="1"/><line nr="368" mi="5" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="12" mb="0" cb="2"/><line nr="371" mi="0" ci="10" mb="0" cb="2"/><line nr="373" mi="0" ci="8" mb="0" cb="4"/><line nr="374" mi="0" ci="9" mb="0" cb="2"/><line nr="375" mi="0" ci="20" mb="0" cb="4"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="13" mb="0" cb="2"/><line nr="381" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="0" ci="4" mb="0" cb="0"/><line nr="395" mi="0" ci="5" mb="0" cb="0"/><line nr="396" mi="0" ci="5" mb="0" cb="2"/><line nr="397" mi="0" ci="9" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="1" cb="1"/><line nr="401" mi="5" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="403" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="406" mi="0" ci="1" mb="0" cb="0"/><line nr="424" mi="0" ci="10" mb="0" cb="2"/><line nr="425" mi="0" ci="9" mb="0" cb="2"/><line nr="427" mi="0" ci="3" mb="1" cb="1"/><line nr="429" mi="0" ci="5" mb="0" cb="4"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="2"/><line nr="432" mi="0" ci="3" mb="0" cb="2"/><line nr="433" mi="0" ci="9" mb="0" cb="0"/><line nr="434" mi="0" ci="5" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="444" mi="0" ci="15" mb="0" cb="2"/><line nr="445" mi="0" ci="14" mb="1" cb="1"/><line nr="448" mi="0" ci="1" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="0" ci="8" mb="0" cb="0"/><line nr="462" mi="0" ci="7" mb="1" cb="3"/><line nr="463" mi="0" ci="6" mb="0" cb="0"/><line nr="464" mi="0" ci="8" mb="1" cb="1"/><line nr="465" mi="3" ci="0" mb="0" cb="0"/><line nr="466" mi="0" ci="5" mb="0" cb="0"/><line nr="468" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="0" ci="2" mb="0" cb="0"/><line nr="486" mi="0" ci="1" mb="0" cb="0"/><line nr="489" mi="6" ci="4" mb="1" cb="1"/><line nr="490" mi="0" ci="9" mb="0" cb="2"/><line nr="491" mi="0" ci="6" mb="0" cb="0"/><line nr="492" mi="0" ci="5" mb="0" cb="2"/><line nr="493" mi="3" ci="3" mb="3" cb="1"/><line nr="494" mi="4" ci="0" mb="0" cb="0"/><line nr="503" mi="1" ci="0" mb="0" cb="0"/><line nr="505" mi="0" ci="3" mb="1" cb="1"/><line nr="507" mi="0" ci="14" mb="0" cb="2"/><line nr="508" mi="0" ci="13" mb="1" cb="1"/><line nr="511" mi="0" ci="1" mb="0" cb="0"/><line nr="523" mi="0" ci="5" mb="0" cb="2"/><line nr="524" mi="0" ci="6" mb="0" cb="2"/><line nr="525" mi="0" ci="6" mb="0" cb="2"/><line nr="527" mi="0" ci="1" mb="0" cb="0"/><line nr="535" mi="0" ci="2" mb="0" cb="0"/><line nr="536" mi="0" ci="3" mb="1" cb="1"/><line nr="537" mi="0" ci="11" mb="0" cb="2"/><line nr="538" mi="0" ci="5" mb="2" cb="2"/><line nr="539" mi="0" ci="4" mb="0" cb="0"/><line nr="540" mi="0" ci="6" mb="1" cb="3"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="544" mi="0" ci="2" mb="0" cb="0"/><line nr="551" mi="0" ci="3" mb="0" cb="0"/><line nr="558" mi="0" ci="3" mb="0" cb="0"/><line nr="566" mi="0" ci="15" mb="0" cb="2"/><line nr="568" mi="0" ci="10" mb="0" cb="2"/><line nr="569" mi="0" ci="3" mb="0" cb="0"/><line nr="571" mi="0" ci="6" mb="0" cb="0"/><line nr="573" mi="0" ci="3" mb="0" cb="2"/><line nr="574" mi="0" ci="3" mb="0" cb="0"/><line nr="575" mi="0" ci="6" mb="2" cb="2"/><line nr="576" mi="6" ci="0" mb="0" cb="0"/><line nr="579" mi="0" ci="1" mb="0" cb="0"/><line nr="586" mi="5" ci="0" mb="2" cb="0"/><line nr="587" mi="5" ci="0" mb="0" cb="0"/><line nr="598" mi="0" ci="5" mb="0" cb="2"/><line nr="599" mi="0" ci="5" mb="0" cb="0"/><line nr="609" mi="0" ci="9" mb="0" cb="2"/><line nr="617" mi="0" ci="4" mb="0" cb="2"/><line nr="618" mi="0" ci="6" mb="0" cb="0"/><line nr="619" mi="0" ci="10" mb="1" cb="1"/><line nr="620" mi="0" ci="1" mb="0" cb="0"/><line nr="621" mi="0" ci="1" mb="0" cb="0"/><line nr="628" mi="0" ci="4" mb="0" cb="2"/><line nr="629" mi="0" ci="6" mb="0" cb="0"/><line nr="630" mi="0" ci="19" mb="1" cb="1"/><line nr="631" mi="0" ci="1" mb="0" cb="0"/><line nr="632" mi="0" ci="1" mb="0" cb="0"/><line nr="639" mi="1" ci="3" mb="1" cb="1"/><line nr="640" mi="0" ci="4" mb="0" cb="0"/><line nr="641" mi="0" ci="1" mb="0" cb="0"/><line nr="648" mi="0" ci="4" mb="0" cb="2"/><line nr="649" mi="0" ci="9" mb="0" cb="0"/><line nr="650" mi="0" ci="1" mb="0" cb="0"/><line nr="657" mi="1" ci="3" mb="1" cb="1"/><line nr="658" mi="0" ci="23" mb="0" cb="0"/><line nr="659" mi="0" ci="1" mb="0" cb="0"/><line nr="666" mi="6" ci="5" mb="3" cb="1"/><line nr="673" mi="0" ci="2" mb="0" cb="0"/><line nr="674" mi="0" ci="7" mb="0" cb="2"/><line nr="675" mi="0" ci="3" mb="0" cb="0"/><line nr="676" mi="4" ci="3" mb="1" cb="1"/><line nr="677" mi="0" ci="7" mb="0" cb="2"/><line nr="678" mi="0" ci="2" mb="0" cb="0"/><line nr="683" mi="4" ci="0" mb="0" cb="0"/><line nr="691" mi="0" ci="4" mb="0" cb="2"/><line nr="692" mi="0" ci="8" mb="0" cb="0"/><line nr="694" mi="0" ci="4" mb="1" cb="1"/><line nr="695" mi="0" ci="6" mb="0" cb="0"/><line nr="696" mi="2" ci="15" mb="1" cb="3"/><line nr="699" mi="14" ci="0" mb="2" cb="0"/><line nr="715" mi="0" ci="6" mb="0" cb="2"/><line nr="716" mi="0" ci="11" mb="0" cb="2"/><line nr="717" mi="0" ci="6" mb="0" cb="0"/><line nr="718" mi="0" ci="4" mb="0" cb="0"/><line nr="719" mi="0" ci="8" mb="0" cb="0"/><line nr="720" mi="0" ci="3" mb="0" cb="2"/><line nr="721" mi="0" ci="12" mb="0" cb="2"/><line nr="722" mi="0" ci="9" mb="0" cb="2"/><line nr="723" mi="0" ci="11" mb="0" cb="2"/><line nr="724" mi="0" ci="10" mb="0" cb="2"/><line nr="725" mi="0" ci="15" mb="0" cb="0"/><line nr="727" mi="0" ci="11" mb="0" cb="0"/><line nr="729" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="125" covered="1300"/><counter type="BRANCH" missed="49" covered="205"/><counter type="LINE" missed="15" covered="230"/><counter type="COMPLEXITY" missed="48" covered="141"/><counter type="METHOD" missed="4" covered="58"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphLock.java"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JITProp.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="8" ci="0" mb="2" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="1" cb="1"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="1" cb="3"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="5" ci="3" mb="1" cb="1"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="10" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="32" covered="48"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="5" covered="15"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADAgent.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="51" mi="3" ci="0" mb="2" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="45"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PendingError.java"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="14" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="1" ci="6" mb="1" cb="1"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="176" covered="1458"/><counter type="BRANCH" missed="63" covered="213"/><counter type="LINE" missed="25" covered="276"/><counter type="COMPLEXITY" missed="62" covered="161"/><counter type="METHOD" missed="9" covered="76"/><counter type="CLASS" missed="0" covered="5"/></package><package name="neureka/calculus/environment/implementations/operator"><class name="neureka/calculus/environment/implementations/operator/Power" sourcefilename="Power.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="115"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="([Lneureka/Tsr;DI)Lneureka/calculus/environment/Type$Operator;" line="42"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([D[Lneureka/Tsr;D[I[I[I)D" line="49"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="(D[D[Lneureka/Tsr;[I[I[I)D" line="47"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;D[I[I[I)D" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="9"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(I[D[Lneureka/Tsr;[D[I[I[I)D" line="15"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="12"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="232"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/operator/Multiplication" sourcefilename="Multiplication.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="129"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="93"><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="(I[D[Lneureka/Tsr;[D[I[I[I)D" line="99"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="96"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="57"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="59"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="([Lneureka/Tsr;DI)Lneureka/calculus/environment/Type$Operator;" line="35"><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([D[Lneureka/Tsr;[I[I[I)D" line="40"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="(D[I[I[I)D" line="39"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;D[I[I[I)D" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="14"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(I[D[Lneureka/Tsr;[D[I[I[I)D" line="20"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="17"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="275"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="5" covered="27"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/operator/Subtraction" sourcefilename="Subtraction.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="110"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="([Lneureka/Tsr;DI)Lneureka/calculus/environment/Type$Operator;" line="35"><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([I[I[I)D" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="([I[I[I)D" line="39"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;D[I[I[I)D" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="9"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(I[I[I[I)D" line="17"><counter type="INSTRUCTION" missed="1" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="13"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="176"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/operator/Addition" sourcefilename="Addition.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="110"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([Lneureka/Tsr;DI)Lneureka/calculus/environment/Type$Operator;" line="35"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([I[I[I)D" line="37"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;D[I[I[I)D" line="36"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="9"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="([I[I[I)D" line="14"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="12"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="179"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/operator/Modulo" sourcefilename="Modulo.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="18"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(I[D[Lneureka/Tsr;[D[I[I[I)D" line="24"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="21"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/operator/Division" sourcefilename="Division.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="115"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="([Lneureka/Tsr;DI)Lneureka/calculus/environment/Type$Operator;" line="37"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(D[D[Lneureka/Tsr;[I[I[I)D" line="42"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="(D[I[I[I)D" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;D[I[I[I)D" line="39"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="9"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(I[D[Lneureka/Tsr;[D[I[I[I)D" line="15"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="12"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="189"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Modulo.java"><line nr="9" mi="0" ci="19" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="2"/><line nr="21" mi="0" ci="21" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="2"/><line nr="25" mi="0" ci="10" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="16" mb="0" cb="0"/><line nr="42" mi="0" ci="16" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Multiplication.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="2"/><line nr="17" mi="0" ci="21" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="10" mb="0" cb="2"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="29" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="1" cb="1"/><line nr="37" mi="0" ci="15" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="2" cb="0"/><line nr="40" mi="12" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="21" mb="0" cb="0"/><line nr="61" mi="0" ci="21" mb="0" cb="0"/><line nr="73" mi="0" ci="21" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="1" cb="1"/><line nr="96" mi="0" ci="21" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="10" ci="0" mb="2" cb="0"/><line nr="100" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="16" mb="0" cb="0"/><line nr="114" mi="0" ci="16" mb="0" cb="0"/><line nr="122" mi="0" ci="16" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="275"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="5" covered="27"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Subtraction.java"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="2"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="16" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="1" ci="5" mb="1" cb="1"/><line nr="24" mi="0" ci="29" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="1" cb="1"/><line nr="37" mi="0" ci="15" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="2" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="16" mb="0" cb="0"/><line nr="69" mi="0" ci="16" mb="0" cb="0"/><line nr="77" mi="0" ci="16" mb="0" cb="0"/><line nr="81" mi="0" ci="16" mb="0" cb="0"/><line nr="85" mi="0" ci="16" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="176"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Power.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="2"/><line nr="12" mi="0" ci="21" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="2"/><line nr="16" mi="0" ci="13" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="12" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="29" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="1" cb="1"/><line nr="44" mi="0" ci="15" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="2" cb="0"/><line nr="47" mi="19" ci="0" mb="0" cb="0"/><line nr="49" mi="18" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="16" mb="0" cb="0"/><line nr="81" mi="0" ci="16" mb="0" cb="0"/><line nr="88" mi="0" ci="21" mb="0" cb="0"/><line nr="104" mi="0" ci="16" mb="0" cb="0"/><line nr="108" mi="0" ci="16" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="232"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Division.java"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="1" cb="1"/><line nr="12" mi="21" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="2"/><line nr="16" mi="0" ci="10" mb="0" cb="0"/><line nr="18" mi="0" ci="19" mb="0" cb="0"/><line nr="26" mi="0" ci="29" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="1" cb="1"/><line nr="39" mi="0" ci="15" mb="0" cb="0"/><line nr="41" mi="9" ci="0" mb="2" cb="0"/><line nr="42" mi="18" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="16" mb="0" cb="0"/><line nr="71" mi="0" ci="16" mb="0" cb="0"/><line nr="78" mi="0" ci="21" mb="0" cb="0"/><line nr="94" mi="0" ci="16" mb="0" cb="0"/><line nr="98" mi="0" ci="16" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="189"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Addition.java"><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="2"/><line nr="12" mi="0" ci="21" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="24" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="17" mb="1" cb="1"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="16" mb="0" cb="0"/><line nr="55" mi="0" ci="16" mb="0" cb="0"/><line nr="66" mi="0" ci="21" mb="0" cb="0"/><line nr="78" mi="0" ci="16" mb="0" cb="0"/><line nr="86" mi="0" ci="16" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="179"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="145" covered="1173"/><counter type="BRANCH" missed="18" covered="26"/><counter type="LINE" missed="14" covered="118"/><counter type="COMPLEXITY" missed="24" covered="51"/><counter type="METHOD" missed="11" covered="42"/><counter type="CLASS" missed="0" covered="6"/></package><package name="neureka/acceleration/host"><class name="neureka/acceleration/host/HostCPU$NativeExecutor" sourcefilename="HostCPU.java"><method name="&lt;init&gt;" desc="(Lneureka/acceleration/host/HostCPU;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPool" desc="()Ljava/util/concurrent/ThreadPoolExecutor;" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;ILneureka/calculus/environment/OperationType;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast" desc="([Lneureka/Tsr;ILneureka/calculus/environment/OperationType;)V" line="149"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convolve" desc="([Lneureka/Tsr;ILneureka/calculus/environment/OperationType;)V" line="159"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalar" desc="([Lneureka/Tsr;DILneureka/calculus/environment/OperationType;)V" line="169"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_threaded" desc="(ILneureka/acceleration/host/HostCPU$Range;)V" line="181"><counter type="INSTRUCTION" missed="9" covered="88"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_threaded$4" desc="(Lneureka/acceleration/host/HostCPU$Range;II)V" line="190"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$scalar$3" desc="([Lneureka/Tsr;Lneureka/calculus/environment/OperationType;DIII)V" line="170"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$convolve$2" desc="([Lneureka/Tsr;ILneureka/calculus/environment/OperationType;II)V" line="160"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$broadcast$1" desc="([Lneureka/Tsr;ILneureka/calculus/environment/OperationType;II)V" line="150"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate$0" desc="([Lneureka/Tsr;Lneureka/calculus/environment/OperationType;III)V" line="141"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="224"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="4" covered="34"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/host/HostCPU$Range" sourcefilename="HostCPU.java"/><class name="neureka/acceleration/host/Kernel" sourcefilename="Kernel.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convolve" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;IIILneureka/calculus/environment/Type$Operator;)V" line="15"><counter type="INSTRUCTION" missed="67" covered="433"/><counter type="BRANCH" missed="13" covered="61"/><counter type="LINE" missed="13" covered="89"/><counter type="COMPLEXITY" missed="10" covered="28"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;IIILneureka/calculus/environment/Type$Operator;)V" line="158"><counter type="INSTRUCTION" missed="2" covered="259"/><counter type="BRANCH" missed="3" covered="33"/><counter type="LINE" missed="0" covered="61"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(Lneureka/Tsr;IILneureka/calculus/environment/Type$Operator;)V" line="248"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="72" covered="733"/><counter type="BRANCH" missed="16" covered="96"/><counter type="LINE" missed="14" covered="161"/><counter type="COMPLEXITY" missed="14" covered="46"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/host/HostCPU" sourcefilename="HostCPU.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lneureka/acceleration/host/HostCPU;" line="26"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExecutor" desc="()Lneureka/acceleration/host/HostCPU$NativeExecutor;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_enqueue" desc="([Lneureka/Tsr;ILneureka/calculus/environment/OperationType;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="146"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_enqueue" desc="(Lneureka/Tsr;DILneureka/calculus/environment/OperationType;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="()V" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="72"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="77"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/acceleration/Device;" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="has" desc="(Lneureka/Tsr;)Z" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rmv" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="92"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overwrite64" desc="(Lneureka/Tsr;[D)Lneureka/acceleration/Device;" line="97"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overwrite32" desc="(Lneureka/Tsr;[F)Lneureka/acceleration/Device;" line="102"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swap" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/acceleration/Device;" line="107"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value64Of" desc="(Lneureka/Tsr;)[D" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value32Of" desc="(Lneureka/Tsr;)[F" line="117"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tensors" desc="()Ljava/util/Collection;" line="122"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="219"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="11" covered="28"/><counter type="COMPLEXITY" missed="11" covered="19"/><counter type="METHOD" missed="10" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HostCPU.java"><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="20" mb="0" cb="2"/><line nr="36" mi="0" ci="13" mb="0" cb="4"/><line nr="37" mi="0" ci="13" mb="0" cb="4"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="5" mb="0" cb="2"/><line nr="41" mi="0" ci="26" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="2"/><line nr="43" mi="0" ci="26" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="2"/><line nr="46" mi="0" ci="9" mb="0" cb="2"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="1" cb="1"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="20" mb="0" cb="2"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="22" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="10" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="10" mb="0" cb="0"/><line nr="150" mi="0" ci="15" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="10" mb="0" cb="0"/><line nr="160" mi="0" ci="15" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="11" mb="0" cb="0"/><line nr="170" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="2" ci="4" mb="1" cb="1"/><line nr="183" mi="0" ci="8" mb="0" cb="4"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="2"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="13" mb="0" cb="2"/><line nr="190" mi="0" ci="16" mb="0" cb="0"/><line nr="192" mi="0" ci="16" mb="0" cb="2"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="443"/><counter type="BRANCH" missed="2" covered="34"/><counter type="LINE" missed="15" covered="62"/><counter type="COMPLEXITY" missed="12" covered="36"/><counter type="METHOD" missed="10" covered="20"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Kernel.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="2"/><line nr="25" mi="0" ci="3" mb="0" cb="2"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="7" mb="0" cb="2"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="2"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="1" cb="1"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="2"/><line nr="47" mi="0" ci="7" mb="0" cb="2"/><line nr="48" mi="0" ci="2" mb="0" cb="2"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="14" mb="2" cb="2"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="14" mb="0" cb="4"/><line nr="57" mi="0" ci="9" mb="0" cb="2"/><line nr="58" mi="0" ci="7" mb="0" cb="2"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="2"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="1" cb="1"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="2" ci="5" mb="1" cb="1"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="7" ci="0" mb="2" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="9" ci="0" mb="2" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="7" mb="1" cb="1"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="2"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="2"/><line nr="117" mi="0" ci="7" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="2"/><line nr="121" mi="0" ci="17" mb="0" cb="6"/><line nr="123" mi="0" ci="12" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="1" cb="1"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="2"/><line nr="130" mi="0" ci="9" mb="0" cb="2"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="9" mb="0" cb="2"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="1" ci="6" mb="1" cb="1"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="2"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="2"/><line nr="170" mi="0" ci="7" mb="0" cb="2"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="2"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="1" cb="1"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="10" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="2"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="2"/><line nr="195" mi="0" ci="7" mb="0" cb="2"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="2"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="2"/><line nr="210" mi="0" ci="7" mb="0" cb="2"/><line nr="211" mi="0" ci="2" mb="0" cb="2"/><line nr="212" mi="0" ci="8" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="7" mb="0" cb="2"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="0" ci="7" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="2"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="1" ci="8" mb="1" cb="1"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="9" mb="0" cb="2"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="2"/><line nr="254" mi="0" ci="6" mb="0" cb="0"/><line nr="256" mi="0" ci="10" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="733"/><counter type="BRANCH" missed="16" covered="96"/><counter type="LINE" missed="14" covered="161"/><counter type="COMPLEXITY" missed="14" covered="46"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="106" covered="1176"/><counter type="BRANCH" missed="18" covered="130"/><counter type="LINE" missed="29" covered="223"/><counter type="COMPLEXITY" missed="26" covered="82"/><counter type="METHOD" missed="11" covered="23"/><counter type="CLASS" missed="0" covered="3"/></package><package name="neureka/optimization"><class name="neureka/optimization/Optimizer" sourcefilename="Optimizer.java"/><sourcefile name="Optimizer.java"/></package><package name="neureka/calculus/environment/implementations/function"><class name="neureka/calculus/environment/implementations/function/Quadratic" sourcefilename="Quadratic.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([D[Lneureka/Tsr;[I[I[I)D" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[I[I[I)D" line="24"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/function/Tanh" sourcefilename="Tanh.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="13"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([D[Lneureka/Tsr;[I[I[I)D" line="21"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[I[I[I)D" line="16"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/function/Sinus" sourcefilename="Sinus.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="15"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([D[Lneureka/Tsr;[I[I[I)D" line="17"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[I[I[I)D" line="16"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/function/Sigmoid" sourcefilename="Sigmoid.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="21"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([D[Lneureka/Tsr;[I[I[I)D" line="26"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[I[I[I)D" line="23"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/function/Cosinus" sourcefilename="Cosinus.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="14"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([D[Lneureka/Tsr;[I[I[I)D" line="16"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[I[I[I)D" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/function/Ligmoid" sourcefilename="Ligmoid.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="30"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([D[Lneureka/Tsr;[I[I[I)D" line="32"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[I[I[I)D" line="31"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/function/Gaussian" sourcefilename="Gaussian.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="20"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([D[Lneureka/Tsr;[I[I[I)D" line="25"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[I[I[I)D" line="22"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/function/Absolute" sourcefilename="Absolute.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="14"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([D[Lneureka/Tsr;[I[I[I)D" line="18"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[I[I[I)D" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/function/Identity" sourcefilename="Identity.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="13"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([D[Lneureka/Tsr;[I[I[I)D" line="15"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[I[I[I)D" line="14"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/function/ReLU" sourcefilename="ReLU.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([D[Lneureka/Tsr;[I[I[I)D" line="29"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[I[I[I)D" line="24"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Sinus.java"><line nr="9" mi="0" ci="19" mb="0" cb="0"/><line nr="15" mi="5" ci="0" mb="0" cb="0"/><line nr="16" mi="15" ci="0" mb="2" cb="0"/><line nr="17" mi="13" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Gaussian.java"><line nr="9" mi="0" ci="19" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="2" cb="0"/><line nr="22" mi="17" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="25" mi="8" ci="0" mb="0" cb="0"/><line nr="26" mi="11" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tanh.java"><line nr="8" mi="0" ci="19" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="2"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="17" mi="0" ci="10" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="14" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Cosinus.java"><line nr="9" mi="0" ci="19" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="15" mb="0" cb="2"/><line nr="16" mi="0" ci="14" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReLU.java"><line nr="8" mi="0" ci="19" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="2"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="18" mb="0" cb="2"/><line nr="25" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="12" mb="0" cb="2"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Ligmoid.java"><line nr="9" mi="0" ci="19" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="19" mb="0" cb="2"/><line nr="32" mi="0" ci="19" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Identity.java"><line nr="9" mi="0" ci="24" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="14" mi="0" ci="14" mb="1" cb="1"/><line nr="15" mi="12" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Sigmoid.java"><line nr="9" mi="0" ci="19" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="1" cb="1"/><line nr="23" mi="0" ci="19" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="8" ci="0" mb="0" cb="0"/><line nr="27" mi="14" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Absolute.java"><line nr="9" mi="0" ci="19" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="2"/><line nr="16" mi="0" ci="13" mb="0" cb="0"/><line nr="18" mi="0" ci="18" mb="0" cb="2"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Quadratic.java"><line nr="9" mi="0" ci="19" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="2"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="14" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="118" covered="514"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="13" covered="57"/><counter type="COMPLEXITY" missed="12" covered="41"/><counter type="METHOD" missed="8" covered="32"/><counter type="CLASS" missed="0" covered="10"/></package><package name="neureka/calculus/factory/components"><class name="neureka/calculus/factory/components/GradientProvider" sourcefilename="GradientProvider.java"/><class name="neureka/calculus/factory/components/FunctionConstant" sourcefilename="FunctionConstant.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()D" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlat" desc="()Z" line="17"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doesAD" desc="()Z" line="22"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="id" desc="()I" line="27"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Lneureka/calculus/environment/OperationType;" line="32"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dependsOn" desc="(I)Z" line="37"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="43"><counter type="INSTRUCTION" missed="15" covered="32"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(D)D" line="62"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([DI)D" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([D)D" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DI)D" line="77"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="82"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="89"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="94"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="99"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="104"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="109"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getADAgent" desc="([Lneureka/Tsr;IZ)Lneureka/autograd/ADAgent;" line="121"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="92"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="10" covered="19"/><counter type="COMPLEXITY" missed="11" covered="15"/><counter type="METHOD" missed="7" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/components/FunctionInput" sourcefilename="FunctionInput.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="providesGradient" desc="()Z" line="15"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlat" desc="()Z" line="20"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doesAD" desc="()Z" line="25"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="id" desc="()I" line="30"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Lneureka/calculus/environment/OperationType;" line="35"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dependsOn" desc="(I)Z" line="40"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="47"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_extract" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="72"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(D)D" line="89"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([DI)D" line="94"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([D)D" line="99"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DI)D" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="109"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="116"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="121"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="126"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="131"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="136"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="()I" line="149"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getADAgent" desc="([Lneureka/Tsr;IZ)Lneureka/autograd/ADAgent;" line="154"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="201"/><counter type="BRANCH" missed="3" covered="31"/><counter type="LINE" missed="10" covered="35"/><counter type="COMPLEXITY" missed="13" covered="26"/><counter type="METHOD" missed="10" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/components/FunctionVariable" sourcefilename="FunctionVariable.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="providesGradient" desc="()Z" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlat" desc="()Z" line="19"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doesAD" desc="()Z" line="24"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="id" desc="()I" line="29"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Lneureka/calculus/environment/OperationType;" line="34"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dependsOn" desc="(I)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(D)D" line="53"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([DI)D" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([D)D" line="63"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="derive" desc="([DI)D" line="70"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="75"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="82"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="92"><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="99"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="104"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getADAgent" desc="([Lneureka/Tsr;IZ)Lneureka/autograd/ADAgent;" line="116"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="88"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="10" covered="17"/><counter type="COMPLEXITY" missed="10" covered="16"/><counter type="METHOD" missed="8" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GradientProvider.java"/><sourcefile name="FunctionConstant.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="2"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="47" mi="2" ci="3" mb="1" cb="1"/><line nr="48" mi="5" ci="0" mb="2" cb="0"/><line nr="49" mi="5" ci="0" mb="2" cb="0"/><line nr="50" mi="3" ci="0" mb="2" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="9" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="109" mi="0" ci="9" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="92"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="10" covered="19"/><counter type="COMPLEXITY" missed="11" covered="15"/><counter type="METHOD" missed="7" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionVariable.java"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="2"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="9" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="15" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="9" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="6" ci="6" mb="1" cb="1"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="17" mb="0" cb="2"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="2"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="88"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="10" covered="17"/><counter type="COMPLEXITY" missed="10" covered="16"/><counter type="METHOD" missed="8" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionInput.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="7" mb="0" cb="2"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="2"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="5" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="1" cb="3"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="4"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="1" cb="1"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="9" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="9" mb="1" cb="1"/><line nr="104" mi="0" ci="8" mb="0" cb="2"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="2"/><line nr="137" mi="0" ci="9" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="145" mi="0" ci="10" mb="0" cb="2"/><line nr="149" mi="0" ci="12" mb="0" cb="2"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="201"/><counter type="BRANCH" missed="3" covered="31"/><counter type="LINE" missed="10" covered="35"/><counter type="COMPLEXITY" missed="13" covered="26"/><counter type="METHOD" missed="10" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="142" covered="381"/><counter type="BRANCH" missed="13" covered="45"/><counter type="LINE" missed="30" covered="71"/><counter type="COMPLEXITY" missed="34" covered="57"/><counter type="METHOD" missed="25" covered="37"/><counter type="CLASS" missed="0" covered="3"/></package><package name="neureka/calculus/factory/assembly"><class name="neureka/calculus/factory/assembly/FunctionConstructor$1" sourcefilename="FunctionConstructor.java"><method name="&lt;init&gt;" desc="(IZLjava/util/ArrayList;ZLjava/util/ArrayList;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="24"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="activate" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="28"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="32"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([DI)D" line="41"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([D)D" line="45"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="49"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DI)D" line="54"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate$1" desc="(Ljava/util/ArrayList;[Lneureka/Tsr;)Lneureka/Tsr;" line="28"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate$0" desc="(Ljava/util/ArrayList;[Lneureka/Tsr;I)Lneureka/Tsr;" line="24"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="109"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/assembly/FunctionConstructor$2" sourcefilename="FunctionConstructor.java"><method name="&lt;init&gt;" desc="(IZLjava/util/ArrayList;Z)V" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="62"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="66"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="70"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="74"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([DI)D" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="([D)D" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DI)D" line="91"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$derive$3" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$derive$2" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="70"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate$1" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$activate$0" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="99"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/assembly/FunctionConstructor" sourcefilename="FunctionConstructor.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="construct" desc="(ILjava/util/ArrayList;Z)Lneureka/calculus/Function;" line="16"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="48"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/assembly/FunctionParser" sourcefilename="FunctionParser.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfOperationsWithin" desc="(Ljava/util/List;)I" line="12"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsedOperation" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsedComponent" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsOperation" desc="(Ljava/lang/String;Ljava/util/List;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBasicOperation" desc="(Ljava/lang/String;)Z" line="73"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="groupBy" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="11" covered="16"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWeired" desc="(C)Z" line="93"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="15" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="15" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeHeadAndTail" desc="(Ljava/lang/String;)Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanedHeadAndTail" desc="(Ljava/lang/String;)Ljava/lang/String;" line="106"><counter type="INSTRUCTION" missed="28" covered="158"/><counter type="BRANCH" missed="17" covered="27"/><counter type="LINE" missed="5" covered="29"/><counter type="COMPLEXITY" missed="15" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unpackAndCorrect" desc="(Ljava/lang/String;)Ljava/lang/String;" line="157"><counter type="INSTRUCTION" missed="26" covered="198"/><counter type="BRANCH" missed="5" covered="31"/><counter type="LINE" missed="4" covered="39"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assumptionBasedOn" desc="(Ljava/lang/String;)Ljava/lang/String;" line="211"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="similarity" desc="(Ljava/lang/String;Ljava/lang/String;)D" line="226"><counter type="INSTRUCTION" missed="2" covered="80"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="70" covered="747"/><counter type="BRANCH" missed="44" covered="138"/><counter type="LINE" missed="13" covered="140"/><counter type="COMPLEXITY" missed="41" covered="63"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/factory/assembly/FunctionBuilder" sourcefilename="FunctionBuilder.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Lneureka/calculus/environment/OperationType;IZ)Lneureka/calculus/Function;" line="19"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="(Ljava/lang/String;Z)Lneureka/calculus/Function;" line="46"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_build" desc="(Ljava/lang/String;Z)Lneureka/calculus/Function;" line="67"><counter type="INSTRUCTION" missed="16" covered="618"/><counter type="BRANCH" missed="11" covered="99"/><counter type="LINE" missed="3" covered="137"/><counter type="COMPLEXITY" missed="11" covered="45"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_rebindPairwise" desc="(Ljava/util/List;I)Ljava/util/List;" line="268"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="106" covered="720"/><counter type="BRANCH" missed="24" covered="114"/><counter type="LINE" missed="17" covered="156"/><counter type="COMPLEXITY" missed="19" covered="55"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FunctionParser.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="7" mb="0" cb="2"/><line nr="14" mi="0" ci="6" mb="0" cb="2"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="2"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="10" mb="0" cb="2"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="2"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="0" cb="2"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="2"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="2"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="12" mb="0" cb="2"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="10" mb="0" cb="4"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="2"/><line nr="67" mi="0" ci="6" mb="0" cb="2"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="2"/><line nr="74" mi="0" ci="11" mb="1" cb="3"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="1" cb="1"/><line nr="80" mi="0" ci="4" mb="1" cb="1"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="1"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="2" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="52" mb="15" cb="17"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="2"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="2"/><line nr="111" mi="0" ci="25" mb="2" cb="8"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="1" cb="1"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="2"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="1" cb="1"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="2"/><line nr="130" mi="14" ci="19" mb="7" cb="3"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="1" cb="1"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="9" mb="0" cb="2"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="1" cb="1"/><line nr="145" mi="0" ci="13" mb="2" cb="2"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="13" mb="2" cb="2"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="2" ci="2" mb="1" cb="1"/><line nr="158" mi="2" ci="3" mb="1" cb="1"/><line nr="159" mi="0" ci="6" mb="0" cb="2"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="2"/><line nr="181" mi="0" ci="7" mb="0" cb="2"/><line nr="182" mi="0" ci="6" mb="0" cb="2"/><line nr="184" mi="0" ci="2" mb="0" cb="2"/><line nr="185" mi="0" ci="2" mb="1" cb="1"/><line nr="186" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="8" ci="0" mb="2" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="10" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="15" mb="0" cb="6"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="2"/><line nr="200" mi="0" ci="7" mb="0" cb="2"/><line nr="201" mi="0" ci="6" mb="0" cb="2"/><line nr="202" mi="0" ci="10" mb="0" cb="4"/><line nr="204" mi="0" ci="6" mb="0" cb="2"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="2"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="2"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="2"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="10" mb="0" cb="2"/><line nr="226" mi="0" ci="18" mb="0" cb="4"/><line nr="227" mi="0" ci="5" mb="0" cb="2"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="2" ci="2" mb="1" cb="1"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="9" mb="0" cb="2"/><line nr="235" mi="0" ci="8" mb="0" cb="2"/><line nr="236" mi="0" ci="9" mb="0" cb="2"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="70" covered="747"/><counter type="BRANCH" missed="44" covered="138"/><counter type="LINE" missed="13" covered="140"/><counter type="COMPLEXITY" missed="41" covered="63"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionConstructor.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="10" mb="0" cb="2"/><line nr="18" mi="0" ci="15" mb="0" cb="8"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="2"/><line nr="21" mi="0" ci="19" mb="0" cb="0"/><line nr="24" mi="30" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="28" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="12" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="0"/><line nr="49" mi="0" ci="15" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="14" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="15" mb="0" cb="0"/><line nr="62" mi="0" ci="17" mb="0" cb="0"/><line nr="66" mi="0" ci="16" mb="0" cb="0"/><line nr="70" mi="0" ci="18" mb="0" cb="0"/><line nr="74" mi="0" ci="17" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="256"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="4" covered="28"/><counter type="METHOD" missed="4" covered="22"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="FunctionBuilder.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="2" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="2" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="16" ci="0" mb="2" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="2" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="2" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="9" ci="0" mb="2" cb="0"/><line nr="33" mi="13" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="1" cb="1"/><line nr="47" mi="0" ci="11" mb="0" cb="4"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="2"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="2"/><line nr="56" mi="0" ci="13" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="1" cb="1"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="2"/><line nr="87" mi="0" ci="9" mb="1" cb="1"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="2"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="1" ci="3" mb="1" cb="1"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="2"/><line nr="102" mi="0" ci="8" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="2"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="0" cb="2"/><line nr="116" mi="0" ci="2" mb="0" cb="2"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="2"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="6" mb="0" cb="2"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="1" cb="1"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="2"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="2"/><line nr="163" mi="0" ci="7" mb="0" cb="2"/><line nr="164" mi="0" ci="8" mb="0" cb="2"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="2"/><line nr="171" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="4"/><line nr="174" mi="0" ci="7" mb="1" cb="1"/><line nr="175" mi="0" ci="6" mb="0" cb="2"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="16" mb="0" cb="4"/><line nr="193" mi="0" ci="4" mb="0" cb="2"/><line nr="195" mi="0" ci="10" mb="0" cb="4"/><line nr="196" mi="0" ci="8" mb="1" cb="3"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="2"/><line nr="205" mi="0" ci="5" mb="0" cb="2"/><line nr="206" mi="0" ci="5" mb="0" cb="2"/><line nr="208" mi="0" ci="8" mb="1" cb="3"/><line nr="209" mi="0" ci="2" mb="1" cb="1"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="2"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="18" mb="0" cb="6"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="13" mb="0" cb="4"/><line nr="228" mi="0" ci="10" mb="0" cb="0"/><line nr="230" mi="0" ci="10" mb="1" cb="1"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="10" mb="0" cb="2"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="11" mb="0" cb="0"/><line nr="236" mi="0" ci="10" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="1" cb="1"/><line nr="239" mi="0" ci="26" mb="0" cb="0"/><line nr="240" mi="0" ci="7" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="10" mb="0" cb="2"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="5" ci="4" mb="1" cb="1"/><line nr="251" mi="0" ci="5" mb="0" cb="2"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="10" mb="0" cb="2"/><line nr="254" mi="0" ci="6" mb="0" cb="2"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="2"/><line nr="269" mi="0" ci="13" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="720"/><counter type="BRANCH" missed="24" covered="114"/><counter type="LINE" missed="17" covered="156"/><counter type="COMPLEXITY" missed="19" covered="55"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="215" covered="1723"/><counter type="BRANCH" missed="68" covered="264"/><counter type="LINE" missed="33" covered="319"/><counter type="COMPLEXITY" missed="64" covered="146"/><counter type="METHOD" missed="6" covered="38"/><counter type="CLASS" missed="0" covered="5"/></package><package name="neureka/acceleration"><class name="neureka/acceleration/AbstractDevice" sourcefilename="AbstractDevice.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleaning" desc="(Lneureka/Tsr;Ljava/lang/Runnable;)Lneureka/acceleration/Device;" line="28"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="([Lneureka/Tsr;Lneureka/calculus/environment/OperationType;I)Lneureka/acceleration/Device;" line="34"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execute" desc="([Lneureka/Tsr;Lneureka/calculus/environment/OperationType;I)V" line="40"><counter type="INSTRUCTION" missed="2" covered="198"/><counter type="BRANCH" missed="2" covered="26"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execute_recursively" desc="([Lneureka/Tsr;Lneureka/calculus/environment/OperationType;I)Lneureka/Tsr;" line="77"><counter type="INSTRUCTION" missed="124" covered="369"/><counter type="BRANCH" missed="14" covered="28"/><counter type="LINE" missed="16" covered="49"/><counter type="COMPLEXITY" missed="12" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execute_tensor_scalar" desc="(Lneureka/Tsr;DLneureka/calculus/environment/OperationType;I)V" line="172"><counter type="INSTRUCTION" missed="98" covered="10"/><counter type="BRANCH" missed="15" covered="1"/><counter type="LINE" missed="15" covered="3"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_createNewDrainTensorIn" desc="(Lneureka/acceleration/Device;[Lneureka/Tsr;Lneureka/calculus/environment/OperationType;)V" line="197"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="224" covered="642"/><counter type="BRANCH" missed="31" covered="59"/><counter type="LINE" missed="31" covered="87"/><counter type="COMPLEXITY" missed="22" covered="34"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/Device" sourcefilename="Device.java"><method name="find" desc="(Ljava/lang/String;)Lneureka/acceleration/Device;" line="13"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$find$1" desc="(Ljava/lang/String;[Lneureka/acceleration/Device;Lneureka/acceleration/opencl/OpenCLPlatform;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$find$0" desc="(Ljava/lang/String;[Lneureka/acceleration/Device;Lneureka/acceleration/opencl/OpenCLDevice;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/AbstractDevice$_util" sourcefilename="AbstractDevice.java"><method name="&lt;init&gt;" desc="()V" line="209"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_subset" desc="([Lneureka/Tsr;III)[Lneureka/Tsr;" line="213"><counter type="INSTRUCTION" missed="8" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_without" desc="([Lneureka/Tsr;I)[Lneureka/Tsr;" line="222"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_offsetted" desc="([Lneureka/Tsr;I)[Lneureka/Tsr;" line="228"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="122"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Device.java"><line nr="13" mi="0" ci="7" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="2"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractDevice.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="2"/><line nr="42" mi="1" ci="7" mb="1" cb="1"/><line nr="43" mi="0" ci="22" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="2"/><line nr="47" mi="1" ci="7" mb="1" cb="1"/><line nr="48" mi="0" ci="22" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="4"/><line nr="57" mi="0" ci="10" mb="0" cb="4"/><line nr="59" mi="0" ci="19" mb="0" cb="8"/><line nr="62" mi="0" ci="11" mb="0" cb="4"/><line nr="63" mi="0" ci="20" mb="0" cb="0"/><line nr="64" mi="0" ci="14" mb="0" cb="0"/><line nr="66" mi="0" ci="20" mb="0" cb="0"/><line nr="67" mi="0" ci="14" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="2"/><line nr="79" mi="0" ci="9" mb="1" cb="3"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="2" mb="0" cb="2"/><line nr="88" mi="0" ci="25" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="2" cb="4"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="14" ci="0" mb="2" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="9" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="1" cb="1"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="25" mb="0" cb="0"/><line nr="107" mi="0" ci="25" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="9" ci="0" mb="0" cb="0"/><line nr="112" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><line nr="114" mi="25" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="1" cb="1"/><line nr="122" mi="5" ci="10" mb="1" cb="1"/><line nr="123" mi="0" ci="10" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="8" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="1" cb="1"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="2" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="1" cb="1"/><line nr="141" mi="0" ci="13" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="22" mb="0" cb="0"/><line nr="149" mi="0" ci="28" mb="0" cb="0"/><line nr="150" mi="3" ci="2" mb="1" cb="1"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="5" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="2"/><line nr="161" mi="0" ci="13" mb="0" cb="6"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="1" cb="1"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="5" ci="0" mb="2" cb="0"/><line nr="178" mi="5" ci="0" mb="2" cb="0"/><line nr="179" mi="4" ci="0" mb="2" cb="0"/><line nr="181" mi="7" ci="0" mb="0" cb="0"/><line nr="182" mi="8" ci="0" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="2" cb="0"/><line nr="184" mi="9" ci="0" mb="0" cb="0"/><line nr="185" mi="8" ci="0" mb="0" cb="0"/><line nr="186" mi="10" ci="0" mb="4" cb="0"/><line nr="187" mi="7" ci="0" mb="0" cb="0"/><line nr="188" mi="8" ci="0" mb="0" cb="0"/><line nr="189" mi="5" ci="0" mb="2" cb="0"/><line nr="190" mi="7" ci="0" mb="0" cb="0"/><line nr="191" mi="9" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="2"/><line nr="199" mi="0" ci="5" mb="0" cb="2"/><line nr="200" mi="0" ci="10" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="1" cb="1"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="21" mb="0" cb="4"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="7" mb="0" cb="0"/><line nr="230" mi="0" ci="13" mb="0" cb="4"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="13" mb="1" cb="3"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="13" mb="0" cb="0"/><line nr="239" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="235" covered="764"/><counter type="BRANCH" missed="33" covered="71"/><counter type="LINE" missed="34" covered="105"/><counter type="COMPLEXITY" missed="25" covered="42"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="235" covered="808"/><counter type="BRANCH" missed="33" covered="73"/><counter type="LINE" missed="34" covered="115"/><counter type="COMPLEXITY" missed="25" covered="46"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="3"/></package><package name="neureka/calculus/environment"><class name="neureka/calculus/environment/Type$Operation" sourcefilename="Type.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lneureka/calculus/environment/Type$OperationCreator;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/Cache" sourcefilename="Cache.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lneureka/calculus/environment/Cache;" line="18"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FUNCTIONS" desc="()Ljava/util/Map;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="free" desc="(Lneureka/autograd/GraphLock;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preprocess" desc="([Lneureka/Tsr;Lneureka/calculus/Function;Ljava/util/function/Supplier;II)Lneureka/Tsr;" line="40"><counter type="INSTRUCTION" missed="0" covered="140"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_get" desc="(Lneureka/autograd/GraphNode;II)Lneureka/Tsr;" line="79"><counter type="INSTRUCTION" missed="11" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_put" desc="(Lneureka/Tsr;Lneureka/autograd/GraphNode;II)V" line="90"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_keyed" desc="(I)I" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_put$2" desc="(Ljava/lang/Long;Ljava/lang/Long;)I" line="94"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$preprocess$1" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="60"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lneureka/autograd/GraphLock;Lneureka/autograd/GraphLock;)I" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="284"/><counter type="BRANCH" missed="3" covered="33"/><counter type="LINE" missed="1" covered="48"/><counter type="COMPLEXITY" missed="3" covered="27"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/Type$Activation" sourcefilename="Type.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lneureka/calculus/environment/Type$OperationCreator;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/Type$Broadcast" sourcefilename="Type.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lneureka/calculus/environment/Type$OperationCreator;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/Type$ScalarOperationCreator" sourcefilename="Type.java"/><class name="neureka/calculus/environment/Type$Convolution" sourcefilename="Type.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lneureka/calculus/environment/Type$OperationCreator;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/Type" sourcefilename="Type.java"/><class name="neureka/calculus/environment/Type$TypeComponent" sourcefilename="Type.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsString" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeriviationAsString" desc="()Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCreator" desc="()Ljava/lang/Object;" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/Type$Operator" sourcefilename="Type.java"/><class name="neureka/calculus/environment/Type$OperationCreator" sourcefilename="Type.java"/><class name="neureka/calculus/environment/Type$Scalarization" sourcefilename="Type.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lneureka/calculus/environment/Type$ScalarOperationCreator;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/OperationType" sourcefilename="OperationType.java"><method name="instance" desc="(I)Lneureka/calculus/environment/OperationType;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="(Ljava/lang/String;)Lneureka/calculus/environment/OperationType;" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;ZZZZZLneureka/calculus/environment/Type$Activation;Lneureka/calculus/environment/Type$Scalarization;Lneureka/calculus/environment/Type$Convolution;Lneureka/calculus/environment/Type$Broadcast;Lneureka/calculus/environment/Type$Operation;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ALL" desc="()[Lneureka/calculus/environment/OperationType;" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="COUNT" desc="()I" line="131"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActivation" desc="()Lneureka/calculus/environment/Type$Activation;" line="145"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supportsActivation" desc="()Z" line="150"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScalarization" desc="()Lneureka/calculus/environment/Type$Scalarization;" line="157"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supportsScalar" desc="()Z" line="162"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConvolution" desc="()Lneureka/calculus/environment/Type$Convolution;" line="169"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supportsConvolution" desc="()Z" line="174"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBroadcast" desc="()Lneureka/calculus/environment/Type$Broadcast;" line="181"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supportsBroadcast" desc="()Z" line="186"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperation" desc="()Lneureka/calculus/environment/Type$Operation;" line="193"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supportsOperation" desc="()Z" line="198"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="id" desc="()I" line="205"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identifier" desc="()Ljava/lang/String;" line="210"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOperation" desc="()Z" line="216"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIndexer" desc="()Z" line="221"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConvection" desc="()Z" line="226"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCommutative" desc="()Z" line="231"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allowsForward" desc="([Lneureka/Tsr;)Z" line="237"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getADAgentOf" desc="(Lneureka/calculus/Function;[Lneureka/Tsr;IZ)Lneureka/autograd/ADAgent;" line="252"><counter type="INSTRUCTION" missed="7" covered="72"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgentOf$10" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="288"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgentOf$9" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="287"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgentOf$8" desc="()Lneureka/Tsr;" line="286"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgentOf$7" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="281"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgentOf$6" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="280"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgentOf$5" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="279"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgentOf$4" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="268"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgentOf$3" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="267"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgentOf$2" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="266"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgentOf$1" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="258"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgentOf$0" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="257"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="453"/><counter type="BRANCH" missed="2" covered="32"/><counter type="LINE" missed="8" covered="104"/><counter type="COMPLEXITY" missed="9" covered="44"/><counter type="METHOD" missed="7" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Type.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="OperationType.java"><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="2"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="2"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="2"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="2"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="2"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="2"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="2"/><line nr="238" mi="0" ci="7" mb="0" cb="2"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="16" mb="0" cb="2"/><line nr="241" mi="0" ci="2" mb="0" cb="2"/><line nr="242" mi="0" ci="8" mb="0" cb="2"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="2"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="10" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="13" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="6" mb="1" cb="3"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="12" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="13" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="13" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="1" cb="1"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="12" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="13" ci="0" mb="0" cb="0"/><line nr="281" mi="0" ci="23" mb="0" cb="0"/><line nr="285" mi="7" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="453"/><counter type="BRANCH" missed="2" covered="32"/><counter type="LINE" missed="8" covered="104"/><counter type="COMPLEXITY" missed="9" covered="44"/><counter type="METHOD" missed="7" covered="29"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Cache.java"><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="13" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="16" mb="0" cb="2"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="2"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="4"/><line nr="52" mi="0" ci="4" mb="0" cb="4"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="16" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="14" mb="1" cb="5"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="15" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="2"/><line nr="81" mi="0" ci="10" mb="1" cb="1"/><line nr="82" mi="11" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="15" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="6" mb="0" cb="2"/><line nr="94" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="11" covered="284"/><counter type="BRANCH" missed="3" covered="33"/><counter type="LINE" missed="1" covered="48"/><counter type="COMPLEXITY" missed="3" covered="27"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="66" covered="788"/><counter type="BRANCH" missed="5" covered="65"/><counter type="LINE" missed="9" covered="170"/><counter type="COMPLEXITY" missed="12" covered="80"/><counter type="METHOD" missed="7" covered="50"/><counter type="CLASS" missed="0" covered="8"/></package><package name="neureka/calculus"><class name="neureka/calculus/Function$Setup" sourcefilename="Function.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="commit" desc="([Lneureka/Tsr;Ljava/lang/String;Z)Lneureka/Tsr;" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commit" desc="(Lneureka/Tsr;[Lneureka/Tsr;Ljava/lang/String;Z)Lneureka/Tsr;" line="34"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commit" desc="([Lneureka/Tsr;Lneureka/calculus/Function;)Lneureka/Tsr;" line="38"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="commit" desc="(Lneureka/Tsr;[Lneureka/Tsr;Lneureka/calculus/Function;)Lneureka/Tsr;" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commit" desc="(Lneureka/Tsr;[Lneureka/Tsr;Lneureka/calculus/Function;Ljava/util/function/Supplier;)Lneureka/Tsr;" line="47"><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$commit$0" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="54"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="123"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/Function" sourcefilename="Function.java"><method name="create" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;Z)Lneureka/calculus/Function;" line="24"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Function.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="16" mb="0" cb="2"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="2"/><line nr="66" mi="0" ci="16" mb="0" cb="2"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="6"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="134"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="8" covered="134"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/utility"><class name="neureka/utility/DataHelper" sourcefilename="DataHelper.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newSeededDoubleArray" desc="(Ljava/lang/String;I)[D" line="9"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newSeededDoubleArray" desc="(JI)[D" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="seededDoubleArray" desc="([DLjava/lang/String;)[D" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="seededDoubleArray" desc="([DJ)[D" line="21"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newSeededFloatArray" desc="(Ljava/lang/String;I)[F" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newSeededFloatArray" desc="(JI)[F" line="32"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="seededFloatArray" desc="([FLjava/lang/String;)[F" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="seededFloatArray" desc="([FJ)[F" line="40"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_longStringHash" desc="(Ljava/lang/String;)J" line="48"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleToFloat" desc="([D)[F" line="55"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatToDouble" desc="([F)[D" line="62"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="103"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="9" covered="18"/><counter type="COMPLEXITY" missed="8" covered="11"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DataHelper.java"><line nr="5" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="13" mb="0" cb="2"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="14" ci="0" mb="2" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="16" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="2" ci="2" mb="1" cb="1"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="15" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="15" mb="0" cb="2"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="103"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="9" covered="18"/><counter type="COMPLEXITY" missed="8" covered="11"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="48" covered="103"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="9" covered="18"/><counter type="COMPLEXITY" missed="8" covered="11"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></package><package name="neureka/acceleration/opencl"><class name="neureka/acceleration/opencl/OpenCLDevice" sourcefilename="OpenCLDevice.java"><method name="CLDeviceID" desc="()Lorg/jocl/cl_device_id;" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/acceleration/opencl/OpenCLPlatform;Lorg/jocl/cl_device_id;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="(Lneureka/acceleration/opencl/OpenCLPlatform;Lorg/jocl/cl_device_id;)Lneureka/acceleration/opencl/OpenCLDevice;" line="80"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tensors" desc="()Ljava/util/Collection;" line="89"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="()V" line="100"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="106"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="115"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/acceleration/Device;" line="121"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_add" desc="(Lneureka/Tsr;Lneureka/acceleration/opencl/OpenCLDevice$cl_tsr;)Lneureka/acceleration/Device;" line="131"><counter type="INSTRUCTION" missed="8" covered="232"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Lneureka/Tsr;)Z" line="207"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_store" desc="(Lneureka/Tsr;Lneureka/acceleration/opencl/OpenCLDevice$cl_tsr;IZ)V" line="211"><counter type="INSTRUCTION" missed="21" covered="72"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rmv" desc="(Lneureka/Tsr;)Lneureka/acceleration/Device;" line="255"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_rmv" desc="(Ljava/lang/ref/WeakReference;)V" line="265"><counter type="INSTRUCTION" missed="7" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overwrite64" desc="(Lneureka/Tsr;[D)Lneureka/acceleration/Device;" line="274"><counter type="INSTRUCTION" missed="42" covered="19"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_releaseEvents" desc="([Lneureka/Tsr;)V" line="296"><counter type="INSTRUCTION" missed="17" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_getWaitList" desc="([Lneureka/Tsr;)[Lorg/jocl/cl_event;" line="305"><counter type="INSTRUCTION" missed="8" covered="36"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overwrite32" desc="(Lneureka/Tsr;[F)Lneureka/acceleration/Device;" line="317"><counter type="INSTRUCTION" missed="6" covered="55"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/acceleration/Device;" line="342"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value64Of" desc="(Lneureka/Tsr;)[D" line="350"><counter type="INSTRUCTION" missed="26" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value32Of" desc="(Lneureka/Tsr;)[F" line="372"><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_enqueue" desc="([Lneureka/Tsr;ILneureka/calculus/environment/OperationType;)V" line="395"><counter type="INSTRUCTION" missed="166" covered="314"/><counter type="BRANCH" missed="12" covered="11"/><counter type="LINE" missed="16" covered="32"/><counter type="COMPLEXITY" missed="12" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_enqueue" desc="(Lneureka/Tsr;DILneureka/calculus/environment/OperationType;)V" line="480"><counter type="INSTRUCTION" missed="1" covered="156"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="509"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vendor" desc="()Ljava/lang/String;" line="513"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="version" desc="()Ljava/lang/String;" line="517"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="type" desc="()Ljava/lang/String;" line="521"><counter type="INSTRUCTION" missed="18" covered="21"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxComputeUnits" desc="()I" line="534"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWorkItemSimensions" desc="()J" line="538"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWorkItemSizes" desc="()[J" line="542"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWorkGroupSize" desc="()J" line="546"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxClockFrequenzy" desc="()J" line="550"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxAddressBits" desc="()I" line="554"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxMemAllocSize" desc="()J" line="558"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalMemSize" desc="()J" line="562"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorCorrectionSupport" desc="()I" line="566"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="localMemType" desc="()I" line="570"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="localMemSize" desc="()J" line="574"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxConstantBufferSize" desc="()J" line="578"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxConstantBufferSizeKB" desc="()J" line="582"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="queueExecIsOrdered" desc="()Z" line="586"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="queueProfilingIsEnabled" desc="()Z" line="591"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="imageSupport" desc="()I" line="596"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxReadImageArgs" desc="()I" line="600"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWriteImageArgs" desc="()I" line="604"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleFPConfig" desc="()J" line="608"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="image2DMaxWidth" desc="()J" line="612"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="image2DMaxHeight" desc="()J" line="616"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="image3DMaxWidth" desc="()J" line="620"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="image3DMaxHeight" desc="()J" line="624"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="image3DMaxDepth" desc="()J" line="628"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthChar" desc="()I" line="632"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthShort" desc="()I" line="636"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthInt" desc="()I" line="640"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthLong" desc="()I" line="644"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthFloat" desc="()I" line="648"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefVecWidthDouble" desc="()I" line="652"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_add$3" desc="(Ljava/lang/ref/WeakReference;)V" line="195"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$get$2" desc="(Ljava/lang/Object;)V" line="108"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$dispose$1" desc="(Ljava/lang/Object;Lneureka/acceleration/opencl/OpenCLDevice$cl_tsr;)V" line="100"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$tensors$0" desc="(Ljava/util/Collection;Ljava/lang/Object;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="506" covered="1224"/><counter type="BRANCH" missed="41" covered="56"/><counter type="LINE" missed="71" covered="186"/><counter type="COMPLEXITY" missed="62" covered="50"/><counter type="METHOD" missed="28" covered="32"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/OpenCLPlatform$Parser" sourcefilename="OpenCLPlatform.java"/><class name="neureka/acceleration/opencl/OpenCLPlatform" sourcefilename="OpenCLPlatform.java"><method name="kernelNameOf" desc="(Lneureka/calculus/environment/OperationType;)Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jocl/cl_platform_id;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recompile" desc="()V" line="97"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_compile" desc="([Lorg/jocl/cl_device_id;)V" line="106"><counter type="INSTRUCTION" missed="10" covered="181"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="26"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_getParsedKernelsFromTemplate" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;" line="178"><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getID" desc="()Lorg/jocl/cl_platform_id;" line="258"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDevices" desc="()Ljava/util/List;" line="262"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Lorg/jocl/cl_device_id;)Z" line="269"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/jocl/cl_device_id;)Lneureka/acceleration/opencl/OpenCLDevice;" line="272"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lorg/jocl/cl_device_id;Lneureka/acceleration/opencl/OpenCLDevice;)V" line="275"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKernels" desc="()Ljava/util/Map;" line="280"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContext" desc="()Lorg/jocl/cl_context;" line="284"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PLATFORMS" desc="()Ljava/util/List;" line="288"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getDevices$4" desc="(Ljava/util/List;Lorg/jocl/cl_device_id;Lneureka/acceleration/opencl/OpenCLDevice;)V" line="263"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_getParsedKernelsFromTemplate$3" desc="([Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="204"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_getParsedKernelsFromTemplate$2" desc="(Ljava/lang/String;)Ljava/lang/String;" line="198"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_getParsedKernelsFromTemplate$1" desc="(Ljava/lang/String;)Ljava/lang/String;" line="184"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_compile$0" desc="(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/String;Ljava/lang/String;)V" line="137"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="130"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="738"/><counter type="BRANCH" missed="5" covered="51"/><counter type="LINE" missed="2" covered="147"/><counter type="COMPLEXITY" missed="6" covered="41"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/OpenCLPlatform$_setup" sourcefilename="OpenCLPlatform.java"><method name="findAllPlatforms" desc="()Ljava/util/List;" line="297"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="293"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/OpenCLDevice$DeviceQuery" sourcefilename="OpenCLDevice.java"><method name="&lt;init&gt;" desc="()V" line="655"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInt" desc="(Lorg/jocl/cl_device_id;I)I" line="664"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInts" desc="(Lorg/jocl/cl_device_id;II)[I" line="676"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLong" desc="(Lorg/jocl/cl_device_id;I)J" line="689"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLongs" desc="(Lorg/jocl/cl_device_id;II)[J" line="701"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_device_id;I)Ljava/lang/String;" line="715"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_platform_id;I)Ljava/lang/String;" line="735"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="(Lorg/jocl/cl_device_id;I)J" line="754"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSizes" desc="(Lorg/jocl/cl_device_id;II)[J" line="768"><counter type="INSTRUCTION" missed="17" covered="41"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="130"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="8" covered="23"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/OpenCLDevice$cl_data" sourcefilename="OpenCLDevice.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/acceleration/opencl/OpenCLDevice$cl_tsr" sourcefilename="OpenCLDevice.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OpenCLDevice.java"><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="12" mb="1" cb="1"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="2"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="13" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="6" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="1" cb="1"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="2"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="1" cb="3"/><line nr="137" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="9" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="2"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="11" mb="0" cb="2"/><line nr="158" mi="0" ci="19" mb="0" cb="4"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="0" cb="0"/><line nr="169" mi="0" ci="14" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="18" mb="0" cb="2"/><line nr="182" mi="0" ci="14" mb="0" cb="0"/><line nr="184" mi="0" ci="11" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="11" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="2"/><line nr="198" mi="0" ci="9" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="2"/><line nr="214" mi="0" ci="3" mb="1" cb="1"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="4" ci="4" mb="1" cb="1"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="8" ci="0" mb="2" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="10" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="2"/><line nr="238" mi="0" ci="17" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="6" mb="0" cb="0"/><line nr="256" mi="2" ci="2" mb="1" cb="1"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="6" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="11" mb="1" cb="1"/><line nr="268" mi="7" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="1" cb="1"/><line nr="276" mi="0" ci="7" mb="0" cb="0"/><line nr="278" mi="15" ci="0" mb="2" cb="0"/><line nr="279" mi="6" ci="0" mb="0" cb="0"/><line nr="280" mi="15" ci="0" mb="0" cb="0"/><line nr="286" mi="6" ci="0" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="16" mb="0" cb="2"/><line nr="297" mi="0" ci="8" mb="1" cb="1"/><line nr="298" mi="9" ci="0" mb="0" cb="0"/><line nr="299" mi="8" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="16" mb="0" cb="2"/><line nr="307" mi="0" ci="8" mb="0" cb="0"/><line nr="308" mi="4" ci="2" mb="3" cb="1"/><line nr="309" mi="4" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="6" mb="0" cb="0"/><line nr="317" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="1" cb="1"/><line nr="319" mi="0" ci="4" mb="0" cb="2"/><line nr="320" mi="0" ci="11" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="0"/><line nr="323" mi="0" ci="16" mb="0" cb="0"/><line nr="329" mi="0" ci="6" mb="0" cb="0"/><line nr="335" mi="6" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="6" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="11" mb="0" cb="0"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="6" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="1" cb="1"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="5" ci="0" mb="0" cb="0"/><line nr="355" mi="15" ci="0" mb="0" cb="0"/><line nr="361" mi="4" ci="0" mb="0" cb="0"/><line nr="366" mi="2" ci="0" mb="0" cb="0"/><line nr="372" mi="0" ci="6" mb="0" cb="0"/><line nr="373" mi="0" ci="4" mb="1" cb="1"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="375" mi="0" ci="15" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="386" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="5" ci="0" mb="0" cb="0"/><line nr="395" mi="0" ci="9" mb="7" cb="2"/><line nr="397" mi="0" ci="2" mb="0" cb="2"/><line nr="398" mi="0" ci="9" mb="1" cb="1"/><line nr="399" mi="6" ci="0" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="21" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="406" mi="21" ci="0" mb="0" cb="0"/><line nr="407" mi="1" ci="0" mb="0" cb="0"/><line nr="409" mi="21" ci="0" mb="0" cb="0"/><line nr="410" mi="1" ci="0" mb="0" cb="0"/><line nr="412" mi="21" ci="0" mb="0" cb="0"/><line nr="413" mi="1" ci="0" mb="0" cb="0"/><line nr="415" mi="21" ci="0" mb="0" cb="0"/><line nr="416" mi="1" ci="0" mb="0" cb="0"/><line nr="418" mi="21" ci="0" mb="0" cb="0"/><line nr="419" mi="1" ci="0" mb="0" cb="0"/><line nr="421" mi="21" ci="0" mb="0" cb="0"/><line nr="422" mi="1" ci="0" mb="0" cb="0"/><line nr="424" mi="15" ci="0" mb="0" cb="0"/><line nr="428" mi="4" ci="10" mb="1" cb="1"/><line nr="429" mi="1" ci="7" mb="1" cb="1"/><line nr="430" mi="0" ci="5" mb="0" cb="0"/><line nr="431" mi="0" ci="7" mb="0" cb="0"/><line nr="433" mi="0" ci="10" mb="0" cb="0"/><line nr="434" mi="0" ci="12" mb="0" cb="0"/><line nr="435" mi="0" ci="6" mb="1" cb="3"/><line nr="436" mi="0" ci="8" mb="0" cb="0"/><line nr="437" mi="0" ci="15" mb="0" cb="0"/><line nr="438" mi="0" ci="8" mb="0" cb="0"/><line nr="439" mi="0" ci="17" mb="0" cb="0"/><line nr="440" mi="0" ci="15" mb="0" cb="0"/><line nr="441" mi="0" ci="13" mb="0" cb="0"/><line nr="444" mi="0" ci="12" mb="0" cb="0"/><line nr="445" mi="0" ci="8" mb="0" cb="0"/><line nr="446" mi="0" ci="15" mb="0" cb="0"/><line nr="447" mi="0" ci="8" mb="0" cb="0"/><line nr="448" mi="0" ci="17" mb="0" cb="0"/><line nr="449" mi="0" ci="8" mb="0" cb="0"/><line nr="450" mi="0" ci="17" mb="0" cb="0"/><line nr="451" mi="0" ci="15" mb="0" cb="0"/><line nr="452" mi="0" ci="12" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="1" cb="1"/><line nr="457" mi="5" ci="0" mb="0" cb="0"/><line nr="458" mi="3" ci="0" mb="0" cb="0"/><line nr="463" mi="0" ci="18" mb="0" cb="0"/><line nr="476" mi="0" ci="1" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="9" mb="0" cb="0"/><line nr="482" mi="0" ci="7" mb="0" cb="0"/><line nr="483" mi="0" ci="8" mb="0" cb="0"/><line nr="484" mi="0" ci="8" mb="0" cb="0"/><line nr="485" mi="0" ci="8" mb="0" cb="0"/><line nr="486" mi="0" ci="13" mb="0" cb="0"/><line nr="487" mi="0" ci="8" mb="0" cb="0"/><line nr="488" mi="0" ci="13" mb="0" cb="0"/><line nr="489" mi="0" ci="13" mb="0" cb="0"/><line nr="490" mi="0" ci="13" mb="0" cb="0"/><line nr="491" mi="0" ci="12" mb="0" cb="0"/><line nr="493" mi="0" ci="9" mb="0" cb="0"/><line nr="494" mi="0" ci="17" mb="0" cb="0"/><line nr="501" mi="1" ci="6" mb="1" cb="1"/><line nr="504" mi="0" ci="8" mb="0" cb="0"/><line nr="505" mi="0" ci="1" mb="0" cb="0"/><line nr="509" mi="0" ci="5" mb="0" cb="0"/><line nr="513" mi="0" ci="5" mb="0" cb="0"/><line nr="517" mi="5" ci="0" mb="0" cb="0"/><line nr="521" mi="0" ci="5" mb="0" cb="0"/><line nr="522" mi="0" ci="6" mb="0" cb="2"/><line nr="523" mi="0" ci="2" mb="0" cb="0"/><line nr="524" mi="0" ci="6" mb="1" cb="1"/><line nr="525" mi="0" ci="2" mb="0" cb="0"/><line nr="526" mi="6" ci="0" mb="2" cb="0"/><line nr="527" mi="2" ci="0" mb="0" cb="0"/><line nr="528" mi="6" ci="0" mb="2" cb="0"/><line nr="529" mi="2" ci="0" mb="0" cb="0"/><line nr="530" mi="2" ci="0" mb="0" cb="0"/><line nr="534" mi="5" ci="0" mb="0" cb="0"/><line nr="538" mi="5" ci="0" mb="0" cb="0"/><line nr="542" mi="6" ci="0" mb="0" cb="0"/><line nr="546" mi="5" ci="0" mb="0" cb="0"/><line nr="550" mi="0" ci="5" mb="0" cb="0"/><line nr="554" mi="5" ci="0" mb="0" cb="0"/><line nr="558" mi="5" ci="0" mb="0" cb="0"/><line nr="562" mi="0" ci="5" mb="0" cb="0"/><line nr="566" mi="5" ci="0" mb="0" cb="0"/><line nr="570" mi="5" ci="0" mb="0" cb="0"/><line nr="574" mi="5" ci="0" mb="0" cb="0"/><line nr="578" mi="0" ci="5" mb="0" cb="0"/><line nr="582" mi="9" ci="0" mb="0" cb="0"/><line nr="586" mi="5" ci="0" mb="0" cb="0"/><line nr="587" mi="10" ci="0" mb="2" cb="0"/><line nr="591" mi="5" ci="0" mb="0" cb="0"/><line nr="592" mi="10" ci="0" mb="2" cb="0"/><line nr="596" mi="5" ci="0" mb="0" cb="0"/><line nr="600" mi="5" ci="0" mb="0" cb="0"/><line nr="604" mi="0" ci="5" mb="0" cb="0"/><line nr="608" mi="5" ci="0" mb="0" cb="0"/><line nr="612" mi="5" ci="0" mb="0" cb="0"/><line nr="616" mi="0" ci="5" mb="0" cb="0"/><line nr="620" mi="5" ci="0" mb="0" cb="0"/><line nr="624" mi="0" ci="5" mb="0" cb="0"/><line nr="628" mi="5" ci="0" mb="0" cb="0"/><line nr="632" mi="5" ci="0" mb="0" cb="0"/><line nr="636" mi="5" ci="0" mb="0" cb="0"/><line nr="640" mi="5" ci="0" mb="0" cb="0"/><line nr="644" mi="5" ci="0" mb="0" cb="0"/><line nr="648" mi="5" ci="0" mb="0" cb="0"/><line nr="652" mi="5" ci="0" mb="0" cb="0"/><line nr="655" mi="3" ci="0" mb="0" cb="0"/><line nr="664" mi="0" ci="7" mb="0" cb="0"/><line nr="676" mi="0" ci="3" mb="0" cb="0"/><line nr="677" mi="0" ci="11" mb="0" cb="0"/><line nr="678" mi="0" ci="2" mb="0" cb="0"/><line nr="689" mi="0" ci="7" mb="0" cb="0"/><line nr="701" mi="0" ci="3" mb="0" cb="0"/><line nr="702" mi="0" ci="11" mb="0" cb="0"/><line nr="703" mi="0" ci="2" mb="0" cb="0"/><line nr="715" mi="0" ci="3" mb="0" cb="0"/><line nr="716" mi="0" ci="7" mb="0" cb="0"/><line nr="719" mi="0" ci="6" mb="0" cb="0"/><line nr="720" mi="0" ci="10" mb="0" cb="0"/><line nr="723" mi="0" ci="10" mb="0" cb="0"/><line nr="735" mi="3" ci="0" mb="0" cb="0"/><line nr="736" mi="7" ci="0" mb="0" cb="0"/><line nr="739" mi="6" ci="0" mb="0" cb="0"/><line nr="740" mi="10" ci="0" mb="0" cb="0"/><line nr="743" mi="10" ci="0" mb="0" cb="0"/><line nr="754" mi="0" ci="7" mb="0" cb="0"/><line nr="768" mi="0" ci="4" mb="0" cb="0"/><line nr="769" mi="0" ci="3" mb="0" cb="0"/><line nr="770" mi="0" ci="9" mb="0" cb="0"/><line nr="771" mi="0" ci="2" mb="0" cb="0"/><line nr="772" mi="0" ci="3" mb="0" cb="0"/><line nr="773" mi="0" ci="3" mb="1" cb="1"/><line nr="774" mi="8" ci="0" mb="2" cb="0"/><line nr="775" mi="9" ci="0" mb="0" cb="0"/><line nr="778" mi="0" ci="7" mb="0" cb="2"/><line nr="779" mi="0" ci="8" mb="0" cb="0"/><line nr="782" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="562" covered="1374"/><counter type="BRANCH" missed="44" covered="59"/><counter type="LINE" missed="79" covered="215"/><counter type="COMPLEXITY" missed="66" covered="60"/><counter type="METHOD" missed="30" covered="41"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="OpenCLPlatform.java"><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="16" mb="0" cb="2"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="16" mb="0" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="27" mb="0" cb="0"/><line nr="116" mi="0" ci="16" mb="0" cb="2"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="2"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="2"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="2"/><line nr="129" mi="0" ci="12" mb="0" cb="0"/><line nr="131" mi="0" ci="9" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="1" cb="1"/><line nr="133" mi="10" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="12" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="2"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="167" mi="0" ci="10" mb="0" cb="2"/><line nr="168" mi="0" ci="11" mb="1" cb="1"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="208" mi="0" ci="7" mb="0" cb="0"/><line nr="210" mi="0" ci="14" mb="2" cb="4"/><line nr="211" mi="0" ci="14" mb="1" cb="5"/><line nr="212" mi="0" ci="9" mb="0" cb="2"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="16" mb="0" cb="2"/><line nr="222" mi="0" ci="7" mb="0" cb="4"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="7" mb="0" cb="4"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="7" mb="0" cb="4"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="7" mb="0" cb="4"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="4"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="10" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="6" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="16" mb="0" cb="2"/><line nr="306" mi="0" ci="7" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="789"/><counter type="BRANCH" missed="5" covered="53"/><counter type="LINE" missed="2" covered="156"/><counter type="COMPLEXITY" missed="6" covered="44"/><counter type="METHOD" missed="1" covered="20"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="575" covered="2163"/><counter type="BRANCH" missed="49" covered="112"/><counter type="LINE" missed="81" covered="371"/><counter type="COMPLEXITY" missed="72" covered="104"/><counter type="METHOD" missed="31" covered="61"/><counter type="CLASS" missed="0" covered="6"/></package><package name="neureka/calculus/environment/implementations/other"><class name="neureka/calculus/environment/implementations/other/Randomization" sourcefilename="Randomization.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([Lneureka/Tsr;DI)Lneureka/calculus/environment/Type$Operator;" line="22"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/util/Random;[I[I[I)D" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/calculus/environment/implementations/other/CopyLeft" sourcefilename="CopyLeft.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/other/CopyRight" sourcefilename="CopyRight.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/other/Reshape" sourcefilename="Reshape.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getADAgentOf" desc="(Lneureka/calculus/Function;[Lneureka/Tsr;IZ)Lneureka/autograd/ADAgent;" line="22"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgentOf$2" desc="(Lneureka/calculus/Function;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="28"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getADAgentOf$1" desc="(Lneureka/calculus/Function;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="27"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getADAgentOf$0" desc="()Lneureka/Tsr;" line="26"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CopyRight.java"><line nr="8" mi="0" ci="14" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Reshape.java"><line nr="13" mi="0" ci="14" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="1" cb="1"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="13" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CopyLeft.java"><line nr="9" mi="0" ci="14" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Randomization.java"><line nr="12" mi="19" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="57" covered="71"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="8" covered="10"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="1" covered="3"/></package><package name="neureka/abstraction"><class name="neureka/abstraction/AbstractComponentOwner" sourcefilename="AbstractComponentOwner.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Class;)Lneureka/abstraction/AbstractComponentOwner;" line="43"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/lang/Class;)Z" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Lneureka/abstraction/AbstractComponentOwner;" line="69"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forComponent" desc="(Ljava/lang/Class;Ljava/util/function/Consumer;)Z" line="97"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/abstraction/AbstractNDArray$Utility$Indexing" sourcefilename="AbstractNDArray.java"><method name="&lt;init&gt;" desc="()V" line="196"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="([I[I)V" line="201"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_incrementAt" desc="(I[I[I)I" line="208"><counter type="INSTRUCTION" missed="2" covered="69"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTlnOf" desc="([I)[I" line="239"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rearrange" desc="([I[I)[I" line="257"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shpCheck" desc="([ILneureka/Tsr;)[I" line="267"><counter type="INSTRUCTION" missed="18" covered="7"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rearrange" desc="([I[I[I)[I" line="277"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shpOfCon" desc="([I[I)[I" line="288"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shpOfBrc" desc="([I[I)[I" line="295"><counter type="INSTRUCTION" missed="16" covered="42"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="szeOfShp" desc="([I)I" line="307"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="333"/><counter type="BRANCH" missed="12" covered="40"/><counter type="LINE" missed="6" covered="53"/><counter type="COMPLEXITY" missed="11" covered="25"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/abstraction/AbstractNDArray$Utility" sourcefilename="AbstractNDArray.java"><method name="&lt;init&gt;" desc="()V" line="162"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/abstraction/AbstractNDArray" sourcefilename="AbstractNDArray.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is64" desc="()Z" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is32" desc="()Z" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_cached" desc="([I)[I" line="68"><counter type="INSTRUCTION" missed="28" covered="99"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="([I)I" line="98"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_i_of_i" desc="(I)I" line="109"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="113"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="135"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rank" desc="()I" line="139"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="()[I" line="143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="()[I" line="147"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="268"/><counter type="BRANCH" missed="8" covered="30"/><counter type="LINE" missed="4" covered="45"/><counter type="COMPLEXITY" missed="6" covered="27"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/abstraction/AbstractNDArray$Utility$Stringify" sourcefilename="AbstractNDArray.java"><method name="&lt;init&gt;" desc="()V" line="164"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatFP" desc="(D)Ljava/lang/String;" line="168"><counter type="INSTRUCTION" missed="4" covered="64"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strConf" desc="([I)Ljava/lang/String;" line="187"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="95"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractComponentOwner.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="2"/><line nr="28" mi="0" ci="10" mb="0" cb="2"/><line nr="29" mi="0" ci="4" mb="0" cb="2"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="2"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="1" cb="3"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="2"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="2"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractNDArray.java"><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="16" mb="0" cb="2"/><line nr="70" mi="0" ci="8" mb="0" cb="2"/><line nr="71" mi="0" ci="8" mb="0" cb="2"/><line nr="72" mi="0" ci="8" mb="0" cb="2"/><line nr="73" mi="5" ci="3" mb="1" cb="1"/><line nr="74" mi="0" ci="8" mb="1" cb="1"/><line nr="75" mi="8" ci="0" mb="2" cb="0"/><line nr="76" mi="8" ci="0" mb="2" cb="0"/><line nr="77" mi="7" ci="0" mb="2" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="9" mb="0" cb="2"/><line nr="101" mi="0" ci="9" mb="0" cb="2"/><line nr="102" mi="0" ci="16" mb="0" cb="4"/><line nr="103" mi="0" ci="21" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="115" mi="0" ci="10" mb="0" cb="2"/><line nr="116" mi="0" ci="12" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="2"/><line nr="121" mi="0" ci="12" mb="0" cb="0"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="2"/><line nr="172" mi="0" ci="4" mb="0" cb="2"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="2"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="4" ci="7" mb="1" cb="1"/><line nr="179" mi="0" ci="11" mb="0" cb="2"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="24" mb="0" cb="4"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="8" mb="0" cb="2"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="12" mb="0" cb="4"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="2"/><line nr="209" mi="0" ci="7" mb="1" cb="1"/><line nr="210" mi="0" ci="7" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="2"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="7" mb="1" cb="1"/><line nr="223" mi="0" ci="7" mb="0" cb="0"/><line nr="224" mi="0" ci="7" mb="0" cb="2"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="2"/><line nr="242" mi="0" ci="9" mb="0" cb="2"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="9" mb="0" cb="2"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="8" mb="0" cb="2"/><line nr="259" mi="0" ci="12" mb="0" cb="2"/><line nr="260" mi="0" ci="12" mb="1" cb="1"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="1" cb="1"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="15" ci="0" mb="2" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="8" mb="0" cb="2"/><line nr="280" mi="0" ci="11" mb="0" cb="2"/><line nr="281" mi="0" ci="12" mb="1" cb="1"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="9" mb="0" cb="0"/><line nr="289" mi="0" ci="25" mb="1" cb="3"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="9" mb="0" cb="0"/><line nr="296" mi="0" ci="12" mb="1" cb="3"/><line nr="297" mi="0" ci="10" mb="0" cb="0"/><line nr="298" mi="11" ci="9" mb="3" cb="1"/><line nr="299" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="20" mb="0" cb="2"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="82" covered="696"/><counter type="BRANCH" missed="21" covered="83"/><counter type="LINE" missed="12" covered="113"/><counter type="COMPLEXITY" missed="20" covered="60"/><counter type="METHOD" missed="4" covered="24"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="82" covered="812"/><counter type="BRANCH" missed="22" covered="104"/><counter type="LINE" missed="12" covered="144"/><counter type="COMPLEXITY" missed="21" covered="76"/><counter type="METHOD" missed="4" covered="30"/><counter type="CLASS" missed="1" covered="4"/></package><package name="neureka/calculus/environment/implementations/indexer"><class name="neureka/calculus/environment/implementations/indexer/Summation" sourcefilename="Summation.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="19"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([I[I[I)D" line="24"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="22"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="58"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/environment/implementations/indexer/Product" sourcefilename="Product.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/calculus/environment/Type$Operator;" line="19"><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(I[D[Lneureka/Tsr;[D[I[I[I)D" line="25"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="22"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="58"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Summation.java"><line nr="8" mi="0" ci="24" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="1" cb="1"/><line nr="22" mi="0" ci="21" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="58"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Product.java"><line nr="8" mi="0" ci="24" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="1" cb="1"/><line nr="22" mi="0" ci="21" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="10" ci="0" mb="2" cb="0"/><line nr="26" mi="8" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="58"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="28" covered="116"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="3800" covered="19011"/><counter type="BRANCH" missed="604" covered="1834"/><counter type="LINE" missed="542" covered="3218"/><counter type="COMPLEXITY" missed="646" covered="1418"/><counter type="METHOD" missed="169" covered="662"/><counter type="CLASS" missed="4" covered="78"/></report>