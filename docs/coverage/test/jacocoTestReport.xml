<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="neureka"><sessioninfo id="DESKTOP-6UFJ24U-692b397e" start="1609691768407" dump="1609691806109"/><sessioninfo id="DESKTOP-6UFJ24U-4fa474fb" start="1609691768391" dump="1609691810595"/><sessioninfo id="DESKTOP-6UFJ24U-88272647" start="1609691768387" dump="1609691825383"/><sessioninfo id="DESKTOP-6UFJ24U-b674035c" start="1609691768403" dump="1609691833779"/><package name="neureka/ndim/iterators/types/simple/legacy"><class name="neureka/ndim/iterators/types/simple/legacy/SimpleLegacyD3CIterator" sourcefilename="SimpleLegacyD3CIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/types/simple/SimpleD3Configuration;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="increment" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decrement" desc="()V" line="32"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="42"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="47"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[I" line="52"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="57"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="([I)V" line="64"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="44" covered="107"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="7" covered="23"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/iterators/types/simple/legacy/SimpleLegacyD2CIterator" sourcefilename="SimpleLegacyD2CIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/types/simple/SimpleD2Configuration;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="increment" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decrement" desc="()V" line="26"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="34"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[I" line="44"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="49"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="([I)V" line="55"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="70"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SimpleLegacyD3CIterator.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="2"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="2"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="2" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="2" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="14" mb="0" cb="4"/><line nr="52" mi="18" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="2"/><line nr="58" mi="0" ci="7" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="107"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="7" covered="23"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleLegacyD2CIterator.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="2"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="2" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="2"/><line nr="44" mi="13" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="2"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="70"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="73" covered="177"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="12" covered="40"/><counter type="COMPLEXITY" missed="7" covered="21"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/ndim/iterators/types/simple/main"><class name="neureka/ndim/iterators/types/simple/main/SimpleD2CIterator" sourcefilename="SimpleD2CIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/types/simple/SimpleD2Configuration;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="increment" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decrement" desc="()V" line="26"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="34"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[I" line="44"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="49"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="([I)V" line="55"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="70"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/iterators/types/simple/main/SimpleD3CIterator" sourcefilename="SimpleD3CIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/types/simple/SimpleD3Configuration;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="increment" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decrement" desc="()V" line="32"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="42"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="47"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[I" line="52"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="57"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="([I)V" line="64"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="44" covered="107"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="7" covered="23"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SimpleD2CIterator.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="2"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="2" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="2"/><line nr="44" mi="13" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="2"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="70"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleD3CIterator.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="2"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="2"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="2" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="2" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="14" mb="0" cb="4"/><line nr="52" mi="18" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="2"/><line nr="58" mi="0" ci="7" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="107"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="7" covered="23"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="73" covered="177"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="12" covered="40"/><counter type="COMPLEXITY" missed="7" covered="21"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/ndim/iterators"><class name="neureka/ndim/iterators/NDIterator" sourcefilename="NDIterator.java"><method name="of" desc="(Lneureka/Tsr;)Lneureka/ndim/iterators/NDIterator;" line="68"><counter type="INSTRUCTION" missed="42" covered="70"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$asString$1" desc="(Ljava/util/StringJoiner;I)V" line="123"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$asString$0" desc="(Ljava/util/StringJoiner;I)V" line="118"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="115" covered="70"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="11" covered="14"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NDIterator.java"><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="6" ci="3" mb="1" cb="1"/><line nr="71" mi="6" ci="3" mb="1" cb="1"/><line nr="73" mi="0" ci="5" mb="0" cb="2"/><line nr="74" mi="6" ci="3" mb="1" cb="1"/><line nr="75" mi="6" ci="3" mb="1" cb="1"/><line nr="76" mi="0" ci="9" mb="0" cb="2"/><line nr="77" mi="0" ci="9" mb="0" cb="2"/><line nr="79" mi="6" ci="3" mb="1" cb="1"/><line nr="80" mi="6" ci="3" mb="1" cb="1"/><line nr="81" mi="0" ci="9" mb="0" cb="2"/><line nr="82" mi="0" ci="9" mb="0" cb="2"/><line nr="85" mi="0" ci="3" mb="1" cb="1"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="12" ci="0" mb="0" cb="0"/><line nr="120" mi="14" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="12" ci="0" mb="0" cb="0"/><line nr="124" mi="14" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="115" covered="70"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="11" covered="14"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="115" covered="70"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="11" covered="14"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></package><package name="neureka/ndim/config/types"><class name="neureka/ndim/config/types/D3C" sourcefilename="D3C.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/types/D1C" sourcefilename="D1C.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/types/D2C" sourcefilename="D2C.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="D1C.java"><line nr="5" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="D2C.java"><line nr="5" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="D3C.java"><line nr="5" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="3"/></package><package name="neureka/framing"><class name="neureka/framing/IndexAlias" sourcefilename="IndexAlias.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="25"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lneureka/Tsr;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/util/List;)[I" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([Ljava/lang/Object;)[I" line="50"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="65"><counter type="INSTRUCTION" missed="9" covered="15"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="72"><counter type="INSTRUCTION" missed="11" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_initializeIdxmap" desc="(Ljava/lang/Object;ILjava/lang/Object;I)V" line="80"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;Ljava/lang/Object;I)V" line="90"><counter type="INSTRUCTION" missed="11" covered="17"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keysOf" desc="(Ljava/lang/Object;)Ljava/util/List;" line="97"><counter type="INSTRUCTION" missed="14" covered="20"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keysOf" desc="(Ljava/lang/Object;I)Ljava/util/List;" line="105"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_fixed" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="2" covered="59"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="0" covered="201"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="199"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toString$6" desc="([Ljava/lang/Object;[ILjava/lang/StringBuilder;[ILjava/lang/Object;Ljava/lang/Object;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$5" desc="([I[Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Integer;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$4" desc="([I[ILjava/lang/StringBuilder;Ljava/lang/Object;Ljava/lang/Object;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$3" desc="(IILjava/lang/Integer;)Ljava/lang/Boolean;" line="138"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$keysOf$2" desc="(ILjava/util/List;Ljava/lang/Object;Ljava/lang/Integer;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$keysOf$1" desc="(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Integer;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lneureka/Tsr;[ILjava/lang/Object;Ljava/util/List;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="124" covered="673"/><counter type="BRANCH" missed="25" covered="51"/><counter type="LINE" missed="19" covered="109"/><counter type="COMPLEXITY" missed="22" covered="37"/><counter type="METHOD" missed="4" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/framing/Relation" sourcefilename="Relation.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="26"><counter type="INSTRUCTION" missed="33" covered="37"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addParent" desc="(Lneureka/Tsr;)Lneureka/framing/Relation;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addChild" desc="(Lneureka/Tsr;)Lneureka/framing/Relation;" line="53"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addReshapeRelationFor" desc="(Lneureka/Tsr;[I)Lneureka/framing/Relation;" line="70"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReshapeRelationFor" desc="(Lneureka/Tsr;)[I" line="80"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foreachChild" desc="(Ljava/util/function/Consumer;)Lneureka/framing/Relation;" line="90"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findRootTensor" desc="()Lneureka/Tsr;" line="104"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasParent" desc="()Z" line="111"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasChildren" desc="()Z" line="115"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="childCount" desc="()I" line="119"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lneureka/Tsr;)Lneureka/framing/Relation;" line="124"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParent" desc="()Lneureka/Tsr;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="66" covered="265"/><counter type="BRANCH" missed="16" covered="32"/><counter type="LINE" missed="8" covered="47"/><counter type="COMPLEXITY" missed="15" covered="23"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Relation.java"><line nr="14" mi="24" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="1" cb="1"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="9" mb="0" cb="2"/><line nr="29" mi="0" ci="7" mb="0" cb="2"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="1" cb="1"/><line nr="35" mi="17" ci="0" mb="2" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="2" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="2" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="11" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="2"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="1" cb="3"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="1" cb="1"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="1" cb="3"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="17" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="1" cb="1"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="1" cb="1"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="2"/><line nr="105" mi="2" ci="5" mb="1" cb="1"/><line nr="106" mi="0" ci="10" mb="0" cb="2"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="2"/><line nr="115" mi="1" ci="6" mb="1" cb="1"/><line nr="119" mi="2" ci="7" mb="1" cb="1"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="265"/><counter type="BRANCH" missed="16" covered="32"/><counter type="LINE" missed="8" covered="47"/><counter type="COMPLEXITY" missed="15" covered="23"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IndexAlias.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="7" mb="0" cb="0"/><line nr="15" mi="0" ci="17" mb="0" cb="2"/><line nr="16" mi="0" ci="8" mb="0" cb="2"/><line nr="17" mi="0" ci="4" mb="1" cb="1"/><line nr="18" mi="0" ci="11" mb="0" cb="2"/><line nr="19" mi="0" ci="18" mb="1" cb="1"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="16" ci="0" mb="2" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="2"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="16" mb="0" cb="2"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="13" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="2" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="12" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="1" cb="1"/><line nr="67" mi="9" ci="0" mb="2" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="1" cb="1"/><line nr="74" mi="11" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="13" mb="1" cb="1"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="2"/><line nr="82" mi="0" ci="10" mb="0" cb="2"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="11" mb="1" cb="1"/><line nr="92" mi="11" ci="0" mb="2" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="14" mb="1" cb="1"/><line nr="100" mi="14" ci="0" mb="2" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="19" mb="1" cb="3"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="1" cb="1"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="10" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="12" mb="0" cb="2"/><line nr="120" mi="0" ci="10" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="16" mb="0" cb="2"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="20" mb="0" cb="4"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="2"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="9" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="2"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="10" mb="0" cb="2"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="0" ci="14" mb="1" cb="1"/><line nr="171" mi="0" ci="4" mb="0" cb="2"/><line nr="172" mi="0" ci="11" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="20" mb="0" cb="4"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="8" mb="0" cb="2"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="11" mb="0" cb="2"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="124" covered="673"/><counter type="BRANCH" missed="25" covered="51"/><counter type="LINE" missed="19" covered="109"/><counter type="COMPLEXITY" missed="22" covered="37"/><counter type="METHOD" missed="4" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="190" covered="938"/><counter type="BRANCH" missed="41" covered="83"/><counter type="LINE" missed="27" covered="156"/><counter type="COMPLEXITY" missed="37" covered="60"/><counter type="METHOD" missed="6" covered="29"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/devices"><class name="neureka/devices/AbstractBaseDevice" sourcefilename="AbstractBaseDevice.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="53"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="60"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="71"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="(Ljava/util/function/IntFunction;)[Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lneureka/Tsr;)Z" line="94"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="104"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z" line="116"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="121"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="129"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeIf" desc="(Ljava/util/function/Predicate;)Z" line="134"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="141"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="146"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spliterator" desc="()Ljava/util/Spliterator;" line="151"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stream" desc="()Ljava/util/stream/Stream;" line="156"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parallelStream" desc="()Ljava/util/stream/Stream;" line="161"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="116" covered="27"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="31" covered="7"/><counter type="COMPLEXITY" missed="21" covered="6"/><counter type="METHOD" missed="14" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/AbstractDevice" sourcefilename="AbstractDevice.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleaning" desc="(Lneureka/Tsr;Ljava/lang/Runnable;)Lneureka/devices/Device;" line="91"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_cleaning" desc="(Ljava/lang/Object;Ljava/lang/Runnable;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/devices/Device;" line="102"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$execute$0" desc="(Lneureka/backend/api/ExecutionCall;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/Storage" sourcefilename="Storage.java"/><class name="neureka/devices/Device" sourcefilename="Device.java"><method name="find" desc="(Ljava/lang/String;)Lneureka/devices/Device;" line="76"><counter type="INSTRUCTION" missed="6" covered="134"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="3" covered="20"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="134"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="3" covered="20"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractDevice.java"><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="17" mb="0" cb="2"/><line nr="104" mi="0" ci="7" mb="0" cb="2"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Storage.java"/><sourcefile name="AbstractBaseDevice.java"><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="2" ci="2" mb="1" cb="1"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="2" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="10" ci="0" mb="2" cb="0"/><line nr="122" mi="6" ci="0" mb="2" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="22" ci="0" mb="4" cb="0"/><line nr="136" mi="6" ci="0" mb="2" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="116" covered="27"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="31" covered="7"/><counter type="COMPLEXITY" missed="21" covered="6"/><counter type="METHOD" missed="14" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Device.java"><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="29" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="2" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="2"/><line nr="93" mi="0" ci="10" mb="0" cb="2"/><line nr="94" mi="0" ci="11" mb="0" cb="2"/><line nr="95" mi="0" ci="21" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="1" cb="3"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="4"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="1" cb="1"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="134"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="3" covered="20"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="122" covered="238"/><counter type="BRANCH" missed="18" covered="22"/><counter type="LINE" missed="34" covered="44"/><counter type="COMPLEXITY" missed="25" covered="22"/><counter type="METHOD" missed="14" covered="13"/><counter type="CLASS" missed="0" covered="3"/></package><package name="neureka/devices/opencl/utility"><class name="neureka/devices/opencl/utility/DeviceQuery" sourcefilename="DeviceQuery.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="query" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="30" covered="722"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="0" covered="86"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInt" desc="(Lorg/jocl/cl_device_id;I)I" line="194"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInts" desc="(Lorg/jocl/cl_device_id;II)[I" line="207"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLong" desc="(Lorg/jocl/cl_device_id;I)J" line="221"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLongs" desc="(Lorg/jocl/cl_device_id;II)[J" line="234"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_device_id;I)Ljava/lang/String;" line="249"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_platform_id;I)Ljava/lang/String;" line="270"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="(Lorg/jocl/cl_device_id;I)J" line="290"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSizes" desc="(Lorg/jocl/cl_device_id;II)[J" line="305"><counter type="INSTRUCTION" missed="17" covered="41"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="888"/><counter type="BRANCH" missed="11" covered="15"/><counter type="LINE" missed="3" covered="114"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/opencl/utility/WeakTensorReference" sourcefilename="WeakTensorReference.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/opencl/utility/DispatchUtility" sourcefilename="DispatchUtility.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseTile" desc="(I[I)[I" line="13"><counter type="INSTRUCTION" missed="10" covered="459"/><counter type="BRANCH" missed="7" covered="53"/><counter type="LINE" missed="0" covered="77"/><counter type="COMPLEXITY" missed="7" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="([II)Z" line="141"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="productOfNewDimension" desc="([IIII)I" line="151"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inversionProductOfNewDimension" desc="([I[III)I" line="164"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primeFactors" desc="(I)Ljava/util/List;" line="173"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBestParams" desc="(IIIII)[I" line="208"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bestMatMulMatch" desc="(IIII)[I" line="224"><counter type="INSTRUCTION" missed="21" covered="88"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="749"/><counter type="BRANCH" missed="13" covered="67"/><counter type="LINE" missed="2" covered="112"/><counter type="COMPLEXITY" missed="13" covered="36"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DeviceQuery.java"><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="15" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="16" mb="0" cb="2"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="19" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="9" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="13" mb="0" cb="0"/><line nr="59" mi="0" ci="13" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="13" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="9" ci="6" mb="1" cb="1"/><line nr="72" mi="0" ci="15" mb="1" cb="1"/><line nr="73" mi="9" ci="6" mb="1" cb="1"/><line nr="74" mi="9" ci="6" mb="1" cb="1"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="13" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="27" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="13" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="13" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="13" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="16" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="16" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="2" ci="15" mb="1" cb="1"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="1" ci="17" mb="1" cb="1"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="16" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="16" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="1" cb="1"/><line nr="127" mi="0" ci="9" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="1" cb="1"/><line nr="129" mi="0" ci="9" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="13" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="13" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="13" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="14" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="13" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="13" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="13" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="13" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="13" mb="0" cb="0"/><line nr="168" mi="0" ci="9" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="33" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="11" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="11" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="7" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="254" mi="0" ci="10" mb="0" cb="0"/><line nr="257" mi="0" ci="10" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="7" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="10" mb="0" cb="0"/><line nr="278" mi="0" ci="10" mb="0" cb="0"/><line nr="290" mi="0" ci="7" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="9" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="1" cb="1"/><line nr="312" mi="8" ci="0" mb="2" cb="0"/><line nr="314" mi="9" ci="0" mb="0" cb="0"/><line nr="319" mi="0" ci="7" mb="0" cb="2"/><line nr="321" mi="0" ci="8" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="888"/><counter type="BRANCH" missed="11" covered="15"/><counter type="LINE" missed="3" covered="114"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeakTensorReference.java"><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="9" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DispatchUtility.java"><line nr="8" mi="5" ci="6" mb="1" cb="1"/><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="6" ci="15" mb="1" cb="3"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="21" mb="0" cb="2"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="2"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="1" cb="3"/><line nr="30" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="2"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="1" cb="3"/><line nr="48" mi="0" ci="11" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="2"/><line nr="55" mi="0" ci="18" mb="0" cb="2"/><line nr="57" mi="0" ci="8" mb="0" cb="2"/><line nr="58" mi="0" ci="8" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="20" mb="0" cb="2"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="2"/><line nr="74" mi="0" ci="11" mb="0" cb="2"/><line nr="75" mi="0" ci="13" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="13" mb="1" cb="7"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="4" ci="7" mb="2" cb="2"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="18" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="20" mb="0" cb="2"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="0" cb="2"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="2"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="1" cb="1"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="10" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="21" ci="0" mb="4" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="20" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="10" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="20" mb="0" cb="2"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="2"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="11" mb="0" cb="2"/><line nr="185" mi="0" ci="4" mb="0" cb="2"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="2"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="13" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="23" mb="0" cb="0"/><line nr="224" mi="0" ci="13" mb="0" cb="0"/><line nr="225" mi="0" ci="13" mb="0" cb="0"/><line nr="227" mi="0" ci="19" mb="0" cb="0"/><line nr="228" mi="0" ci="19" mb="0" cb="0"/><line nr="230" mi="21" ci="3" mb="1" cb="1"/><line nr="231" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="749"/><counter type="BRANCH" missed="13" covered="67"/><counter type="LINE" missed="2" covered="112"/><counter type="COMPLEXITY" missed="13" covered="36"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="121" covered="1646"/><counter type="BRANCH" missed="26" covered="82"/><counter type="LINE" missed="7" covered="229"/><counter type="COMPLEXITY" missed="27" covered="49"/><counter type="METHOD" missed="5" covered="17"/><counter type="CLASS" missed="0" covered="3"/></package><package name="neureka"><class name="neureka/Neureka$Settings$Debug" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka$Settings;)V" line="219"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isKeepingDerivativeTargetPayloads" desc="()Z" line="239"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsKeepingDerivativeTargetPayloads" desc="(Z)V" line="243"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="218"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="25"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$Create" sourcefilename="Tsr.java"><method name="E" desc="([I)Lneureka/Tsr;" line="2391"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newRandom" desc="([I)Lneureka/Tsr;" line="2395"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newRandom" desc="([IJ)Lneureka/Tsr;" line="2399"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTsrLike" desc="(Lneureka/Tsr;D)Lneureka/Tsr;" line="2404"><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTsrLike" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="2417"><counter type="INSTRUCTION" missed="14" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_newEmptyLike" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="2430"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="2387"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="77"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="8" covered="18"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$IO" sourcefilename="Tsr.java"><method name="getFrom" desc="(Lneureka/Tsr;I)D" line="2026"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFrom" desc="(Lneureka/Tsr;[I)D" line="2032"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInto" desc="(Lneureka/Tsr;ID)V" line="2037"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInto" desc="(Lneureka/Tsr;[ID)V" line="2042"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInto" desc="(Lneureka/Tsr;ID)V" line="2047"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInto" desc="(Lneureka/Tsr;[ID)V" line="2052"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInto" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/Tsr;" line="2057"><counter type="INSTRUCTION" missed="15" covered="20"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subInto" desc="(Lneureka/Tsr;ID)V" line="2063"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subInto" desc="(Lneureka/Tsr;[ID)V" line="2068"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subInto" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="2073"><counter type="INSTRUCTION" missed="19" covered="34"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mulInto" desc="(Lneureka/Tsr;ID)V" line="2087"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mulInto" desc="(Lneureka/Tsr;[ID)V" line="2092"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="200"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="1" covered="40"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lneureka/Neureka;" line="73"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setContext" desc="(Lneureka/Neureka;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="(Ljava/lang/Object;)Lneureka/Neureka;" line="89"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canAccessOpenCL" desc="()Z" line="95"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="settings" desc="()Lneureka/Neureka$Settings;" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="settings" desc="(Ljava/lang/Object;)Lneureka/Neureka$Settings;" line="103"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="utility" desc="()Lneureka/Neureka$Utility;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="version" desc="()Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="117"><counter type="INSTRUCTION" missed="36" covered="4"/><counter type="LINE" missed="8" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_currentThreadIsAuthorized" desc="()Z" line="130"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="89"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="9" covered="30"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings$Indexing" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka$Settings;)V" line="328"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsingLegacyIndexing" desc="()Z" line="337"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsUsingLegacyIndexing" desc="(Z)V" line="341"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsingArrayBasedIndexing" desc="()Z" line="346"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsUsingArrayBasedIndexing" desc="(Z)V" line="350"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="327"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="44"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Component" sourcefilename="Component.java"/><class name="neureka/Tsr" sourcefilename="Tsr.java"><method name="&lt;init&gt;" desc="()V" line="150"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([Ljava/lang/Object;)V" line="231"><counter type="INSTRUCTION" missed="75" covered="309"/><counter type="BRANCH" missed="16" covered="38"/><counter type="LINE" missed="7" covered="48"/><counter type="COMPLEXITY" missed="12" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/lang/String;)V" line="150"><counter type="INSTRUCTION" missed="11" covered="61"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/List;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="148"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="150"><counter type="INSTRUCTION" missed="7" covered="172"/><counter type="BRANCH" missed="2" covered="26"/><counter type="LINE" missed="1" covered="35"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="(Ljava/util/List;)V" line="412"><counter type="INSTRUCTION" missed="27" covered="89"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="150"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([F)V" line="150"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([ILjava/lang/String;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([I)V" line="150"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([ID)V" line="150"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([I[D)V" line="150"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([ILneureka/dtype/DataType;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([ILjava/lang/Class;Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([ILneureka/dtype/DataType;Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([ILjava/lang/String;)V" line="501"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([IZZ)V" line="507"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([ID)V" line="514"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([I[D)V" line="524"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([I[F)V" line="535"><counter type="INSTRUCTION" missed="22" covered="21"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([I[Ljava/lang/Object;)V" line="545"><counter type="INSTRUCTION" missed="37" covered="16"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_intArray" desc="([Ljava/lang/Object;)[I" line="562"><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_doubleArray" desc="([Ljava/lang/Object;)[D" line="573"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lneureka/dtype/DataType;Lneureka/Tsr$Initializer;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([ILneureka/dtype/DataType;Lneureka/Tsr$Initializer;)V" line="150"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_construct" desc="([ILneureka/dtype/DataType;Lneureka/Tsr$Initializer;)V" line="603"><counter type="INSTRUCTION" missed="92" covered="71"/><counter type="BRANCH" missed="12" covered="10"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/List;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/Tsr;Ljava/lang/String;)V" line="150"><counter type="INSTRUCTION" missed="1" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Lneureka/Tsr;Ljava/lang/String;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Lneureka/Tsr;Ljava/lang/String;Z)V" line="150"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="([Lneureka/Tsr;Ljava/lang/String;Z)V" line="709"><counter type="INSTRUCTION" missed="1" covered="20"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_configureFromNewShape" desc="([IZZ)V" line="723"><counter type="INSTRUCTION" missed="38" covered="58"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="7" covered="14"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRqsGradient" desc="(Z)Lneureka/Tsr;" line="763"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rqsGradient" desc="()Z" line="769"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setRqsGradient" desc="(Z)V" line="773"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsOutsourced" desc="(Z)Lneureka/Tsr;" line="786"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOutsourced" desc="()Z" line="830"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setIsOutsourced" desc="(Z)V" line="834"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsVirtual" desc="(Z)Lneureka/Tsr;" line="847"><counter type="INSTRUCTION" missed="55" covered="75"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="8" covered="19"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVirtual" desc="()Z" line="888"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setIsVirtual" desc="(Z)V" line="897"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGradientApplyRqd" desc="(Z)Lneureka/Tsr;" line="910"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gradientApplyRqd" desc="()Z" line="925"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setOrReject" desc="(Lneureka/Component;)Lneureka/Component;" line="951"><counter type="INSTRUCTION" missed="70" covered="76"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="15" covered="17"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_removeOrReject" desc="(Lneureka/Component;)Lneureka/Component;" line="1009"><counter type="INSTRUCTION" missed="12" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="1053"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="1068"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUndefined" desc="()Z" line="1072"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSlice" desc="()Z" line="1076"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sliceCount" desc="()I" line="1081"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSliceParent" desc="()Z" line="1086"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="belongsToGraph" desc="()Z" line="1091"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeave" desc="()Z" line="1095"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBranch" desc="()Z" line="1099"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasGradient" desc="()Z" line="1103"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGradient" desc="()Lneureka/Tsr;" line="1113"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="device" desc="()Lneureka/devices/Device;" line="1120"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraphNode" desc="()Lneureka/autograd/GraphNode;" line="1129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="()Lneureka/framing/IndexAlias;" line="1137"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_dataLength" desc="()I" line="1149"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="incrementVersionBecauseOf" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="1173"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="()Lneureka/Tsr;" line="1191"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_become" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1209"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="1240"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backward" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1280"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backward" desc="(D)Lneureka/Tsr;" line="1297"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backward" desc="()Lneureka/Tsr;" line="1310"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyGradient" desc="()V" line="1316"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detach" desc="()V" line="1337"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="label" desc="([[Ljava/lang/String;)Lneureka/Tsr;" line="1365"><counter type="INSTRUCTION" missed="10" covered="47"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="label" desc="(Ljava/util/List;)Lneureka/Tsr;" line="1398"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="label" desc="(Ljava/util/Map;)Lneureka/Tsr;" line="1420"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1438"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plusAssign" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1442"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="1446"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1450"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minusAssign" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1454"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negative" desc="()Lneureka/Tsr;" line="1458"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1462"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="timesAssign" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1466"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="1470"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="div" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1474"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="div" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="1478"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divAssign" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1482"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mod" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1486"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="modAssign" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1490"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="power" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1494"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="power" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="1498"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xor" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1502"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xor" desc="(Ljava/lang/Double;)Lneureka/Tsr;" line="1506"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="T" desc="()Lneureka/Tsr;" line="1520"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mean" desc="()Lneureka/Tsr;" line="1535"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dot" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="1549"><counter type="INSTRUCTION" missed="2" covered="98"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimtrim" desc="()Lneureka/Tsr;" line="1572"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCase" desc="(Lneureka/Tsr;)Z" line="1585"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lneureka/Tsr;)Z" line="1602"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAt" desc="([I)D" line="1626"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAt" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="1639"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAt" desc="(I)Ljava/lang/Object;" line="1644"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getElement" desc="(I)Ljava/lang/Object;" line="1648"><counter type="INSTRUCTION" missed="86" covered="13"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="7" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAt" desc="(ILjava/lang/Object;)Lneureka/Tsr;" line="1659"><counter type="INSTRUCTION" missed="95" covered="16"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAt" desc="(D)Ljava/lang/Object;" line="1670"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAt" desc="(Ljava/math/BigDecimal;)Ljava/lang/Object;" line="1674"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAt" desc="(Ljava/util/Map;)Ljava/lang/Object;" line="1679"><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shallowCopy" desc="()Lneureka/Tsr;" line="1695"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAt" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="1714"><counter type="INSTRUCTION" missed="6" covered="205"/><counter type="BRANCH" missed="4" covered="34"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_sliceOf" desc="([I[I[I)Lneureka/Tsr;" line="1763"><counter type="INSTRUCTION" missed="4" covered="248"/><counter type="BRANCH" missed="1" covered="29"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_configureSubsetFromRanges" desc="([Ljava/lang/Object;[I[I[II)I" line="1857"><counter type="INSTRUCTION" missed="58" covered="410"/><counter type="BRANCH" missed="10" covered="38"/><counter type="LINE" missed="7" covered="57"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAt" desc="(Ljava/util/List;Lneureka/Tsr;)Lneureka/Tsr;" line="1962"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAt" desc="(Ljava/util/Map;Lneureka/Tsr;)Lneureka/Tsr;" line="1978"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_putAtCheckFor" desc="(Lneureka/Tsr;)V" line="1984"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_putAt" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/Tsr;" line="1993"><counter type="INSTRUCTION" missed="14" covered="64"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="6" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueAt" desc="(I)Ljava/lang/Object;" line="2104"><counter type="INSTRUCTION" missed="39" covered="33"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue64" desc="([D)Lneureka/Tsr;" line="2114"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue32" desc="([F)Lneureka/Tsr;" line="2127"><counter type="INSTRUCTION" missed="26" covered="42"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/Object;)Lneureka/Tsr;" line="2140"><counter type="INSTRUCTION" missed="31" covered="76"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="2163"><counter type="INSTRUCTION" missed="4" covered="34"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gradient64" desc="()[D" line="2177"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gradient32" desc="()[F" line="2185"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addToGradient" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="2194"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asType" desc="(Ljava/lang/Class;)Lneureka/Tsr;" line="2232"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toType" desc="(Ljava/lang/Class;)Lneureka/Tsr;" line="2264"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value64" desc="(I)D" line="2279"><counter type="INSTRUCTION" missed="7" covered="39"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value64" desc="()[D" line="2290"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value32" desc="(I)F" line="2306"><counter type="INSTRUCTION" missed="16" covered="30"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value32" desc="()[F" line="2317"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="2334"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;" line="2338"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_toString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="2343"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="2348"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeFit" desc="([Lneureka/Tsr;Z)V" line="2353"><counter type="INSTRUCTION" missed="0" covered="162"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVersion" desc="()I" line="171"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toType$27" desc="(Ljava/lang/Class;Lneureka/Tsr;)V" line="2274"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$addToGradient$26" desc="(Lneureka/Tsr;Lneureka/devices/Device;)V" line="2204"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$addToGradient$25" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="2198"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isCase$24" desc="(Lneureka/Tsr;[ZLneureka/framing/Relation;)V" line="1586"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isCase$23" desc="(Lneureka/Tsr;[ZLjava/lang/Object;)V" line="1587"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$applyGradient$22" desc="(Lneureka/Tsr;)V" line="1321"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$applyGradient$21" desc="(Lneureka/optimization/Optimizer;)V" line="1321"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$backward$20" desc="(Lneureka/Tsr;Lneureka/autograd/GraphNode;)V" line="1280"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$delete$19" desc="(Lneureka/devices/Device;)V" line="1198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$delete$18" desc="(Lneureka/autograd/GraphNode;)V" line="1192"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_setOrReject$17" desc="(Ljava/lang/Object;)V" line="966"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_setOrReject$16" desc="(Ljava/lang/Object;)V" line="964"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setIsVirtual$15" desc="(Lneureka/Tsr;)V" line="862"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setIsOutsourced$14" desc="(Lneureka/devices/Device;)V" line="794"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setIsOutsourced$13" desc="(Lneureka/Tsr;)V" line="806"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setIsOutsourced$12" desc="(Lneureka/Tsr;Ljava/lang/Object;)V" line="810"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$11" desc="(I)[Lneureka/Tsr;" line="644"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="(I)[Lneureka/Tsr;" line="638"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(Ljava/lang/Object;)Z" line="636"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="(Ljava/lang/Integer;)I" line="593"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_construct$7" desc="(ILjava/util/List;)Z" line="415"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_construct$6" desc="(Ljava/util/List;)Z" line="412"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_construct$5" desc="(Ljava/lang/Object;)Z" line="412"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="(Ljava/lang/Object;)Ljava/util/List;" line="367"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Ljava/lang/Object;)Z" line="365"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(I)[Lneureka/Tsr;" line="326"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Ljava/util/List;Ljava/lang/Class;)Ljava/lang/Boolean;" line="315"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/Class;Ljava/lang/Object;)Z" line="315"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="136"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1094" covered="4936"/><counter type="BRANCH" missed="166" covered="532"/><counter type="LINE" missed="152" covered="791"/><counter type="COMPLEXITY" missed="145" covered="376"/><counter type="METHOD" missed="14" covered="158"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings$AutoGrad" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka$Settings;)V" line="251"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPreventingInlineOperations" desc="()Z" line="289"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsPreventingInlineOperations" desc="(Z)V" line="293"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRetainingPendingErrorForJITProp" desc="()Z" line="298"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsRetainingPendingErrorForJITProp" desc="(Z)V" line="302"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isApplyingGradientWhenTensorIsUsed" desc="()Z" line="307"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsApplyingGradientWhenTensorIsUsed" desc="(Z)V" line="311"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isApplyingGradientWhenRequested" desc="()Z" line="316"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsApplyingGradientWhenRequested" desc="(Z)V" line="320"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="250"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="82"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="9" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Utility" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="()V" line="425"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readResource" desc="(Ljava/lang/String;)Ljava/lang/String;" line="436"><counter type="INSTRUCTION" missed="7" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPresent" desc="(Ljava/lang/String;)Z" line="454"><counter type="INSTRUCTION" missed="69" covered="20"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="76" covered="60"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="7" covered="16"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$Initializer" sourcefilename="Tsr.java"/><class name="neureka/Neureka$Settings$NDim" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka$Settings;)V" line="375"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOnlyUsingDefaultNDConfiguration" desc="()Z" line="385"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsOnlyUsingDefaultNDConfiguration" desc="(Z)V" line="389"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="374"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="25"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings$DType" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka$Settings;)V" line="397"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultDataTypeClass" desc="()Ljava/lang/Class;" line="404"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDefaultDataTypeClass" desc="(Ljava/lang/Class;)V" line="408"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIsAutoConvertingExternalDataToJVMTypes" desc="()Z" line="413"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsAutoConvertingExternalDataToJVMTypes" desc="(Z)V" line="417"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="396"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="44"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debug" desc="()Lneureka/Neureka$Settings$Debug;" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="debug" desc="(Ljava/lang/Object;)Lneureka/Neureka$Settings$Debug;" line="160"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="autograd" desc="()Lneureka/Neureka$Settings$AutoGrad;" line="165"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="autograd" desc="(Ljava/lang/Object;)Lneureka/Neureka$Settings$AutoGrad;" line="169"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexing" desc="()Lneureka/Neureka$Settings$Indexing;" line="174"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexing" desc="(Ljava/lang/Object;)Lneureka/Neureka$Settings$Indexing;" line="178"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="view" desc="()Lneureka/Neureka$Settings$View;" line="183"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="view" desc="(Ljava/lang/Object;)Lneureka/Neureka$Settings$View;" line="187"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ndim" desc="()Lneureka/Neureka$Settings$NDim;" line="192"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ndim" desc="(Ljava/lang/Object;)Lneureka/Neureka$Settings$NDim;" line="196"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dtype" desc="()Lneureka/Neureka$Settings$DType;" line="201"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dtype" desc="(Ljava/lang/Object;)Lneureka/Neureka$Settings$DType;" line="205"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLocked" desc="()Z" line="210"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsLocked" desc="(Z)V" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="114"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Neureka$Settings$View" sourcefilename="Neureka.java"><method name="&lt;init&gt;" desc="(Lneureka/Neureka$Settings;)V" line="358"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsingLegacyView" desc="()Z" line="363"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsUsingLegacyView" desc="(Z)V" line="367"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="357"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="25"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/Tsr$1" sourcefilename="Tsr.java"><method name="&lt;init&gt;" desc="(Lneureka/Tsr;Lneureka/ndim/iterators/NDIterator;)V" line="1242"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="1248"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="1253"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Neureka.java"><line nr="49" mi="17" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="1" cb="1"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="42" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="12" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="1" ci="9" mb="2" cb="2"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="27" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="1" ci="9" mb="2" cb="2"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="1" ci="9" mb="2" cb="2"/><line nr="303" mi="0" ci="3" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="1" ci="9" mb="2" cb="2"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="1" ci="9" mb="2" cb="2"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="17" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="341" mi="1" ci="9" mb="2" cb="2"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="1" ci="9" mb="2" cb="2"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="357" mi="12" ci="0" mb="0" cb="0"/><line nr="358" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="0" cb="0"/><line nr="367" mi="1" ci="9" mb="2" cb="2"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="1" mb="0" cb="0"/><line nr="374" mi="12" ci="0" mb="0" cb="0"/><line nr="375" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="1" ci="9" mb="2" cb="2"/><line nr="390" mi="0" ci="3" mb="0" cb="0"/><line nr="391" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="17" ci="0" mb="0" cb="0"/><line nr="397" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="404" mi="0" ci="3" mb="0" cb="0"/><line nr="408" mi="1" ci="9" mb="2" cb="2"/><line nr="409" mi="0" ci="3" mb="0" cb="0"/><line nr="410" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="1" ci="9" mb="2" cb="2"/><line nr="418" mi="0" ci="3" mb="0" cb="0"/><line nr="419" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="3" mb="0" cb="0"/><line nr="436" mi="0" ci="6" mb="0" cb="0"/><line nr="438" mi="0" ci="8" mb="0" cb="0"/><line nr="439" mi="0" ci="4" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="0" ci="2" mb="0" cb="2"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="9" mb="0" cb="2"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="2" ci="0" mb="0" cb="0"/><line nr="448" mi="2" ci="0" mb="0" cb="0"/><line nr="449" mi="2" ci="0" mb="0" cb="0"/><line nr="454" mi="0" ci="2" mb="0" cb="0"/><line nr="455" mi="2" ci="7" mb="1" cb="1"/><line nr="456" mi="0" ci="2" mb="0" cb="0"/><line nr="458" mi="0" ci="3" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="1" ci="0" mb="0" cb="0"/><line nr="461" mi="3" ci="0" mb="0" cb="0"/><line nr="463" mi="5" ci="2" mb="5" cb="1"/><line nr="464" mi="54" ci="0" mb="0" cb="0"/><line nr="468" mi="4" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="283" covered="508"/><counter type="BRANCH" missed="29" covered="31"/><counter type="LINE" missed="25" covered="135"/><counter type="COMPLEXITY" missed="36" covered="60"/><counter type="METHOD" missed="9" covered="57"/><counter type="CLASS" missed="0" covered="9"/></sourcefile><sourcefile name="Tsr.java"><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="3" ci="87" mb="0" cb="0"/><line nr="171" mi="3" ci="90" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="16" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="20" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="24" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="28" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="32" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="36" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="40" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="44" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="1" ci="5" mb="2" cb="2"/><line nr="232" mi="0" ci="4" mb="0" cb="2"/><line nr="233" mi="0" ci="5" mb="1" cb="1"/><line nr="234" mi="6" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="2"/><line nr="237" mi="0" ci="13" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="2"/><line nr="240" mi="0" ci="13" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="15" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="17" mb="0" cb="2"/><line nr="249" mi="6" ci="11" mb="1" cb="1"/><line nr="250" mi="0" ci="5" mb="0" cb="2"/><line nr="251" mi="8" ci="8" mb="3" cb="1"/><line nr="252" mi="0" ci="9" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="1" cb="1"/><line nr="256" mi="18" ci="0" mb="2" cb="0"/><line nr="257" mi="17" ci="0" mb="2" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="2"/><line nr="261" mi="0" ci="10" mb="0" cb="4"/><line nr="262" mi="0" ci="18" mb="0" cb="2"/><line nr="263" mi="0" ci="11" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="1" cb="1"/><line nr="266" mi="10" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="8" mb="0" cb="0"/><line nr="270" mi="0" ci="8" mb="0" cb="0"/><line nr="271" mi="0" ci="8" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="16" mb="0" cb="2"/><line nr="281" mi="0" ci="9" mb="0" cb="4"/><line nr="282" mi="0" ci="3" mb="0" cb="2"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="16" mb="0" cb="2"/><line nr="292" mi="0" ci="4" mb="0" cb="2"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="8" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="9" mb="1" cb="1"/><line nr="297" mi="7" ci="0" mb="2" cb="0"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="12" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="18" mb="0" cb="2"/><line nr="317" mi="0" ci="6" mb="0" cb="2"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="16" mb="0" cb="2"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="7" mb="1" cb="1"/><line nr="323" mi="0" ci="10" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="11" ci="0" mb="0" cb="0"/><line nr="331" mi="0" ci="1" mb="0" cb="0"/><line nr="334" mi="0" ci="2" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="336" mi="0" ci="16" mb="0" cb="2"/><line nr="337" mi="0" ci="14" mb="1" cb="3"/><line nr="339" mi="0" ci="8" mb="1" cb="3"/><line nr="340" mi="0" ci="5" mb="0" cb="0"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="1" mb="0" cb="0"/><line nr="346" mi="0" ci="17" mb="0" cb="2"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="352" mi="0" ci="8" mb="0" cb="2"/><line nr="353" mi="0" ci="8" mb="0" cb="2"/><line nr="354" mi="0" ci="12" mb="0" cb="0"/><line nr="355" mi="0" ci="8" mb="1" cb="1"/><line nr="356" mi="0" ci="12" mb="0" cb="0"/><line nr="359" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="1" mb="0" cb="0"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="365" mi="0" ci="8" mb="0" cb="0"/><line nr="366" mi="0" ci="2" mb="0" cb="2"/><line nr="367" mi="0" ci="12" mb="0" cb="0"/><line nr="368" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="1" ci="7" mb="1" cb="1"/><line nr="371" mi="0" ci="9" mb="0" cb="2"/><line nr="372" mi="0" ci="3" mb="0" cb="2"/><line nr="373" mi="0" ci="3" mb="0" cb="2"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="2"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="378" mi="0" ci="10" mb="0" cb="2"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="380" mi="0" ci="2" mb="0" cb="2"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="8" mb="0" cb="2"/><line nr="383" mi="0" ci="7" mb="0" cb="2"/><line nr="384" mi="0" ci="6" mb="0" cb="0"/><line nr="385" mi="0" ci="5" mb="0" cb="2"/><line nr="386" mi="0" ci="6" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="389" mi="0" ci="5" mb="0" cb="0"/><line nr="390" mi="0" ci="1" mb="0" cb="0"/><line nr="391" mi="0" ci="4" mb="0" cb="0"/><line nr="392" mi="0" ci="8" mb="0" cb="2"/><line nr="393" mi="0" ci="7" mb="0" cb="2"/><line nr="394" mi="0" ci="6" mb="0" cb="0"/><line nr="395" mi="0" ci="5" mb="1" cb="1"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="0" ci="7" mb="0" cb="0"/><line nr="399" mi="0" ci="10" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="412" mi="0" ci="13" mb="0" cb="0"/><line nr="413" mi="0" ci="2" mb="1" cb="1"/><line nr="414" mi="0" ci="6" mb="0" cb="0"/><line nr="415" mi="1" ci="13" mb="1" cb="1"/><line nr="416" mi="0" ci="2" mb="1" cb="1"/><line nr="417" mi="0" ci="3" mb="0" cb="0"/><line nr="418" mi="0" ci="5" mb="0" cb="0"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="2" mb="1" cb="1"/><line nr="421" mi="11" ci="0" mb="0" cb="0"/><line nr="422" mi="0" ci="11" mb="0" cb="0"/><line nr="424" mi="0" ci="7" mb="0" cb="2"/><line nr="425" mi="0" ci="7" mb="0" cb="2"/><line nr="426" mi="6" ci="8" mb="1" cb="1"/><line nr="427" mi="0" ci="14" mb="0" cb="0"/><line nr="430" mi="0" ci="4" mb="0" cb="0"/><line nr="431" mi="0" ci="1" mb="0" cb="0"/><line nr="432" mi="2" ci="0" mb="0" cb="0"/><line nr="433" mi="3" ci="0" mb="0" cb="0"/><line nr="434" mi="5" ci="0" mb="0" cb="0"/><line nr="437" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><line nr="447" mi="0" ci="9" mb="0" cb="0"/><line nr="448" mi="0" ci="1" mb="0" cb="0"/><line nr="451" mi="0" ci="2" mb="0" cb="0"/><line nr="452" mi="0" ci="10" mb="0" cb="0"/><line nr="453" mi="0" ci="1" mb="0" cb="0"/><line nr="456" mi="0" ci="2" mb="0" cb="0"/><line nr="457" mi="0" ci="4" mb="0" cb="0"/><line nr="458" mi="0" ci="1" mb="0" cb="0"/><line nr="461" mi="0" ci="2" mb="0" cb="0"/><line nr="462" mi="0" ci="5" mb="0" cb="0"/><line nr="463" mi="0" ci="1" mb="0" cb="0"/><line nr="466" mi="0" ci="2" mb="0" cb="0"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="1" mb="0" cb="0"/><line nr="471" mi="0" ci="2" mb="0" cb="0"/><line nr="472" mi="0" ci="4" mb="0" cb="0"/><line nr="473" mi="0" ci="1" mb="0" cb="0"/><line nr="477" mi="0" ci="2" mb="0" cb="0"/><line nr="478" mi="0" ci="6" mb="0" cb="0"/><line nr="479" mi="0" ci="5" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="483" mi="0" ci="2" mb="0" cb="0"/><line nr="484" mi="0" ci="5" mb="0" cb="0"/><line nr="485" mi="0" ci="5" mb="0" cb="0"/><line nr="486" mi="0" ci="4" mb="0" cb="0"/><line nr="487" mi="0" ci="1" mb="0" cb="0"/><line nr="490" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="0" ci="4" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="493" mi="0" ci="4" mb="1" cb="1"/><line nr="494" mi="0" ci="5" mb="0" cb="0"/><line nr="495" mi="0" ci="1" mb="0" cb="0"/><line nr="501" mi="0" ci="5" mb="0" cb="0"/><line nr="502" mi="0" ci="7" mb="0" cb="0"/><line nr="503" mi="0" ci="1" mb="0" cb="0"/><line nr="507" mi="0" ci="10" mb="0" cb="4"/><line nr="508" mi="0" ci="6" mb="0" cb="2"/><line nr="509" mi="0" ci="5" mb="0" cb="0"/><line nr="510" mi="0" ci="1" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="5" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="0" cb="0"/><line nr="517" mi="0" ci="9" mb="0" cb="2"/><line nr="518" mi="0" ci="10" mb="0" cb="2"/><line nr="519" mi="0" ci="6" mb="0" cb="0"/><line nr="520" mi="0" ci="1" mb="0" cb="0"/><line nr="524" mi="0" ci="3" mb="0" cb="0"/><line nr="525" mi="0" ci="5" mb="0" cb="0"/><line nr="526" mi="0" ci="4" mb="0" cb="2"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="19" mb="0" cb="2"/><line nr="529" mi="0" ci="3" mb="0" cb="0"/><line nr="530" mi="0" ci="5" mb="0" cb="0"/><line nr="531" mi="0" ci="1" mb="0" cb="0"/><line nr="535" mi="0" ci="3" mb="0" cb="0"/><line nr="536" mi="0" ci="5" mb="0" cb="0"/><line nr="537" mi="0" ci="4" mb="1" cb="1"/><line nr="538" mi="3" ci="0" mb="0" cb="0"/><line nr="539" mi="19" ci="0" mb="2" cb="0"/><line nr="540" mi="0" ci="3" mb="0" cb="0"/><line nr="541" mi="0" ci="5" mb="0" cb="0"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="546" mi="0" ci="4" mb="1" cb="1"/><line nr="547" mi="5" ci="0" mb="0" cb="0"/><line nr="549" mi="5" ci="0" mb="0" cb="0"/><line nr="551" mi="1" ci="0" mb="0" cb="0"/><line nr="553" mi="17" ci="0" mb="2" cb="0"/><line nr="554" mi="5" ci="0" mb="0" cb="0"/><line nr="555" mi="3" ci="0" mb="0" cb="0"/><line nr="556" mi="1" ci="0" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="0"/><line nr="558" mi="0" ci="5" mb="0" cb="0"/><line nr="559" mi="0" ci="1" mb="0" cb="0"/><line nr="562" mi="0" ci="3" mb="0" cb="0"/><line nr="563" mi="0" ci="3" mb="0" cb="0"/><line nr="564" mi="0" ci="7" mb="0" cb="2"/><line nr="565" mi="9" ci="5" mb="1" cb="1"/><line nr="566" mi="0" ci="8" mb="0" cb="0"/><line nr="568" mi="0" ci="2" mb="0" cb="0"/><line nr="573" mi="3" ci="0" mb="0" cb="0"/><line nr="574" mi="3" ci="0" mb="0" cb="0"/><line nr="575" mi="7" ci="0" mb="2" cb="0"/><line nr="576" mi="15" ci="0" mb="2" cb="0"/><line nr="577" mi="14" ci="0" mb="2" cb="0"/><line nr="578" mi="13" ci="0" mb="2" cb="0"/><line nr="580" mi="2" ci="0" mb="0" cb="0"/><line nr="592" mi="0" ci="2" mb="0" cb="0"/><line nr="593" mi="0" ci="12" mb="0" cb="0"/><line nr="594" mi="0" ci="1" mb="0" cb="0"/><line nr="597" mi="2" ci="0" mb="0" cb="0"/><line nr="598" mi="5" ci="0" mb="0" cb="0"/><line nr="599" mi="1" ci="0" mb="0" cb="0"/><line nr="603" mi="0" ci="4" mb="0" cb="0"/><line nr="604" mi="0" ci="5" mb="0" cb="0"/><line nr="605" mi="0" ci="3" mb="0" cb="0"/><line nr="606" mi="0" ci="3" mb="1" cb="1"/><line nr="607" mi="10" ci="0" mb="2" cb="0"/><line nr="608" mi="13" ci="0" mb="0" cb="0"/><line nr="609" mi="0" ci="3" mb="1" cb="1"/><line nr="610" mi="10" ci="0" mb="2" cb="0"/><line nr="611" mi="13" ci="0" mb="0" cb="0"/><line nr="612" mi="0" ci="3" mb="0" cb="2"/><line nr="613" mi="0" ci="10" mb="0" cb="2"/><line nr="614" mi="0" ci="13" mb="0" cb="0"/><line nr="615" mi="0" ci="3" mb="1" cb="1"/><line nr="616" mi="10" ci="0" mb="2" cb="0"/><line nr="617" mi="13" ci="0" mb="0" cb="0"/><line nr="618" mi="0" ci="3" mb="1" cb="1"/><line nr="619" mi="10" ci="0" mb="2" cb="0"/><line nr="620" mi="13" ci="0" mb="0" cb="0"/><line nr="621" mi="0" ci="9" mb="0" cb="2"/><line nr="622" mi="0" ci="11" mb="0" cb="0"/><line nr="624" mi="0" ci="1" mb="0" cb="0"/><line nr="635" mi="0" ci="2" mb="0" cb="0"/><line nr="636" mi="0" ci="8" mb="0" cb="2"/><line nr="637" mi="0" ci="4" mb="0" cb="0"/><line nr="638" mi="0" ci="9" mb="0" cb="0"/><line nr="643" mi="0" ci="3" mb="0" cb="0"/><line nr="644" mi="0" ci="11" mb="0" cb="0"/><line nr="648" mi="0" ci="1" mb="0" cb="0"/><line nr="663" mi="0" ci="2" mb="0" cb="0"/><line nr="664" mi="1" ci="2" mb="1" cb="1"/><line nr="665" mi="0" ci="10" mb="0" cb="0"/><line nr="666" mi="0" ci="1" mb="0" cb="0"/><line nr="681" mi="0" ci="2" mb="0" cb="0"/><line nr="682" mi="0" ci="5" mb="0" cb="0"/><line nr="683" mi="0" ci="1" mb="0" cb="0"/><line nr="704" mi="0" ci="2" mb="0" cb="0"/><line nr="705" mi="0" ci="5" mb="0" cb="0"/><line nr="706" mi="0" ci="1" mb="0" cb="0"/><line nr="709" mi="1" ci="9" mb="3" cb="3"/><line nr="710" mi="0" ci="6" mb="0" cb="0"/><line nr="711" mi="0" ci="4" mb="0" cb="0"/><line nr="712" mi="0" ci="1" mb="0" cb="0"/><line nr="723" mi="0" ci="3" mb="0" cb="0"/><line nr="724" mi="0" ci="2" mb="1" cb="1"/><line nr="725" mi="9" ci="0" mb="0" cb="0"/><line nr="726" mi="11" ci="0" mb="0" cb="0"/><line nr="727" mi="3" ci="0" mb="0" cb="0"/><line nr="728" mi="5" ci="0" mb="0" cb="0"/><line nr="730" mi="0" ci="8" mb="0" cb="4"/><line nr="731" mi="0" ci="3" mb="0" cb="0"/><line nr="732" mi="0" ci="2" mb="0" cb="2"/><line nr="733" mi="0" ci="8" mb="2" cb="4"/><line nr="734" mi="2" ci="0" mb="0" cb="0"/><line nr="735" mi="3" ci="0" mb="0" cb="0"/><line nr="736" mi="5" ci="0" mb="0" cb="0"/><line nr="739" mi="0" ci="7" mb="0" cb="2"/><line nr="741" mi="0" ci="3" mb="0" cb="0"/><line nr="742" mi="0" ci="2" mb="0" cb="0"/><line nr="743" mi="0" ci="4" mb="0" cb="0"/><line nr="744" mi="0" ci="3" mb="0" cb="0"/><line nr="745" mi="0" ci="4" mb="0" cb="0"/><line nr="746" mi="0" ci="8" mb="0" cb="0"/><line nr="748" mi="0" ci="1" mb="0" cb="0"/><line nr="763" mi="0" ci="10" mb="0" cb="4"/><line nr="764" mi="0" ci="3" mb="0" cb="0"/><line nr="765" mi="0" ci="2" mb="0" cb="0"/><line nr="769" mi="0" ci="10" mb="0" cb="2"/><line nr="773" mi="0" ci="4" mb="0" cb="2"/><line nr="774" mi="0" ci="9" mb="0" cb="2"/><line nr="775" mi="0" ci="6" mb="0" cb="0"/><line nr="777" mi="0" ci="1" mb="0" cb="0"/><line nr="786" mi="0" ci="3" mb="0" cb="0"/><line nr="787" mi="0" ci="2" mb="0" cb="2"/><line nr="788" mi="0" ci="4" mb="0" cb="0"/><line nr="789" mi="0" ci="4" mb="0" cb="0"/><line nr="790" mi="0" ci="3" mb="0" cb="2"/><line nr="794" mi="0" ci="8" mb="0" cb="2"/><line nr="795" mi="1" ci="0" mb="0" cb="0"/><line nr="796" mi="4" ci="0" mb="0" cb="0"/><line nr="800" mi="2" ci="0" mb="0" cb="0"/><line nr="801" mi="0" ci="1" mb="0" cb="0"/><line nr="802" mi="0" ci="4" mb="0" cb="0"/><line nr="803" mi="0" ci="5" mb="0" cb="0"/><line nr="806" mi="7" ci="0" mb="0" cb="0"/><line nr="810" mi="10" ci="0" mb="2" cb="0"/><line nr="811" mi="1" ci="0" mb="0" cb="0"/><line nr="812" mi="4" ci="0" mb="0" cb="0"/><line nr="816" mi="2" ci="0" mb="0" cb="0"/><line nr="817" mi="1" ci="0" mb="0" cb="0"/><line nr="818" mi="4" ci="0" mb="0" cb="0"/><line nr="819" mi="1" ci="0" mb="0" cb="0"/><line nr="821" mi="0" ci="1" mb="0" cb="0"/><line nr="822" mi="0" ci="2" mb="1" cb="1"/><line nr="824" mi="0" ci="4" mb="0" cb="0"/><line nr="826" mi="0" ci="2" mb="0" cb="0"/><line nr="830" mi="0" ci="10" mb="0" cb="2"/><line nr="834" mi="0" ci="4" mb="0" cb="2"/><line nr="835" mi="0" ci="9" mb="0" cb="2"/><line nr="836" mi="0" ci="6" mb="0" cb="0"/><line nr="838" mi="0" ci="1" mb="0" cb="0"/><line nr="847" mi="0" ci="4" mb="0" cb="2"/><line nr="848" mi="0" ci="5" mb="0" cb="0"/><line nr="850" mi="0" ci="6" mb="0" cb="2"/><line nr="851" mi="1" ci="0" mb="0" cb="0"/><line nr="852" mi="13" ci="0" mb="0" cb="0"/><line nr="856" mi="2" ci="0" mb="0" cb="0"/><line nr="857" mi="0" ci="1" mb="0" cb="0"/><line nr="858" mi="0" ci="2" mb="0" cb="2"/><line nr="859" mi="0" ci="7" mb="0" cb="2"/><line nr="860" mi="0" ci="2" mb="0" cb="0"/><line nr="861" mi="0" ci="5" mb="0" cb="0"/><line nr="862" mi="10" ci="2" mb="1" cb="1"/><line nr="863" mi="0" ci="1" mb="0" cb="0"/><line nr="864" mi="6" ci="5" mb="1" cb="1"/><line nr="865" mi="0" ci="2" mb="1" cb="1"/><line nr="866" mi="7" ci="0" mb="0" cb="0"/><line nr="868" mi="0" ci="2" mb="0" cb="0"/><line nr="870" mi="0" ci="3" mb="0" cb="0"/><line nr="871" mi="0" ci="10" mb="0" cb="2"/><line nr="873" mi="0" ci="6" mb="0" cb="2"/><line nr="874" mi="1" ci="0" mb="0" cb="0"/><line nr="875" mi="11" ci="0" mb="0" cb="0"/><line nr="877" mi="4" ci="0" mb="0" cb="0"/><line nr="881" mi="5" ci="0" mb="0" cb="0"/><line nr="882" mi="0" ci="1" mb="0" cb="0"/><line nr="883" mi="0" ci="9" mb="1" cb="3"/><line nr="884" mi="0" ci="2" mb="0" cb="0"/><line nr="888" mi="0" ci="10" mb="0" cb="2"/><line nr="897" mi="0" ci="4" mb="0" cb="2"/><line nr="898" mi="0" ci="9" mb="0" cb="2"/><line nr="899" mi="0" ci="6" mb="0" cb="0"/><line nr="901" mi="0" ci="1" mb="0" cb="0"/><line nr="910" mi="0" ci="4" mb="0" cb="2"/><line nr="911" mi="0" ci="2" mb="0" cb="2"/><line nr="913" mi="0" ci="5" mb="0" cb="2"/><line nr="914" mi="0" ci="5" mb="0" cb="2"/><line nr="916" mi="0" ci="3" mb="0" cb="0"/><line nr="917" mi="0" ci="7" mb="0" cb="0"/><line nr="919" mi="0" ci="6" mb="0" cb="0"/><line nr="921" mi="0" ci="2" mb="0" cb="0"/><line nr="925" mi="0" ci="10" mb="0" cb="2"/><line nr="951" mi="0" ci="6" mb="0" cb="2"/><line nr="952" mi="0" ci="8" mb="0" cb="4"/><line nr="954" mi="0" ci="4" mb="0" cb="2"/><line nr="955" mi="0" ci="5" mb="0" cb="0"/><line nr="956" mi="0" ci="3" mb="1" cb="1"/><line nr="957" mi="3" ci="0" mb="0" cb="0"/><line nr="959" mi="5" ci="0" mb="0" cb="0"/><line nr="960" mi="1" ci="0" mb="0" cb="0"/><line nr="961" mi="14" ci="0" mb="0" cb="0"/><line nr="962" mi="2" ci="0" mb="0" cb="0"/><line nr="963" mi="1" ci="0" mb="0" cb="0"/><line nr="964" mi="13" ci="0" mb="0" cb="0"/><line nr="965" mi="1" ci="0" mb="0" cb="0"/><line nr="966" mi="0" ci="10" mb="0" cb="0"/><line nr="968" mi="0" ci="5" mb="0" cb="0"/><line nr="969" mi="1" ci="0" mb="0" cb="0"/><line nr="970" mi="14" ci="0" mb="0" cb="0"/><line nr="971" mi="2" ci="0" mb="0" cb="0"/><line nr="972" mi="0" ci="1" mb="0" cb="0"/><line nr="974" mi="0" ci="1" mb="0" cb="0"/><line nr="976" mi="0" ci="5" mb="0" cb="0"/><line nr="977" mi="1" ci="0" mb="0" cb="0"/><line nr="978" mi="14" ci="0" mb="0" cb="0"/><line nr="979" mi="2" ci="0" mb="0" cb="0"/><line nr="980" mi="0" ci="1" mb="0" cb="0"/><line nr="982" mi="0" ci="10" mb="0" cb="2"/><line nr="983" mi="0" ci="3" mb="0" cb="2"/><line nr="984" mi="0" ci="2" mb="0" cb="0"/><line nr="985" mi="0" ci="8" mb="1" cb="1"/><line nr="986" mi="0" ci="8" mb="1" cb="1"/><line nr="987" mi="2" ci="0" mb="0" cb="0"/><line nr="989" mi="0" ci="2" mb="0" cb="0"/><line nr="1009" mi="0" ci="3" mb="0" cb="2"/><line nr="1010" mi="0" ci="3" mb="0" cb="0"/><line nr="1017" mi="0" ci="4" mb="1" cb="1"/><line nr="1019" mi="4" ci="0" mb="0" cb="0"/><line nr="1020" mi="1" ci="0" mb="0" cb="0"/><line nr="1021" mi="4" ci="0" mb="0" cb="0"/><line nr="1026" mi="2" ci="0" mb="0" cb="0"/><line nr="1027" mi="1" ci="0" mb="0" cb="0"/><line nr="1032" mi="0" ci="2" mb="0" cb="0"/><line nr="1053" mi="1" ci="0" mb="0" cb="0"/><line nr="1068" mi="0" ci="10" mb="0" cb="4"/><line nr="1072" mi="0" ci="11" mb="1" cb="3"/><line nr="1076" mi="0" ci="5" mb="0" cb="0"/><line nr="1077" mi="0" ci="9" mb="0" cb="4"/><line nr="1081" mi="0" ci="5" mb="0" cb="0"/><line nr="1082" mi="1" ci="6" mb="1" cb="1"/><line nr="1086" mi="0" ci="5" mb="0" cb="0"/><line nr="1087" mi="0" ci="9" mb="1" cb="3"/><line nr="1091" mi="0" ci="4" mb="0" cb="0"/><line nr="1095" mi="0" ci="14" mb="1" cb="3"/><line nr="1099" mi="0" ci="7" mb="0" cb="2"/><line nr="1103" mi="0" ci="4" mb="0" cb="0"/><line nr="1113" mi="0" ci="5" mb="0" cb="0"/><line nr="1120" mi="0" ci="8" mb="0" cb="2"/><line nr="1121" mi="0" ci="2" mb="0" cb="0"/><line nr="1129" mi="0" ci="5" mb="0" cb="0"/><line nr="1137" mi="0" ci="5" mb="0" cb="0"/><line nr="1149" mi="0" ci="8" mb="0" cb="4"/><line nr="1150" mi="0" ci="9" mb="0" cb="2"/><line nr="1151" mi="0" ci="2" mb="0" cb="0"/><line nr="1153" mi="0" ci="9" mb="0" cb="2"/><line nr="1154" mi="0" ci="5" mb="0" cb="0"/><line nr="1173" mi="0" ci="5" mb="0" cb="2"/><line nr="1174" mi="0" ci="6" mb="0" cb="0"/><line nr="1175" mi="0" ci="5" mb="0" cb="0"/><line nr="1176" mi="0" ci="7" mb="1" cb="3"/><line nr="1177" mi="0" ci="6" mb="1" cb="3"/><line nr="1178" mi="0" ci="6" mb="0" cb="0"/><line nr="1179" mi="0" ci="7" mb="0" cb="0"/><line nr="1180" mi="0" ci="3" mb="0" cb="0"/><line nr="1181" mi="0" ci="5" mb="0" cb="0"/><line nr="1185" mi="0" ci="2" mb="0" cb="0"/><line nr="1191" mi="0" ci="5" mb="0" cb="0"/><line nr="1192" mi="0" ci="3" mb="0" cb="2"/><line nr="1193" mi="0" ci="2" mb="0" cb="0"/><line nr="1194" mi="0" ci="3" mb="0" cb="0"/><line nr="1195" mi="0" ci="5" mb="0" cb="0"/><line nr="1197" mi="0" ci="1" mb="0" cb="0"/><line nr="1198" mi="0" ci="11" mb="0" cb="0"/><line nr="1199" mi="0" ci="3" mb="0" cb="0"/><line nr="1200" mi="0" ci="3" mb="0" cb="0"/><line nr="1201" mi="0" ci="3" mb="0" cb="0"/><line nr="1202" mi="0" ci="5" mb="0" cb="0"/><line nr="1203" mi="0" ci="3" mb="0" cb="0"/><line nr="1204" mi="0" ci="2" mb="0" cb="0"/><line nr="1209" mi="0" ci="4" mb="0" cb="2"/><line nr="1210" mi="0" ci="5" mb="0" cb="0"/><line nr="1211" mi="0" ci="4" mb="0" cb="0"/><line nr="1212" mi="0" ci="4" mb="0" cb="0"/><line nr="1213" mi="0" ci="6" mb="0" cb="0"/><line nr="1214" mi="0" ci="4" mb="0" cb="0"/><line nr="1215" mi="0" ci="3" mb="1" cb="1"/><line nr="1216" mi="0" ci="6" mb="0" cb="0"/><line nr="1217" mi="0" ci="6" mb="0" cb="0"/><line nr="1218" mi="0" ci="15" mb="0" cb="2"/><line nr="1220" mi="0" ci="3" mb="0" cb="0"/><line nr="1221" mi="0" ci="4" mb="0" cb="0"/><line nr="1222" mi="0" ci="3" mb="0" cb="0"/><line nr="1223" mi="0" ci="3" mb="0" cb="0"/><line nr="1224" mi="0" ci="3" mb="0" cb="0"/><line nr="1225" mi="0" ci="2" mb="0" cb="0"/><line nr="1240" mi="0" ci="3" mb="0" cb="0"/><line nr="1241" mi="0" ci="6" mb="0" cb="0"/><line nr="1242" mi="0" ci="8" mb="0" cb="0"/><line nr="1243" mi="0" ci="3" mb="0" cb="0"/><line nr="1244" mi="0" ci="6" mb="0" cb="0"/><line nr="1248" mi="0" ci="9" mb="0" cb="2"/><line nr="1253" mi="0" ci="7" mb="0" cb="0"/><line nr="1254" mi="0" ci="3" mb="0" cb="0"/><line nr="1255" mi="0" ci="6" mb="0" cb="0"/><line nr="1256" mi="0" ci="2" mb="0" cb="0"/><line nr="1280" mi="0" ci="13" mb="1" cb="3"/><line nr="1281" mi="0" ci="4" mb="0" cb="0"/><line nr="1283" mi="0" ci="2" mb="0" cb="0"/><line nr="1297" mi="0" ci="10" mb="0" cb="0"/><line nr="1298" mi="0" ci="2" mb="0" cb="0"/><line nr="1310" mi="0" ci="4" mb="0" cb="0"/><line nr="1311" mi="0" ci="2" mb="0" cb="0"/><line nr="1316" mi="0" ci="5" mb="0" cb="0"/><line nr="1317" mi="0" ci="4" mb="0" cb="0"/><line nr="1318" mi="0" ci="6" mb="0" cb="0"/><line nr="1321" mi="0" ci="10" mb="0" cb="0"/><line nr="1322" mi="0" ci="4" mb="0" cb="0"/><line nr="1323" mi="0" ci="5" mb="0" cb="0"/><line nr="1324" mi="0" ci="2" mb="1" cb="1"/><line nr="1325" mi="0" ci="5" mb="0" cb="0"/><line nr="1327" mi="0" ci="13" mb="0" cb="0"/><line nr="1329" mi="0" ci="2" mb="1" cb="1"/><line nr="1330" mi="0" ci="5" mb="0" cb="0"/><line nr="1331" mi="0" ci="1" mb="0" cb="0"/><line nr="1333" mi="0" ci="1" mb="0" cb="0"/><line nr="1337" mi="0" ci="4" mb="0" cb="0"/><line nr="1338" mi="0" ci="1" mb="0" cb="0"/><line nr="1365" mi="0" ci="5" mb="0" cb="0"/><line nr="1366" mi="0" ci="2" mb="1" cb="1"/><line nr="1367" mi="6" ci="0" mb="0" cb="0"/><line nr="1368" mi="4" ci="0" mb="0" cb="0"/><line nr="1370" mi="0" ci="8" mb="0" cb="2"/><line nr="1371" mi="0" ci="4" mb="1" cb="1"/><line nr="1372" mi="0" ci="10" mb="0" cb="2"/><line nr="1373" mi="0" ci="16" mb="1" cb="1"/><line nr="1377" mi="0" ci="2" mb="0" cb="0"/><line nr="1398" mi="0" ci="5" mb="0" cb="0"/><line nr="1399" mi="0" ci="9" mb="1" cb="1"/><line nr="1400" mi="0" ci="2" mb="0" cb="0"/><line nr="1420" mi="0" ci="8" mb="0" cb="0"/><line nr="1421" mi="0" ci="2" mb="0" cb="0"/><line nr="1438" mi="0" ci="13" mb="0" cb="0"/><line nr="1442" mi="0" ci="13" mb="0" cb="0"/><line nr="1446" mi="0" ci="9" mb="0" cb="0"/><line nr="1450" mi="0" ci="13" mb="0" cb="0"/><line nr="1454" mi="0" ci="13" mb="0" cb="0"/><line nr="1458" mi="0" ci="9" mb="0" cb="0"/><line nr="1462" mi="0" ci="13" mb="0" cb="0"/><line nr="1466" mi="0" ci="13" mb="0" cb="0"/><line nr="1470" mi="0" ci="9" mb="0" cb="0"/><line nr="1474" mi="0" ci="13" mb="0" cb="0"/><line nr="1478" mi="0" ci="9" mb="0" cb="0"/><line nr="1482" mi="0" ci="13" mb="0" cb="0"/><line nr="1486" mi="0" ci="13" mb="0" cb="0"/><line nr="1490" mi="13" ci="0" mb="0" cb="0"/><line nr="1494" mi="0" ci="13" mb="0" cb="0"/><line nr="1498" mi="0" ci="9" mb="0" cb="0"/><line nr="1502" mi="0" ci="13" mb="0" cb="0"/><line nr="1506" mi="0" ci="9" mb="0" cb="0"/><line nr="1520" mi="0" ci="4" mb="0" cb="0"/><line nr="1521" mi="0" ci="19" mb="0" cb="4"/><line nr="1522" mi="0" ci="14" mb="0" cb="0"/><line nr="1523" mi="0" ci="7" mb="0" cb="0"/><line nr="1535" mi="0" ci="8" mb="0" cb="0"/><line nr="1536" mi="0" ci="13" mb="0" cb="0"/><line nr="1537" mi="0" ci="18" mb="0" cb="0"/><line nr="1549" mi="0" ci="2" mb="0" cb="0"/><line nr="1550" mi="0" ci="8" mb="0" cb="0"/><line nr="1551" mi="0" ci="2" mb="0" cb="0"/><line nr="1552" mi="0" ci="21" mb="0" cb="6"/><line nr="1553" mi="2" ci="19" mb="1" cb="5"/><line nr="1554" mi="0" ci="2" mb="0" cb="2"/><line nr="1555" mi="0" ci="15" mb="0" cb="0"/><line nr="1556" mi="0" ci="15" mb="0" cb="0"/><line nr="1558" mi="0" ci="14" mb="0" cb="0"/><line nr="1572" mi="0" ci="4" mb="0" cb="0"/><line nr="1585" mi="0" ci="7" mb="0" cb="0"/><line nr="1586" mi="0" ci="14" mb="0" cb="0"/><line nr="1587" mi="0" ci="8" mb="0" cb="2"/><line nr="1588" mi="0" ci="1" mb="0" cb="0"/><line nr="1589" mi="0" ci="4" mb="0" cb="0"/><line nr="1602" mi="0" ci="4" mb="0" cb="0"/><line nr="1626" mi="6" ci="0" mb="0" cb="0"/><line nr="1639" mi="0" ci="12" mb="0" cb="0"/><line nr="1640" mi="0" ci="4" mb="0" cb="0"/><line nr="1644" mi="0" ci="14" mb="0" cb="0"/><line nr="1648" mi="0" ci="13" mb="1" cb="1"/><line nr="1649" mi="14" ci="0" mb="2" cb="0"/><line nr="1650" mi="14" ci="0" mb="2" cb="0"/><line nr="1651" mi="14" ci="0" mb="2" cb="0"/><line nr="1652" mi="14" ci="0" mb="2" cb="0"/><line nr="1653" mi="14" ci="0" mb="2" cb="0"/><line nr="1654" mi="14" ci="0" mb="2" cb="0"/><line nr="1655" mi="2" ci="0" mb="0" cb="0"/><line nr="1659" mi="0" ci="14" mb="1" cb="1"/><line nr="1660" mi="16" ci="0" mb="2" cb="0"/><line nr="1661" mi="16" ci="0" mb="2" cb="0"/><line nr="1662" mi="16" ci="0" mb="2" cb="0"/><line nr="1663" mi="16" ci="0" mb="2" cb="0"/><line nr="1664" mi="16" ci="0" mb="2" cb="0"/><line nr="1665" mi="15" ci="0" mb="2" cb="0"/><line nr="1666" mi="0" ci="2" mb="0" cb="0"/><line nr="1670" mi="16" ci="0" mb="0" cb="0"/><line nr="1674" mi="0" ci="15" mb="0" cb="0"/><line nr="1679" mi="2" ci="2" mb="1" cb="1"/><line nr="1680" mi="0" ci="4" mb="0" cb="0"/><line nr="1681" mi="0" ci="4" mb="0" cb="0"/><line nr="1682" mi="0" ci="4" mb="0" cb="0"/><line nr="1683" mi="0" ci="4" mb="0" cb="0"/><line nr="1684" mi="0" ci="8" mb="0" cb="0"/><line nr="1685" mi="0" ci="4" mb="0" cb="0"/><line nr="1686" mi="0" ci="8" mb="0" cb="2"/><line nr="1687" mi="0" ci="8" mb="0" cb="0"/><line nr="1688" mi="0" ci="11" mb="0" cb="0"/><line nr="1690" mi="0" ci="6" mb="0" cb="0"/><line nr="1695" mi="0" ci="8" mb="1" cb="3"/><line nr="1696" mi="0" ci="4" mb="0" cb="0"/><line nr="1697" mi="0" ci="12" mb="0" cb="2"/><line nr="1698" mi="0" ci="4" mb="0" cb="0"/><line nr="1699" mi="0" ci="12" mb="0" cb="2"/><line nr="1700" mi="0" ci="4" mb="0" cb="0"/><line nr="1701" mi="0" ci="1" mb="0" cb="0"/><line nr="1702" mi="0" ci="6" mb="0" cb="0"/><line nr="1714" mi="2" ci="2" mb="1" cb="1"/><line nr="1715" mi="4" ci="7" mb="1" cb="3"/><line nr="1716" mi="0" ci="7" mb="0" cb="4"/><line nr="1723" mi="0" ci="3" mb="0" cb="0"/><line nr="1726" mi="0" ci="4" mb="0" cb="0"/><line nr="1727" mi="0" ci="4" mb="0" cb="0"/><line nr="1728" mi="0" ci="4" mb="0" cb="0"/><line nr="1729" mi="0" ci="9" mb="0" cb="2"/><line nr="1731" mi="0" ci="3" mb="0" cb="2"/><line nr="1732" mi="0" ci="2" mb="0" cb="0"/><line nr="1733" mi="0" ci="26" mb="0" cb="6"/><line nr="1734" mi="0" ci="8" mb="0" cb="4"/><line nr="1735" mi="0" ci="5" mb="0" cb="0"/><line nr="1736" mi="0" ci="3" mb="0" cb="0"/><line nr="1737" mi="0" ci="2" mb="1" cb="1"/><line nr="1738" mi="0" ci="8" mb="0" cb="2"/><line nr="1739" mi="0" ci="19" mb="0" cb="2"/><line nr="1740" mi="0" ci="5" mb="0" cb="0"/><line nr="1743" mi="0" ci="2" mb="0" cb="0"/><line nr="1744" mi="0" ci="26" mb="1" cb="5"/><line nr="1745" mi="0" ci="13" mb="0" cb="2"/><line nr="1746" mi="0" ci="6" mb="0" cb="0"/><line nr="1751" mi="0" ci="9" mb="0" cb="0"/><line nr="1753" mi="0" ci="1" mb="0" cb="0"/><line nr="1754" mi="0" ci="13" mb="0" cb="0"/><line nr="1755" mi="0" ci="3" mb="0" cb="0"/><line nr="1756" mi="0" ci="5" mb="0" cb="0"/><line nr="1758" mi="0" ci="6" mb="0" cb="0"/><line nr="1763" mi="0" ci="4" mb="0" cb="0"/><line nr="1764" mi="0" ci="4" mb="0" cb="0"/><line nr="1765" mi="0" ci="5" mb="0" cb="0"/><line nr="1766" mi="0" ci="4" mb="0" cb="0"/><line nr="1767" mi="0" ci="4" mb="0" cb="0"/><line nr="1768" mi="0" ci="3" mb="0" cb="0"/><line nr="1770" mi="0" ci="8" mb="0" cb="2"/><line nr="1771" mi="0" ci="12" mb="0" cb="2"/><line nr="1773" mi="0" ci="8" mb="0" cb="2"/><line nr="1774" mi="0" ci="11" mb="0" cb="0"/><line nr="1776" mi="0" ci="11" mb="0" cb="2"/><line nr="1777" mi="0" ci="11" mb="0" cb="2"/><line nr="1782" mi="0" ci="9" mb="0" cb="4"/><line nr="1806" mi="0" ci="12" mb="0" cb="2"/><line nr="1807" mi="0" ci="7" mb="0" cb="2"/><line nr="1808" mi="0" ci="8" mb="0" cb="2"/><line nr="1809" mi="0" ci="8" mb="0" cb="2"/><line nr="1810" mi="0" ci="8" mb="0" cb="0"/><line nr="1811" mi="0" ci="5" mb="0" cb="2"/><line nr="1812" mi="0" ci="27" mb="0" cb="0"/><line nr="1815" mi="0" ci="6" mb="0" cb="0"/><line nr="1816" mi="0" ci="5" mb="0" cb="0"/><line nr="1817" mi="0" ci="4" mb="0" cb="0"/><line nr="1818" mi="0" ci="5" mb="0" cb="0"/><line nr="1823" mi="0" ci="8" mb="0" cb="0"/><line nr="1825" mi="0" ci="3" mb="0" cb="2"/><line nr="1826" mi="0" ci="5" mb="0" cb="0"/><line nr="1827" mi="0" ci="5" mb="0" cb="0"/><line nr="1828" mi="0" ci="4" mb="0" cb="0"/><line nr="1830" mi="4" ci="3" mb="1" cb="1"/><line nr="1831" mi="0" ci="8" mb="0" cb="0"/><line nr="1832" mi="0" ci="5" mb="0" cb="0"/><line nr="1833" mi="0" ci="8" mb="0" cb="2"/><line nr="1834" mi="0" ci="4" mb="0" cb="0"/><line nr="1835" mi="0" ci="4" mb="0" cb="0"/><line nr="1836" mi="0" ci="2" mb="0" cb="0"/><line nr="1857" mi="0" ci="8" mb="0" cb="2"/><line nr="1858" mi="0" ci="2" mb="0" cb="0"/><line nr="1859" mi="0" ci="2" mb="0" cb="0"/><line nr="1860" mi="0" ci="5" mb="0" cb="2"/><line nr="1861" mi="0" ci="5" mb="1" cb="1"/><line nr="1862" mi="0" ci="9" mb="0" cb="0"/><line nr="1863" mi="0" ci="24" mb="0" cb="2"/><line nr="1864" mi="0" ci="4" mb="0" cb="0"/><line nr="1865" mi="0" ci="1" mb="0" cb="0"/><line nr="1866" mi="0" ci="5" mb="0" cb="2"/><line nr="1867" mi="0" ci="5" mb="1" cb="1"/><line nr="1868" mi="0" ci="9" mb="0" cb="0"/><line nr="1869" mi="0" ci="23" mb="0" cb="2"/><line nr="1870" mi="0" ci="4" mb="0" cb="0"/><line nr="1873" mi="0" ci="5" mb="0" cb="2"/><line nr="1874" mi="0" ci="5" mb="0" cb="2"/><line nr="1875" mi="0" ci="7" mb="0" cb="0"/><line nr="1876" mi="0" ci="7" mb="0" cb="0"/><line nr="1877" mi="0" ci="10" mb="0" cb="0"/><line nr="1878" mi="0" ci="8" mb="0" cb="2"/><line nr="1879" mi="0" ci="12" mb="0" cb="0"/><line nr="1880" mi="0" ci="17" mb="0" cb="0"/><line nr="1882" mi="0" ci="2" mb="0" cb="0"/><line nr="1883" mi="0" ci="1" mb="0" cb="0"/><line nr="1884" mi="0" ci="5" mb="1" cb="1"/><line nr="1885" mi="6" ci="0" mb="0" cb="0"/><line nr="1886" mi="7" ci="0" mb="0" cb="0"/><line nr="1888" mi="0" ci="5" mb="0" cb="0"/><line nr="1889" mi="0" ci="2" mb="1" cb="1"/><line nr="1890" mi="0" ci="10" mb="0" cb="0"/><line nr="1891" mi="0" ci="2" mb="0" cb="0"/><line nr="1892" mi="0" ci="2" mb="0" cb="0"/><line nr="1893" mi="0" ci="1" mb="0" cb="0"/><line nr="1894" mi="13" ci="0" mb="0" cb="0"/><line nr="1895" mi="3" ci="0" mb="0" cb="0"/><line nr="1896" mi="5" ci="0" mb="0" cb="0"/><line nr="1898" mi="0" ci="1" mb="0" cb="0"/><line nr="1900" mi="0" ci="8" mb="0" cb="0"/><line nr="1901" mi="0" ci="10" mb="0" cb="2"/><line nr="1902" mi="0" ci="9" mb="0" cb="0"/><line nr="1903" mi="0" ci="5" mb="0" cb="0"/><line nr="1904" mi="0" ci="22" mb="1" cb="3"/><line nr="1908" mi="0" ci="5" mb="0" cb="0"/><line nr="1909" mi="0" ci="8" mb="1" cb="1"/><line nr="1910" mi="0" ci="2" mb="1" cb="1"/><line nr="1911" mi="0" ci="14" mb="0" cb="0"/><line nr="1914" mi="9" ci="0" mb="0" cb="0"/><line nr="1916" mi="0" ci="14" mb="1" cb="1"/><line nr="1917" mi="0" ci="2" mb="1" cb="1"/><line nr="1918" mi="0" ci="19" mb="0" cb="0"/><line nr="1920" mi="0" ci="1" mb="0" cb="0"/><line nr="1924" mi="15" ci="0" mb="0" cb="0"/><line nr="1926" mi="0" ci="1" mb="0" cb="0"/><line nr="1927" mi="0" ci="9" mb="0" cb="0"/><line nr="1928" mi="0" ci="15" mb="0" cb="0"/><line nr="1931" mi="0" ci="7" mb="1" cb="5"/><line nr="1932" mi="0" ci="2" mb="0" cb="0"/><line nr="1933" mi="0" ci="2" mb="0" cb="0"/><line nr="1934" mi="0" ci="2" mb="0" cb="0"/><line nr="1936" mi="0" ci="11" mb="0" cb="2"/><line nr="1937" mi="0" ci="11" mb="0" cb="2"/><line nr="1938" mi="0" ci="10" mb="0" cb="0"/><line nr="1939" mi="0" ci="6" mb="0" cb="0"/><line nr="1941" mi="0" ci="7" mb="0" cb="0"/><line nr="1962" mi="0" ci="3" mb="0" cb="0"/><line nr="1963" mi="2" ci="7" mb="1" cb="1"/><line nr="1964" mi="0" ci="5" mb="0" cb="0"/><line nr="1978" mi="0" ci="3" mb="0" cb="0"/><line nr="1979" mi="2" ci="7" mb="1" cb="1"/><line nr="1980" mi="0" ci="5" mb="0" cb="0"/><line nr="1984" mi="0" ci="3" mb="0" cb="2"/><line nr="1985" mi="0" ci="2" mb="0" cb="0"/><line nr="1986" mi="0" ci="3" mb="0" cb="0"/><line nr="1987" mi="0" ci="5" mb="0" cb="0"/><line nr="1989" mi="0" ci="1" mb="0" cb="0"/><line nr="1993" mi="0" ci="2" mb="0" cb="0"/><line nr="1994" mi="0" ci="6" mb="0" cb="4"/><line nr="1995" mi="0" ci="5" mb="0" cb="0"/><line nr="1997" mi="0" ci="4" mb="0" cb="0"/><line nr="1998" mi="1" ci="0" mb="0" cb="0"/><line nr="1999" mi="4" ci="0" mb="0" cb="0"/><line nr="2000" mi="2" ci="0" mb="0" cb="0"/><line nr="2001" mi="0" ci="1" mb="0" cb="0"/><line nr="2002" mi="0" ci="2" mb="0" cb="0"/><line nr="2004" mi="0" ci="16" mb="2" cb="4"/><line nr="2005" mi="0" ci="16" mb="0" cb="0"/><line nr="2007" mi="0" ci="9" mb="0" cb="2"/><line nr="2008" mi="1" ci="0" mb="0" cb="0"/><line nr="2009" mi="4" ci="0" mb="0" cb="0"/><line nr="2010" mi="2" ci="0" mb="0" cb="0"/><line nr="2011" mi="0" ci="1" mb="0" cb="0"/><line nr="2012" mi="0" ci="2" mb="0" cb="0"/><line nr="2026" mi="2" ci="6" mb="2" cb="2"/><line nr="2027" mi="0" ci="8" mb="0" cb="2"/><line nr="2028" mi="0" ci="7" mb="0" cb="0"/><line nr="2032" mi="0" ci="4" mb="0" cb="0"/><line nr="2033" mi="0" ci="7" mb="0" cb="0"/><line nr="2037" mi="0" ci="4" mb="0" cb="0"/><line nr="2038" mi="0" ci="7" mb="0" cb="0"/><line nr="2039" mi="0" ci="1" mb="0" cb="0"/><line nr="2042" mi="0" ci="4" mb="0" cb="0"/><line nr="2043" mi="0" ci="7" mb="0" cb="0"/><line nr="2044" mi="0" ci="1" mb="0" cb="0"/><line nr="2047" mi="0" ci="4" mb="0" cb="0"/><line nr="2048" mi="0" ci="10" mb="0" cb="0"/><line nr="2049" mi="0" ci="1" mb="0" cb="0"/><line nr="2052" mi="0" ci="4" mb="0" cb="0"/><line nr="2053" mi="0" ci="10" mb="0" cb="0"/><line nr="2054" mi="0" ci="1" mb="0" cb="0"/><line nr="2057" mi="15" ci="3" mb="3" cb="1"/><line nr="2058" mi="0" ci="15" mb="0" cb="0"/><line nr="2059" mi="0" ci="2" mb="0" cb="0"/><line nr="2063" mi="0" ci="4" mb="0" cb="0"/><line nr="2064" mi="0" ci="10" mb="0" cb="0"/><line nr="2065" mi="0" ci="1" mb="0" cb="0"/><line nr="2068" mi="0" ci="4" mb="0" cb="0"/><line nr="2069" mi="0" ci="10" mb="0" cb="0"/><line nr="2070" mi="0" ci="1" mb="0" cb="0"/><line nr="2073" mi="3" ci="3" mb="3" cb="1"/><line nr="2074" mi="12" ci="0" mb="0" cb="0"/><line nr="2076" mi="4" ci="3" mb="1" cb="1"/><line nr="2077" mi="0" ci="6" mb="0" cb="0"/><line nr="2078" mi="0" ci="3" mb="0" cb="0"/><line nr="2079" mi="0" ci="7" mb="0" cb="2"/><line nr="2080" mi="0" ci="6" mb="0" cb="0"/><line nr="2081" mi="0" ci="5" mb="0" cb="0"/><line nr="2084" mi="0" ci="1" mb="0" cb="0"/><line nr="2087" mi="0" ci="4" mb="0" cb="0"/><line nr="2088" mi="0" ci="10" mb="0" cb="0"/><line nr="2089" mi="0" ci="1" mb="0" cb="0"/><line nr="2092" mi="0" ci="4" mb="0" cb="0"/><line nr="2093" mi="0" ci="10" mb="0" cb="0"/><line nr="2094" mi="0" ci="1" mb="0" cb="0"/><line nr="2104" mi="0" ci="11" mb="0" cb="2"/><line nr="2105" mi="0" ci="11" mb="0" cb="2"/><line nr="2106" mi="0" ci="11" mb="1" cb="1"/><line nr="2107" mi="11" ci="0" mb="2" cb="0"/><line nr="2108" mi="11" ci="0" mb="2" cb="0"/><line nr="2109" mi="11" ci="0" mb="2" cb="0"/><line nr="2110" mi="6" ci="0" mb="0" cb="0"/><line nr="2114" mi="0" ci="12" mb="0" cb="2"/><line nr="2115" mi="0" ci="3" mb="0" cb="2"/><line nr="2116" mi="0" ci="5" mb="0" cb="0"/><line nr="2117" mi="0" ci="4" mb="0" cb="0"/><line nr="2119" mi="0" ci="4" mb="0" cb="2"/><line nr="2120" mi="0" ci="18" mb="0" cb="2"/><line nr="2121" mi="0" ci="4" mb="1" cb="1"/><line nr="2122" mi="0" ci="16" mb="0" cb="2"/><line nr="2123" mi="0" ci="2" mb="0" cb="0"/><line nr="2127" mi="0" ci="12" mb="0" cb="2"/><line nr="2128" mi="0" ci="3" mb="1" cb="1"/><line nr="2129" mi="5" ci="0" mb="0" cb="0"/><line nr="2130" mi="4" ci="0" mb="0" cb="0"/><line nr="2132" mi="0" ci="4" mb="1" cb="1"/><line nr="2133" mi="17" ci="0" mb="2" cb="0"/><line nr="2134" mi="0" ci="4" mb="1" cb="1"/><line nr="2135" mi="0" ci="17" mb="0" cb="2"/><line nr="2136" mi="0" ci="2" mb="0" cb="0"/><line nr="2140" mi="0" ci="9" mb="0" cb="2"/><line nr="2141" mi="0" ci="9" mb="0" cb="2"/><line nr="2142" mi="0" ci="3" mb="0" cb="2"/><line nr="2143" mi="0" ci="4" mb="0" cb="0"/><line nr="2144" mi="9" ci="3" mb="1" cb="1"/><line nr="2145" mi="0" ci="9" mb="0" cb="0"/><line nr="2146" mi="0" ci="3" mb="0" cb="2"/><line nr="2147" mi="0" ci="4" mb="0" cb="0"/><line nr="2148" mi="0" ci="12" mb="1" cb="1"/><line nr="2149" mi="9" ci="0" mb="0" cb="0"/><line nr="2150" mi="0" ci="3" mb="1" cb="1"/><line nr="2151" mi="5" ci="0" mb="0" cb="0"/><line nr="2152" mi="3" ci="0" mb="0" cb="0"/><line nr="2153" mi="5" ci="0" mb="0" cb="0"/><line nr="2154" mi="0" ci="3" mb="1" cb="1"/><line nr="2155" mi="0" ci="5" mb="0" cb="0"/><line nr="2156" mi="0" ci="3" mb="0" cb="0"/><line nr="2157" mi="0" ci="4" mb="0" cb="0"/><line nr="2159" mi="0" ci="2" mb="0" cb="0"/><line nr="2163" mi="0" ci="3" mb="0" cb="2"/><line nr="2164" mi="0" ci="5" mb="0" cb="0"/><line nr="2165" mi="0" ci="2" mb="0" cb="2"/><line nr="2166" mi="0" ci="4" mb="1" cb="1"/><line nr="2167" mi="4" ci="0" mb="0" cb="0"/><line nr="2168" mi="0" ci="3" mb="0" cb="0"/><line nr="2170" mi="0" ci="3" mb="0" cb="0"/><line nr="2172" mi="0" ci="6" mb="0" cb="2"/><line nr="2173" mi="0" ci="8" mb="0" cb="0"/><line nr="2177" mi="0" ci="5" mb="0" cb="0"/><line nr="2178" mi="0" ci="5" mb="0" cb="2"/><line nr="2179" mi="0" ci="4" mb="1" cb="1"/><line nr="2180" mi="4" ci="0" mb="0" cb="0"/><line nr="2181" mi="0" ci="2" mb="0" cb="0"/><line nr="2185" mi="5" ci="0" mb="0" cb="0"/><line nr="2186" mi="5" ci="0" mb="2" cb="0"/><line nr="2187" mi="4" ci="0" mb="2" cb="0"/><line nr="2188" mi="4" ci="0" mb="0" cb="0"/><line nr="2189" mi="2" ci="0" mb="0" cb="0"/><line nr="2194" mi="0" ci="5" mb="0" cb="0"/><line nr="2195" mi="0" ci="2" mb="0" cb="2"/><line nr="2198" mi="0" ci="15" mb="0" cb="0"/><line nr="2199" mi="0" ci="1" mb="0" cb="0"/><line nr="2202" mi="0" ci="9" mb="0" cb="0"/><line nr="2204" mi="0" ci="4" mb="0" cb="0"/><line nr="2205" mi="1" ci="0" mb="0" cb="0"/><line nr="2206" mi="4" ci="0" mb="0" cb="0"/><line nr="2207" mi="2" ci="0" mb="0" cb="0"/><line nr="2208" mi="0" ci="1" mb="0" cb="0"/><line nr="2209" mi="0" ci="1" mb="0" cb="0"/><line nr="2210" mi="0" ci="2" mb="0" cb="0"/><line nr="2232" mi="3" ci="0" mb="0" cb="0"/><line nr="2234" mi="3" ci="0" mb="2" cb="0"/><line nr="2235" mi="5" ci="0" mb="0" cb="0"/><line nr="2236" mi="4" ci="0" mb="0" cb="0"/><line nr="2237" mi="4" ci="0" mb="0" cb="0"/><line nr="2238" mi="4" ci="0" mb="0" cb="0"/><line nr="2239" mi="1" ci="0" mb="0" cb="0"/><line nr="2240" mi="4" ci="0" mb="0" cb="0"/><line nr="2241" mi="9" ci="0" mb="0" cb="0"/><line nr="2264" mi="0" ci="3" mb="0" cb="2"/><line nr="2265" mi="0" ci="5" mb="0" cb="0"/><line nr="2266" mi="0" ci="2" mb="0" cb="0"/><line nr="2269" mi="0" ci="4" mb="0" cb="0"/><line nr="2270" mi="0" ci="3" mb="0" cb="0"/><line nr="2271" mi="0" ci="5" mb="0" cb="0"/><line nr="2272" mi="0" ci="3" mb="0" cb="0"/><line nr="2274" mi="5" ci="6" mb="0" cb="0"/><line nr="2275" mi="0" ci="2" mb="0" cb="0"/><line nr="2279" mi="0" ci="11" mb="0" cb="2"/><line nr="2280" mi="0" ci="3" mb="0" cb="2"/><line nr="2281" mi="0" ci="9" mb="1" cb="1"/><line nr="2282" mi="7" ci="0" mb="0" cb="0"/><line nr="2284" mi="0" ci="9" mb="0" cb="2"/><line nr="2285" mi="0" ci="7" mb="0" cb="0"/><line nr="2290" mi="0" ci="5" mb="0" cb="0"/><line nr="2291" mi="0" ci="8" mb="1" cb="5"/><line nr="2292" mi="0" ci="4" mb="0" cb="0"/><line nr="2294" mi="0" ci="7" mb="0" cb="0"/><line nr="2296" mi="0" ci="9" mb="0" cb="6"/><line nr="2298" mi="0" ci="4" mb="0" cb="0"/><line nr="2299" mi="0" ci="5" mb="0" cb="0"/><line nr="2300" mi="0" ci="2" mb="0" cb="0"/><line nr="2302" mi="0" ci="2" mb="0" cb="0"/><line nr="2306" mi="0" ci="11" mb="0" cb="2"/><line nr="2307" mi="0" ci="3" mb="1" cb="1"/><line nr="2308" mi="10" ci="0" mb="2" cb="0"/><line nr="2309" mi="6" ci="0" mb="0" cb="0"/><line nr="2311" mi="0" ci="10" mb="0" cb="2"/><line nr="2312" mi="0" ci="6" mb="0" cb="0"/><line nr="2317" mi="0" ci="5" mb="0" cb="0"/><line nr="2318" mi="0" ci="8" mb="1" cb="5"/><line nr="2319" mi="0" ci="4" mb="0" cb="0"/><line nr="2321" mi="0" ci="7" mb="0" cb="0"/><line nr="2322" mi="0" ci="5" mb="0" cb="4"/><line nr="2323" mi="0" ci="4" mb="0" cb="0"/><line nr="2324" mi="0" ci="5" mb="0" cb="0"/><line nr="2326" mi="0" ci="2" mb="0" cb="0"/><line nr="2334" mi="0" ci="11" mb="0" cb="2"/><line nr="2338" mi="0" ci="8" mb="0" cb="0"/><line nr="2343" mi="0" ci="8" mb="0" cb="0"/><line nr="2348" mi="0" ci="4" mb="0" cb="0"/><line nr="2353" mi="0" ci="2" mb="0" cb="0"/><line nr="2354" mi="0" ci="2" mb="0" cb="0"/><line nr="2355" mi="0" ci="20" mb="0" cb="4"/><line nr="2356" mi="0" ci="3" mb="0" cb="0"/><line nr="2357" mi="0" ci="4" mb="0" cb="0"/><line nr="2359" mi="0" ci="2" mb="0" cb="0"/><line nr="2360" mi="0" ci="20" mb="0" cb="4"/><line nr="2361" mi="0" ci="2" mb="0" cb="0"/><line nr="2362" mi="0" ci="15" mb="0" cb="4"/><line nr="2363" mi="0" ci="8" mb="0" cb="2"/><line nr="2364" mi="0" ci="6" mb="0" cb="2"/><line nr="2365" mi="0" ci="6" mb="0" cb="0"/><line nr="2366" mi="0" ci="3" mb="0" cb="0"/><line nr="2367" mi="0" ci="5" mb="0" cb="0"/><line nr="2369" mi="0" ci="9" mb="0" cb="2"/><line nr="2370" mi="0" ci="16" mb="0" cb="4"/><line nr="2371" mi="0" ci="18" mb="0" cb="4"/><line nr="2373" mi="0" ci="6" mb="0" cb="0"/><line nr="2374" mi="0" ci="6" mb="0" cb="0"/><line nr="2377" mi="0" ci="8" mb="0" cb="0"/><line nr="2381" mi="0" ci="1" mb="0" cb="0"/><line nr="2387" mi="3" ci="0" mb="0" cb="0"/><line nr="2391" mi="6" ci="0" mb="0" cb="0"/><line nr="2395" mi="0" ci="4" mb="0" cb="0"/><line nr="2399" mi="0" ci="3" mb="0" cb="0"/><line nr="2400" mi="0" ci="8" mb="0" cb="0"/><line nr="2404" mi="0" ci="3" mb="0" cb="0"/><line nr="2405" mi="7" ci="3" mb="1" cb="1"/><line nr="2406" mi="0" ci="5" mb="0" cb="0"/><line nr="2408" mi="0" ci="10" mb="0" cb="2"/><line nr="2409" mi="1" ci="0" mb="0" cb="0"/><line nr="2410" mi="4" ci="0" mb="0" cb="0"/><line nr="2411" mi="2" ci="0" mb="0" cb="0"/><line nr="2412" mi="0" ci="1" mb="0" cb="0"/><line nr="2413" mi="0" ci="2" mb="0" cb="0"/><line nr="2417" mi="0" ci="3" mb="0" cb="0"/><line nr="2418" mi="7" ci="3" mb="1" cb="1"/><line nr="2419" mi="0" ci="6" mb="0" cb="0"/><line nr="2421" mi="0" ci="10" mb="0" cb="2"/><line nr="2422" mi="1" ci="0" mb="0" cb="0"/><line nr="2423" mi="4" ci="0" mb="0" cb="0"/><line nr="2424" mi="2" ci="0" mb="0" cb="0"/><line nr="2425" mi="0" ci="1" mb="0" cb="0"/><line nr="2426" mi="0" ci="2" mb="0" cb="0"/><line nr="2430" mi="0" ci="4" mb="0" cb="0"/><line nr="2431" mi="0" ci="7" mb="0" cb="0"/><line nr="2432" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1167" covered="5257"/><counter type="BRANCH" missed="177" covered="549"/><counter type="LINE" missed="161" covered="857"/><counter type="COMPLEXITY" missed="156" covered="401"/><counter type="METHOD" missed="16" covered="178"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="Component.java"/><counter type="INSTRUCTION" missed="1450" covered="5765"/><counter type="BRANCH" missed="206" covered="580"/><counter type="LINE" missed="186" covered="992"/><counter type="COMPLEXITY" missed="192" covered="461"/><counter type="METHOD" missed="25" covered="235"/><counter type="CLASS" missed="0" covered="13"/></package><package name="neureka/ndim/iterators/types/complex/legacy"><class name="neureka/ndim/iterators/types/complex/legacy/ComplexLegacyD2CIterator" sourcefilename="ComplexLegacyD2CIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/types/complex/ComplexD2Configuration;)V" line="8"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="()V" line="17"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decrement" desc="()V" line="26"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="34"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)I" line="39"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[I" line="44"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="49"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([I)V" line="55"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/ndim/iterators/types/complex/legacy/ComplexLegacyD3CIterator" sourcefilename="ComplexLegacyD3CIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/types/complex/ComplexD3Configuration;)V" line="8"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="()V" line="19"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decrement" desc="()V" line="32"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="42"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)I" line="47"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[I" line="52"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="57"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([I)V" line="64"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ComplexLegacyD2CIterator.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="12" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="2" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="6" ci="0" mb="0" cb="0"/><line nr="22" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="2" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="8" ci="0" mb="2" cb="0"/><line nr="44" mi="13" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="2" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ComplexLegacyD3CIterator.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="12" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="6" ci="0" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="2" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="2" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="2" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="2" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="9" ci="0" mb="0" cb="0"/><line nr="47" mi="14" ci="0" mb="4" cb="0"/><line nr="52" mi="18" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="2" cb="0"/><line nr="58" mi="7" ci="0" mb="2" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="262" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="neureka/backend/standard/operations/linear"><class name="neureka/backend/standard/operations/linear/XConv" sourcefilename="XConv.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="318"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$22" desc="(Ljava/util/List;)Ljava/lang/String;" line="299"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$21" desc="(Ljava/util/List;)Ljava/lang/String;" line="272"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$20" desc="(Lneureka/backend/api/ExecutionCall;)V" line="238"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$19" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="208"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$18" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="222"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$17" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="213"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="182"><counter type="INSTRUCTION" missed="3" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$15" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="154"><counter type="INSTRUCTION" missed="4" covered="151"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="133"><counter type="INSTRUCTION" missed="8" covered="65"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$13" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="149"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$12" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="148"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="120"><counter type="INSTRUCTION" missed="41" covered="7"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="6" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="117"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="104"><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="(I[D[Lneureka/Tsr;[D[I[I[I)D" line="110"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="107"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="91"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(I[D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="97"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="94"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="52"><counter type="INSTRUCTION" missed="63" covered="60"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="8" covered="15"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;)[Lneureka/Tsr;" line="83"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([Lneureka/Tsr;)[Lneureka/Tsr;" line="80"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="188" covered="793"/><counter type="BRANCH" missed="27" covered="51"/><counter type="LINE" missed="24" covered="133"/><counter type="COMPLEXITY" missed="24" covered="41"/><counter type="METHOD" missed="4" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/linear/XConv$2" sourcefilename="XConv.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/linear/XConv;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="290"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="293"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/linear/XConv$1" sourcefilename="XConv.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/linear/XConv;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="263"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="266"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/linear/MatMul" sourcefilename="MatMul.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="274"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$18" desc="(Lneureka/backend/api/ExecutionCall;)V" line="234"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$17" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="204"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="218"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="209"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$14" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="178"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$13" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="150"><counter type="INSTRUCTION" missed="155" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$12" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="137"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$11" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="145"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="144"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="123"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="120"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="106"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$6" desc="(I[D[Lneureka/Tsr;[D[I[I[I)D" line="112"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$5" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="109"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="92"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="(I[D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="98"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="95"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="53"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="714" covered="0"/><counter type="BRANCH" missed="52" covered="0"/><counter type="LINE" missed="124" covered="0"/><counter type="COMPLEXITY" missed="47" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="MatMul.java"><line nr="28" mi="9" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="2" cb="0"/><line nr="42" mi="7" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="2" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="11" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="2" cb="0"/><line nr="61" mi="21" ci="0" mb="0" cb="0"/><line nr="62" mi="11" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="11" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="2" cb="0"/><line nr="95" mi="14" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="7" ci="0" mb="2" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="2" cb="0"/><line nr="109" mi="21" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="10" ci="0" mb="2" cb="0"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="2" cb="0"/><line nr="124" mi="8" ci="0" mb="2" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="17" ci="0" mb="2" cb="0"/><line nr="127" mi="10" ci="0" mb="4" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="7" ci="0" mb="2" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="6" ci="0" mb="0" cb="0"/><line nr="144" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="14" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="2" cb="0"/><line nr="151" mi="6" ci="0" mb="2" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="19" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="2" cb="0"/><line nr="156" mi="15" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="22" ci="0" mb="4" cb="0"/><line nr="160" mi="7" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="2" cb="0"/><line nr="164" mi="9" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="20" ci="0" mb="2" cb="0"/><line nr="167" mi="13" ci="0" mb="0" cb="0"/><line nr="168" mi="12" ci="0" mb="2" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="2" cb="0"/><line nr="182" mi="12" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="13" ci="0" mb="0" cb="0"/><line nr="200" mi="10" ci="0" mb="0" cb="0"/><line nr="204" mi="7" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="5" ci="0" mb="2" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="8" ci="0" mb="0" cb="0"/><line nr="211" mi="5" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="8" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="8" ci="0" mb="2" cb="0"/><line nr="235" mi="14" ci="0" mb="2" cb="0"/><line nr="236" mi="7" ci="0" mb="0" cb="0"/><line nr="237" mi="6" ci="0" mb="0" cb="0"/><line nr="238" mi="6" ci="0" mb="0" cb="0"/><line nr="239" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="269" mi="1" ci="0" mb="0" cb="0"/><line nr="274" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="714" covered="0"/><counter type="BRANCH" missed="52" covered="0"/><counter type="LINE" missed="124" covered="0"/><counter type="COMPLEXITY" missed="47" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XConv.java"><line nr="22" mi="2" ci="6" mb="1" cb="1"/><line nr="27" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="2"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="1" cb="1"/><line nr="59" mi="2" ci="0" mb="2" cb="0"/><line nr="60" mi="21" ci="0" mb="0" cb="0"/><line nr="61" mi="11" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="11" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="9" mb="0" cb="2"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="25" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="2"/><line nr="83" mi="0" ci="24" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="1" cb="1"/><line nr="94" mi="0" ci="14" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="7" ci="0" mb="2" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="1" cb="1"/><line nr="107" mi="0" ci="21" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="10" ci="0" mb="2" cb="0"/><line nr="111" mi="8" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="1" cb="1"/><line nr="121" mi="8" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="17" ci="0" mb="2" cb="0"/><line nr="124" mi="10" ci="0" mb="4" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="2"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="11" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="4" ci="4" mb="2" cb="2"/><line nr="146" mi="4" ci="4" mb="2" cb="2"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="13" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="25" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="2" ci="3" mb="1" cb="1"/><line nr="155" mi="0" ci="6" mb="0" cb="2"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="19" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="2"/><line nr="160" mi="0" ci="15" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="22" mb="0" cb="4"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="1" cb="1"/><line nr="168" mi="0" ci="9" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="20" mb="0" cb="2"/><line nr="171" mi="0" ci="13" mb="0" cb="0"/><line nr="172" mi="0" ci="12" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="2"/><line nr="186" mi="0" ci="12" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="13" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="208" mi="0" ci="7" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="2"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="8" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="8" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="1" ci="7" mb="1" cb="1"/><line nr="239" mi="4" ci="10" mb="1" cb="1"/><line nr="240" mi="0" ci="7" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="13" mb="0" cb="0"/><line nr="263" mi="0" ci="13" mb="0" cb="0"/><line nr="266" mi="8" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="8" mb="0" cb="2"/><line nr="274" mi="0" ci="7" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="2"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="11" mb="0" cb="0"/><line nr="283" mi="0" ci="13" mb="0" cb="0"/><line nr="290" mi="0" ci="13" mb="0" cb="0"/><line nr="293" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="8" mb="0" cb="2"/><line nr="301" mi="0" ci="7" mb="0" cb="0"/><line nr="302" mi="0" ci="6" mb="0" cb="2"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="11" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="198" covered="819"/><counter type="BRANCH" missed="27" covered="51"/><counter type="LINE" missed="26" covered="135"/><counter type="COMPLEXITY" missed="26" covered="43"/><counter type="METHOD" missed="6" covered="24"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="912" covered="819"/><counter type="BRANCH" missed="79" covered="51"/><counter type="LINE" missed="150" covered="135"/><counter type="COMPLEXITY" missed="73" covered="43"/><counter type="METHOD" missed="27" covered="24"/><counter type="CLASS" missed="1" covered="3"/></package><package name="neureka/backend/api"><class name="neureka/backend/api/ExecutionCall$TensorCondition" sourcefilename="ExecutionCall.java"/><class name="neureka/backend/api/ExecutionCall$Validator" sourcefilename="ExecutionCall.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/api/ExecutionCall;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="estimation" desc="()F" line="115"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="first" desc="(Lneureka/backend/api/ExecutionCall$TensorCondition;)Lneureka/backend/api/ExecutionCall$Validator;" line="119"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="any" desc="(Lneureka/backend/api/ExecutionCall$TensorCondition;)Lneureka/backend/api/ExecutionCall$Validator;" line="125"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="anyNotNull" desc="(Lneureka/backend/api/ExecutionCall$TensorCondition;)Lneureka/backend/api/ExecutionCall$Validator;" line="133"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="all" desc="(Lneureka/backend/api/ExecutionCall$TensorCondition;)Lneureka/backend/api/ExecutionCall$Validator;" line="142"><counter type="INSTRUCTION" missed="1" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allNotNull" desc="(Lneureka/backend/api/ExecutionCall$TensorCondition;)Lneureka/backend/api/ExecutionCall$Validator;" line="150"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="all" desc="(Lneureka/backend/api/ExecutionCall$TensorCompare;)Lneureka/backend/api/ExecutionCall$Validator;" line="159"><counter type="INSTRUCTION" missed="10" covered="30"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forDevice" desc="(Lneureka/backend/api/ExecutionCall$DeviceCondition;)Lneureka/backend/api/ExecutionCall$Validator;" line="171"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forOperation" desc="(Lneureka/backend/api/ExecutionCall$OperationTypeCondition;)Lneureka/backend/api/ExecutionCall$Validator;" line="176"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValid" desc="()Z" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="105" covered="133"/><counter type="BRANCH" missed="24" covered="20"/><counter type="LINE" missed="13" covered="21"/><counter type="COMPLEXITY" missed="18" covered="15"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/api/ExecutionCall$Mutator" sourcefilename="ExecutionCall.java"/><class name="neureka/backend/api/ExecutionCall$OperationTypeCondition" sourcefilename="ExecutionCall.java"/><class name="neureka/backend/api/ExecutionCall" sourcefilename="ExecutionCall.java"><method name="validate" desc="()Lneureka/backend/api/ExecutionCall$Validator;" line="181"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/devices/Device;[Lneureka/Tsr;ILneureka/backend/api/operations/Operation;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/devices/Device;[Lneureka/Tsr;IILneureka/backend/api/operations/Operation;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTensor" desc="(I)Lneureka/Tsr;" line="212"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImplementation" desc="()Lneureka/backend/api/algorithms/Algorithm;" line="216"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowsForward" desc="()Z" line="222"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowsBackward" desc="()Z" line="226"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getADAgentFrom" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="231"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mutateArguments" desc="(Lneureka/backend/api/ExecutionCall$Mutator;)V" line="239"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withNew" desc="([Lneureka/Tsr;)Lneureka/backend/api/ExecutionCall;" line="243"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withNew" desc="(Lneureka/devices/Device;)Lneureka/backend/api/ExecutionCall;" line="247"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAt" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="251"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAt" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="256"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAt" desc="(Ljava/lang/String;Ljava/lang/Object;)Lneureka/backend/api/ExecutionCall;" line="261"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="takeContext" desc="(Ljava/util/Map;)V" line="267"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDevice" desc="()Lneureka/devices/Device;" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDerivativeIndex" desc="()I" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperation" desc="()Lneureka/backend/api/operations/Operation;" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTensors" desc="()[Lneureka/Tsr;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJ" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContext" desc="()Ljava/util/Map;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="86" covered="170"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="7" covered="41"/><counter type="COMPLEXITY" missed="10" covered="21"/><counter type="METHOD" missed="4" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/api/ExecutionCall$DeviceCondition" sourcefilename="ExecutionCall.java"/><class name="neureka/backend/api/ExecutionCall$TensorCompare" sourcefilename="ExecutionCall.java"/><sourcefile name="ExecutionCall.java"><line nr="64" mi="43" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="2"/><line nr="119" mi="0" ci="11" mb="0" cb="2"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="26" ci="0" mb="4" cb="0"/><line nr="127" mi="5" ci="0" mb="2" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="18" ci="0" mb="2" cb="0"/><line nr="135" mi="10" ci="0" mb="4" cb="0"/><line nr="136" mi="5" ci="0" mb="2" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="1" ci="25" mb="1" cb="3"/><line nr="144" mi="0" ci="5" mb="1" cb="1"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="18" mb="0" cb="2"/><line nr="152" mi="0" ci="10" mb="0" cb="4"/><line nr="153" mi="0" ci="5" mb="0" cb="2"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="18" mb="0" cb="2"/><line nr="162" mi="7" ci="2" mb="3" cb="1"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="3" ci="2" mb="1" cb="1"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="9" ci="0" mb="2" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="9" ci="0" mb="2" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="2"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="2"/><line nr="232" mi="0" ci="8" mb="1" cb="1"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="13" mb="0" cb="0"/><line nr="247" mi="13" ci="0" mb="0" cb="0"/><line nr="251" mi="5" ci="0" mb="2" cb="0"/><line nr="252" mi="7" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="2"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="8" mb="1" cb="1"/><line nr="262" mi="0" ci="6" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="10" ci="0" mb="4" cb="0"/><line nr="268" mi="7" ci="0" mb="2" cb="0"/><line nr="269" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="191" covered="303"/><counter type="BRANCH" missed="34" covered="28"/><counter type="LINE" missed="20" covered="62"/><counter type="COMPLEXITY" missed="28" covered="36"/><counter type="METHOD" missed="8" covered="25"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="191" covered="303"/><counter type="BRANCH" missed="34" covered="28"/><counter type="LINE" missed="20" covered="62"/><counter type="COMPLEXITY" missed="28" covered="36"/><counter type="METHOD" missed="8" covered="25"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/ndim/iterators/types"><class name="neureka/ndim/iterators/types/VirtualNDIterator" sourcefilename="VirtualNDIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/types/virtual/VirtualNDConfiguration;)V" line="10"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shape" desc="(I)I" line="16"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shape" desc="()[I" line="21"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="()V" line="27"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decrement" desc="()V" line="32"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)I" line="41"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[I" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="52"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([I)V" line="57"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rank" desc="()I" line="61"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/ndim/iterators/types/DefaultNDIterator" sourcefilename="DefaultNDIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/NDConfiguration;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decrement" desc="()V" line="36"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="40"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[I" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="([I)V" line="60"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="57"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DefaultNDIterator.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="57"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VirtualNDIterator.java"><line nr="10" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="39" covered="57"/><counter type="LINE" missed="16" covered="15"/><counter type="COMPLEXITY" missed="14" covered="8"/><counter type="METHOD" missed="14" covered="8"/><counter type="CLASS" missed="1" covered="1"/></package><package name="neureka/backend/standard/implementations"><class name="neureka/backend/standard/implementations/CLImplementation$Parser" sourcefilename="CLImplementation.java"/><class name="neureka/backend/standard/implementations/HostImplementation" sourcefilename="HostImplementation.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/api/implementations/ImplementationFor;I)V" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/implementations/CLImplementation" sourcefilename="CLImplementation.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/api/implementations/ImplementationFor;I)V" line="23"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/backend/api/implementations/ImplementationFor;ILjava/lang/String;Ljava/lang/String;)V" line="23"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lneureka/backend/api/implementations/ImplementationFor;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lneureka/backend/api/operations/AbstractOperation;)V" line="23"><counter type="INSTRUCTION" missed="7" covered="81"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_getParsedKernelsFromTemplate" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lneureka/backend/api/operations/AbstractOperation;)Ljava/util/Map;" line="112"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSource" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_getParsedKernelsFromTemplate$2" desc="([Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Ljava/lang/String;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/String;)Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="275"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="5" covered="49"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HostImplementation.java"><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CLImplementation.java"><line nr="23" mi="3" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="3" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="2" ci="6" mb="1" cb="1"/><line nr="80" mi="0" ci="4" mb="1" cb="1"/><line nr="81" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="1" cb="1"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="13" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="15" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="0" cb="0"/><line nr="122" mi="0" ci="9" mb="0" cb="0"/><line nr="124" mi="0" ci="14" mb="2" cb="4"/><line nr="125" mi="0" ci="14" mb="1" cb="5"/><line nr="126" mi="0" ci="10" mb="0" cb="2"/><line nr="127" mi="0" ci="12" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="275"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="5" covered="49"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="24" covered="280"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="5" covered="51"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/dtype"><class name="neureka/dtype/AbstractNumericType$Conversion" sourcefilename="AbstractNumericType.java"/><class name="neureka/dtype/DataType" sourcefilename="DataType.java"><method name="_trueType" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="58"><counter type="INSTRUCTION" missed="20" covered="49"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Class;)Lneureka/dtype/DataType;" line="75"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forType" desc="(Ljava/lang/Class;Ljava/util/function/Consumer;)V" line="87"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeClassInstance" desc="()Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="7" covered="29"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeClassImplements" desc="(Ljava/lang/Class;)Z" line="120"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="virtualize" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="127"><counter type="INSTRUCTION" missed="72" covered="57"/><counter type="BRANCH" missed="11" covered="11"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="actualize" desc="(Ljava/lang/Object;I)Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="58" covered="73"/><counter type="BRANCH" missed="11" covered="11"/><counter type="LINE" missed="9" covered="16"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allocate" desc="(I)Ljava/lang/Object;" line="178"><counter type="INSTRUCTION" missed="6" covered="44"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="52"><counter type="INSTRUCTION" missed="9" covered="23"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="52"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTypeClass" desc="()Ljava/lang/Class;" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="224" covered="318"/><counter type="BRANCH" missed="48" covered="56"/><counter type="LINE" missed="23" covered="68"/><counter type="COMPLEXITY" missed="41" covered="25"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/dtype/AbstractNumericType" sourcefilename="AbstractNumericType.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumericTypeTarget" desc="()Ljava/lang/Class;" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeDataTo" desc="(Ljava/io/DataOutput;Ljava/util/Iterator;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/dtype/NumericType$Utility" sourcefilename="NumericType.java"><method name="&lt;init&gt;" desc="()V" line="106"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unsignedByteArrayToInt" desc="([B)I" line="110"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="integerToByteArray" desc="(I)[B" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/dtype/NumericType" sourcefilename="NumericType.java"/><sourcefile name="DataType.java"><line nr="51" mi="12" ci="0" mb="0" cb="0"/><line nr="52" mi="29" ci="23" mb="8" cb="4"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="2"/><line nr="60" mi="0" ci="6" mb="0" cb="2"/><line nr="61" mi="0" ci="6" mb="0" cb="2"/><line nr="62" mi="3" ci="3" mb="1" cb="1"/><line nr="63" mi="3" ci="3" mb="1" cb="1"/><line nr="64" mi="3" ci="3" mb="1" cb="1"/><line nr="65" mi="0" ci="6" mb="0" cb="2"/><line nr="66" mi="3" ci="3" mb="1" cb="1"/><line nr="67" mi="3" ci="3" mb="1" cb="1"/><line nr="68" mi="3" ci="3" mb="1" cb="1"/><line nr="69" mi="2" ci="3" mb="1" cb="1"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="2"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="2" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="2" ci="6" mb="1" cb="1"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="1" cb="1"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="18" mb="0" cb="2"/><line nr="129" mi="0" ci="4" mb="1" cb="1"/><line nr="130" mi="18" ci="0" mb="2" cb="0"/><line nr="131" mi="0" ci="4" mb="1" cb="1"/><line nr="132" mi="18" ci="0" mb="2" cb="0"/><line nr="133" mi="0" ci="4" mb="1" cb="1"/><line nr="134" mi="18" ci="0" mb="2" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="9" ci="9" mb="1" cb="1"/><line nr="138" mi="9" ci="8" mb="1" cb="1"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="2"/><line nr="148" mi="0" ci="7" mb="0" cb="2"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="1" cb="1"/><line nr="152" mi="7" ci="0" mb="2" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="8" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="1" cb="1"/><line nr="156" mi="7" ci="0" mb="2" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="1" cb="1"/><line nr="160" mi="7" ci="0" mb="2" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="8" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="2"/><line nr="164" mi="2" ci="5" mb="1" cb="1"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="8" mb="0" cb="0"/><line nr="168" mi="2" ci="5" mb="1" cb="1"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="2"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="1" cb="1"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="1" cb="3"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="8" mb="2" cb="2"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="1" cb="3"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="224" covered="318"/><counter type="BRANCH" missed="48" covered="56"/><counter type="LINE" missed="23" covered="68"/><counter type="COMPLEXITY" missed="41" covered="25"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NumericType.java"><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="32" ci="0" mb="2" cb="0"/><line nr="111" mi="20" ci="0" mb="2" cb="0"/><line nr="112" mi="10" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractNumericType.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="297" covered="390"/><counter type="BRANCH" missed="54" covered="58"/><counter type="LINE" missed="29" covered="85"/><counter type="COMPLEXITY" missed="47" covered="30"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="1" covered="2"/></package><package name="neureka/devices/opencl"><class name="neureka/devices/opencl/OpenCLDevice$cl_tsr$cl_config" sourcefilename="OpenCLDevice.java"><method name="&lt;init&gt;" desc="()V" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/opencl/OpenCLDevice" sourcefilename="OpenCLDevice.java"><method name="newInstanceOf" desc="(Lneureka/devices/opencl/OpenCLPlatform;Lorg/jocl/cl_device_id;)Lneureka/devices/opencl/OpenCLDevice;" line="83"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/devices/opencl/OpenCLPlatform;Lorg/jocl/cl_device_id;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasAdHocKernel" desc="(Ljava/lang/String;)Z" line="221"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAdHocKernel" desc="(Ljava/lang/String;)Lneureka/devices/opencl/KernelCaller;" line="225"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compileAdHocKernel" desc="(Ljava/lang/String;Ljava/lang/String;)Lneureka/devices/opencl/OpenCLDevice;" line="246"><counter type="INSTRUCTION" missed="17" covered="139"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="25"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTensors" desc="()Ljava/util/Collection;" line="316"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="()V" line="327"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restore" desc="(Lneureka/Tsr;)Lneureka/devices/Device;" line="343"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="store" desc="(Lneureka/Tsr;)Lneureka/devices/Device;" line="360"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="store" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/devices/Device;" line="369"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_add" desc="(Lneureka/Tsr;Lneureka/devices/opencl/OpenCLDevice$cl_tsr;)V" line="378"><counter type="INSTRUCTION" missed="7" covered="182"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Lneureka/Tsr;)Z" line="468"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_store" desc="(Lneureka/Tsr;Lneureka/devices/opencl/OpenCLDevice$cl_tsr;I)V" line="476"><counter type="INSTRUCTION" missed="21" covered="62"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="free" desc="(Lneureka/Tsr;)Lneureka/devices/Device;" line="516"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overwrite64" desc="(Lneureka/Tsr;[D)Lneureka/devices/Device;" line="528"><counter type="INSTRUCTION" missed="42" covered="18"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overwrite32" desc="(Lneureka/Tsr;[F)Lneureka/devices/Device;" line="551"><counter type="INSTRUCTION" missed="6" covered="54"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/devices/Device;" line="575"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value64f" desc="(Lneureka/Tsr;)[D" line="585"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_value64f" desc="(Lneureka/devices/opencl/OpenCLDevice$cl_tsr;II)[D" line="591"><counter type="INSTRUCTION" missed="27" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value32f" desc="(Lneureka/Tsr;)[F" line="611"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_value32f" desc="(Lneureka/devices/opencl/OpenCLDevice$cl_tsr;II)[F" line="616"><counter type="INSTRUCTION" missed="7" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value64f" desc="(Lneureka/Tsr;I)D" line="636"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value32f" desc="(Lneureka/Tsr;I)F" line="642"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKernel" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/devices/opencl/KernelCaller;" line="647"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execute" desc="([Lneureka/Tsr;ILneureka/backend/api/operations/Operation;)V" line="655"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="698"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vendor" desc="()Ljava/lang/String;" line="702"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="version" desc="()Ljava/lang/String;" line="706"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="()Ljava/lang/String;" line="710"><counter type="INSTRUCTION" missed="20" covered="19"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxComputeUnits" desc="()I" line="723"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWorkItemSimensions" desc="()J" line="727"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWorkItemSizes" desc="()[J" line="731"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWorkGroupSize" desc="()J" line="735"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxClockFrequenzy" desc="()J" line="739"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxAddressBits" desc="()I" line="743"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxMemAllocSize" desc="()J" line="747"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalMemSize" desc="()J" line="751"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorCorrectionSupport" desc="()I" line="755"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="localMemType" desc="()I" line="759"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="localMemSize" desc="()J" line="763"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxConstantBufferSize" desc="()J" line="767"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxConstantBufferSizeKB" desc="()J" line="771"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="imageSupport" desc="()I" line="785"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxReadImageArgs" desc="()I" line="789"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxWriteImageArgs" desc="()I" line="793"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleFPConfig" desc="()J" line="797"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="image2DMaxWidth" desc="()J" line="801"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="image2DMaxHeight" desc="()J" line="805"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="image3DMaxWidth" desc="()J" line="809"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="image3DMaxHeight" desc="()J" line="813"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="image3DMaxDepth" desc="()J" line="817"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefVecWidthChar" desc="()I" line="821"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefVecWidthShort" desc="()I" line="825"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefVecWidthInt" desc="()I" line="829"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefVecWidthLong" desc="()I" line="833"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefVecWidthFloat" desc="()I" line="837"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefVecWidthDouble" desc="()I" line="841"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeviceId" desc="()Lorg/jocl/cl_device_id;" line="169"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlatform" desc="()Lneureka/devices/opencl/OpenCLPlatform;" line="179"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_add$5" desc="(Lorg/jocl/cl_mem;)V" line="420"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_add$4" desc="(Lorg/jocl/cl_event;Lorg/jocl/cl_mem;)V" line="389"><counter type="INSTRUCTION" missed="9" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTensors$3" desc="(Ljava/util/Collection;Ljava/util/Collection;)V" line="318"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTensors$2" desc="(Ljava/util/Collection;Lneureka/Tsr;)V" line="318"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$compileAdHocKernel$1" desc="(Lorg/jocl/cl_kernel;Lorg/jocl/cl_program;)V" line="301"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="()V" line="208"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="240" covered="1033"/><counter type="BRANCH" missed="25" covered="39"/><counter type="LINE" missed="38" covered="188"/><counter type="COMPLEXITY" missed="35" covered="63"/><counter type="METHOD" missed="14" covered="52"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/opencl/OpenCLDevice$DeviceQuery" sourcefilename="OpenCLDevice.java"><method name="&lt;init&gt;" desc="()V" line="844"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInt" desc="(Lorg/jocl/cl_device_id;I)I" line="854"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInts" desc="(Lorg/jocl/cl_device_id;II)[I" line="866"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLong" desc="(Lorg/jocl/cl_device_id;I)J" line="879"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLongs" desc="(Lorg/jocl/cl_device_id;II)[J" line="891"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_device_id;I)Ljava/lang/String;" line="905"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getString" desc="(Lorg/jocl/cl_platform_id;I)Ljava/lang/String;" line="925"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="(Lorg/jocl/cl_device_id;I)J" line="944"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSizes" desc="(Lorg/jocl/cl_device_id;II)[J" line="958"><counter type="INSTRUCTION" missed="17" covered="42"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="131"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="8" covered="22"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/opencl/OpenCLDevice$cl_tsr" sourcefilename="OpenCLDevice.java"><method name="&lt;init&gt;" desc="()V" line="101"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="138"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/opencl/OpenCLDevice$cl_tsr$cl_value" sourcefilename="OpenCLDevice.java"><method name="&lt;init&gt;" desc="()V" line="112"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/opencl/OpenCLPlatform" sourcefilename="OpenCLPlatform.java"><method name="&lt;init&gt;" desc="(Lorg/jocl/cl_platform_id;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recompile" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_compile" desc="([Lorg/jocl/cl_device_id;)V" line="72"><counter type="INSTRUCTION" missed="18" covered="320"/><counter type="BRANCH" missed="3" covered="43"/><counter type="LINE" missed="1" covered="45"/><counter type="COMPLEXITY" missed="3" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDevices" desc="()Ljava/util/List;" line="169"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Lorg/jocl/cl_device_id;)Z" line="175"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/jocl/cl_device_id;)Lneureka/devices/opencl/OpenCLDevice;" line="179"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lorg/jocl/cl_device_id;Lneureka/devices/opencl/OpenCLDevice;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKernels" desc="()Ljava/util/Map;" line="187"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PLATFORMS" desc="()Ljava/util/List;" line="192"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPid" desc="()Lorg/jocl/cl_platform_id;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/jocl/cl_context;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDoingLegacyIndexing" desc="()Z" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getDevices$1" desc="(Ljava/util/List;Lorg/jocl/cl_device_id;Lneureka/devices/opencl/OpenCLDevice;)V" line="170"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_compile$0" desc="(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/String;Ljava/lang/String;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="495"/><counter type="BRANCH" missed="3" covered="47"/><counter type="LINE" missed="2" covered="81"/><counter type="COMPLEXITY" missed="4" covered="35"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/opencl/OpenCLDevice$cl_ad_hoc" sourcefilename="OpenCLDevice.java"/><class name="neureka/devices/opencl/OpenCLPlatform$Setup" sourcefilename="OpenCLPlatform.java"><method name="findAllPlatforms" desc="()Ljava/util/List;" line="202"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="197"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/opencl/KernelCaller" sourcefilename="KernelCaller.java"><method name="&lt;init&gt;" desc="(Lorg/jocl/cl_kernel;Lorg/jocl/cl_command_queue;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pass" desc="(Lneureka/Tsr;)Lneureka/devices/opencl/KernelCaller;" line="44"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="passRaw" desc="(Lneureka/Tsr;)Lneureka/devices/opencl/KernelCaller;" line="59"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pass" desc="(I)Lneureka/devices/opencl/KernelCaller;" line="71"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pass" desc="(F)Lneureka/devices/opencl/KernelCaller;" line="82"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(I)V" line="93"><counter type="INSTRUCTION" missed="13" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([J[J)V" line="112"><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_releaseEvents" desc="([Lneureka/Tsr;)V" line="132"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_getWaitList" desc="([Lneureka/Tsr;)[Lorg/jocl/cl_event;" line="142"><counter type="INSTRUCTION" missed="8" covered="35"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="79" covered="247"/><counter type="BRANCH" missed="13" covered="9"/><counter type="LINE" missed="10" covered="37"/><counter type="COMPLEXITY" missed="11" covered="10"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KernelCaller.java"><line nr="18" mi="2" ci="6" mb="1" cb="1"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="15" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="15" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="15" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="14" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="14" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="1" cb="1"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="19" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="1" cb="1"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="8" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="9" mb="3" cb="3"/><line nr="118" mi="0" ci="14" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="16" ci="0" mb="2" cb="0"/><line nr="133" mi="7" ci="0" mb="2" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="7" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="16" mb="0" cb="2"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="4" ci="2" mb="3" cb="1"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="247"/><counter type="BRANCH" missed="13" covered="9"/><counter type="LINE" missed="10" covered="37"/><counter type="COMPLEXITY" missed="11" covered="10"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OpenCLPlatform.java"><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="16" mb="0" cb="2"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="16" mb="0" cb="2"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="27" mb="0" cb="0"/><line nr="82" mi="0" ci="16" mb="0" cb="2"/><line nr="83" mi="0" ci="14" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="12" mb="0" cb="0"/><line nr="100" mi="0" ci="9" mb="0" cb="0"/><line nr="101" mi="10" ci="2" mb="1" cb="1"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="11" mb="0" cb="2"/><line nr="114" mi="0" ci="8" mb="0" cb="4"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="4"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="4"/><line nr="119" mi="0" ci="9" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="4"/><line nr="121" mi="0" ci="9" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="4"/><line nr="123" mi="0" ci="9" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="2"/><line nr="126" mi="0" ci="5" mb="1" cb="1"/><line nr="128" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="12" mb="0" cb="4"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="9" mb="0" cb="0"/><line nr="163" mi="0" ci="10" mb="0" cb="2"/><line nr="164" mi="0" ci="11" mb="1" cb="1"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="10" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="24" mb="0" cb="2"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="547"/><counter type="BRANCH" missed="3" covered="49"/><counter type="LINE" missed="2" covered="89"/><counter type="COMPLEXITY" missed="4" covered="38"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="OpenCLDevice.java"><line nr="78" mi="0" ci="43" mb="0" cb="0"/><line nr="83" mi="0" ci="12" mb="1" cb="1"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="5" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="10" mb="1" cb="1"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="2"/><line nr="247" mi="0" ci="6" mb="0" cb="0"/><line nr="248" mi="0" ci="9" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="1" cb="1"/><line nr="252" mi="1" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="11" mb="0" cb="0"/><line nr="268" mi="0" ci="14" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="16" mb="2" cb="2"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="14" ci="0" mb="0" cb="0"/><line nr="289" mi="2" ci="0" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="10" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="16" mb="1" cb="1"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="5" ci="0" mb="0" cb="0"/><line nr="328" mi="4" ci="0" mb="0" cb="0"/><line nr="329" mi="1" ci="0" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="2"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="2"/><line nr="350" mi="0" ci="9" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="6" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="10" mb="0" cb="2"/><line nr="362" mi="0" ci="8" mb="0" cb="2"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="369" mi="0" ci="8" mb="0" cb="2"/><line nr="370" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="2" mb="0" cb="2"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="383" mi="0" ci="5" mb="0" cb="0"/><line nr="384" mi="7" ci="7" mb="1" cb="3"/><line nr="386" mi="0" ci="4" mb="0" cb="0"/><line nr="387" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="0" ci="7" mb="0" cb="0"/><line nr="389" mi="9" ci="2" mb="1" cb="1"/><line nr="390" mi="0" ci="3" mb="0" cb="0"/><line nr="391" mi="0" ci="1" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="0" ci="4" mb="0" cb="0"/><line nr="395" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="6" mb="0" cb="0"/><line nr="402" mi="0" ci="9" mb="0" cb="0"/><line nr="407" mi="0" ci="15" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="419" mi="0" ci="4" mb="0" cb="0"/><line nr="420" mi="0" ci="10" mb="0" cb="0"/><line nr="423" mi="0" ci="15" mb="0" cb="0"/><line nr="425" mi="0" ci="11" mb="0" cb="0"/><line nr="435" mi="0" ci="5" mb="0" cb="0"/><line nr="437" mi="0" ci="4" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="440" mi="0" ci="3" mb="0" cb="2"/><line nr="441" mi="0" ci="4" mb="0" cb="0"/><line nr="442" mi="0" ci="4" mb="0" cb="0"/><line nr="443" mi="0" ci="19" mb="0" cb="0"/><line nr="446" mi="0" ci="4" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="0"/><line nr="451" mi="0" ci="1" mb="0" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="0"/><line nr="454" mi="0" ci="4" mb="0" cb="0"/><line nr="455" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="5" mb="0" cb="0"/><line nr="476" mi="0" ci="3" mb="1" cb="1"/><line nr="477" mi="0" ci="3" mb="0" cb="0"/><line nr="478" mi="4" ci="4" mb="1" cb="1"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="1" mb="0" cb="0"/><line nr="482" mi="3" ci="0" mb="0" cb="0"/><line nr="483" mi="8" ci="0" mb="2" cb="0"/><line nr="484" mi="3" ci="0" mb="0" cb="0"/><line nr="485" mi="3" ci="0" mb="0" cb="0"/><line nr="488" mi="0" ci="4" mb="0" cb="0"/><line nr="490" mi="0" ci="4" mb="0" cb="0"/><line nr="491" mi="0" ci="11" mb="0" cb="0"/><line nr="497" mi="0" ci="4" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="2"/><line nr="499" mi="0" ci="18" mb="0" cb="0"/><line nr="511" mi="0" ci="1" mb="0" cb="0"/><line nr="516" mi="0" ci="5" mb="0" cb="0"/><line nr="517" mi="2" ci="2" mb="1" cb="1"/><line nr="518" mi="0" ci="5" mb="0" cb="0"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="520" mi="0" ci="4" mb="0" cb="0"/><line nr="521" mi="0" ci="2" mb="0" cb="0"/><line nr="528" mi="0" ci="5" mb="0" cb="0"/><line nr="529" mi="0" ci="11" mb="1" cb="1"/><line nr="531" mi="15" ci="0" mb="2" cb="0"/><line nr="532" mi="6" ci="0" mb="0" cb="0"/><line nr="533" mi="15" ci="0" mb="0" cb="0"/><line nr="539" mi="6" ci="0" mb="0" cb="0"/><line nr="545" mi="0" ci="2" mb="0" cb="0"/><line nr="551" mi="0" ci="5" mb="0" cb="0"/><line nr="552" mi="0" ci="4" mb="1" cb="1"/><line nr="553" mi="0" ci="15" mb="0" cb="2"/><line nr="554" mi="0" ci="6" mb="0" cb="0"/><line nr="555" mi="0" ci="16" mb="0" cb="0"/><line nr="561" mi="0" ci="6" mb="0" cb="0"/><line nr="567" mi="6" ci="0" mb="0" cb="0"/><line nr="569" mi="0" ci="2" mb="0" cb="0"/><line nr="575" mi="0" ci="5" mb="0" cb="0"/><line nr="576" mi="0" ci="4" mb="0" cb="0"/><line nr="577" mi="0" ci="4" mb="0" cb="0"/><line nr="578" mi="0" ci="5" mb="0" cb="0"/><line nr="579" mi="0" ci="5" mb="0" cb="0"/><line nr="580" mi="0" ci="2" mb="0" cb="0"/><line nr="585" mi="0" ci="5" mb="0" cb="0"/><line nr="586" mi="0" ci="8" mb="0" cb="0"/><line nr="591" mi="0" ci="11" mb="1" cb="1"/><line nr="593" mi="3" ci="0" mb="0" cb="0"/><line nr="594" mi="18" ci="0" mb="0" cb="0"/><line nr="600" mi="4" ci="0" mb="0" cb="0"/><line nr="605" mi="2" ci="0" mb="0" cb="0"/><line nr="611" mi="0" ci="5" mb="0" cb="0"/><line nr="612" mi="0" ci="8" mb="0" cb="0"/><line nr="616" mi="0" ci="4" mb="1" cb="1"/><line nr="617" mi="0" ci="3" mb="0" cb="0"/><line nr="618" mi="0" ci="18" mb="0" cb="0"/><line nr="624" mi="0" ci="4" mb="0" cb="0"/><line nr="629" mi="0" ci="2" mb="0" cb="0"/><line nr="631" mi="7" ci="0" mb="0" cb="0"/><line nr="636" mi="0" ci="5" mb="0" cb="0"/><line nr="637" mi="0" ci="8" mb="0" cb="0"/><line nr="642" mi="0" ci="5" mb="0" cb="0"/><line nr="643" mi="0" ci="8" mb="0" cb="0"/><line nr="647" mi="0" ci="15" mb="0" cb="0"/><line nr="648" mi="0" ci="7" mb="0" cb="0"/><line nr="649" mi="0" ci="7" mb="0" cb="0"/><line nr="655" mi="0" ci="8" mb="0" cb="0"/><line nr="662" mi="0" ci="6" mb="0" cb="0"/><line nr="663" mi="0" ci="6" mb="0" cb="0"/><line nr="664" mi="0" ci="1" mb="0" cb="0"/><line nr="698" mi="0" ci="5" mb="0" cb="0"/><line nr="702" mi="0" ci="5" mb="0" cb="0"/><line nr="706" mi="0" ci="5" mb="0" cb="0"/><line nr="710" mi="0" ci="5" mb="0" cb="0"/><line nr="711" mi="0" ci="6" mb="1" cb="1"/><line nr="712" mi="2" ci="0" mb="0" cb="0"/><line nr="713" mi="0" ci="6" mb="1" cb="1"/><line nr="714" mi="0" ci="2" mb="0" cb="0"/><line nr="715" mi="6" ci="0" mb="2" cb="0"/><line nr="716" mi="2" ci="0" mb="0" cb="0"/><line nr="717" mi="6" ci="0" mb="2" cb="0"/><line nr="718" mi="2" ci="0" mb="0" cb="0"/><line nr="719" mi="2" ci="0" mb="0" cb="0"/><line nr="723" mi="5" ci="0" mb="0" cb="0"/><line nr="727" mi="5" ci="0" mb="0" cb="0"/><line nr="731" mi="6" ci="0" mb="0" cb="0"/><line nr="735" mi="0" ci="5" mb="0" cb="0"/><line nr="739" mi="0" ci="5" mb="0" cb="0"/><line nr="743" mi="5" ci="0" mb="0" cb="0"/><line nr="747" mi="5" ci="0" mb="0" cb="0"/><line nr="751" mi="0" ci="5" mb="0" cb="0"/><line nr="755" mi="5" ci="0" mb="0" cb="0"/><line nr="759" mi="5" ci="0" mb="0" cb="0"/><line nr="763" mi="5" ci="0" mb="0" cb="0"/><line nr="767" mi="0" ci="5" mb="0" cb="0"/><line nr="771" mi="9" ci="0" mb="0" cb="0"/><line nr="785" mi="5" ci="0" mb="0" cb="0"/><line nr="789" mi="5" ci="0" mb="0" cb="0"/><line nr="793" mi="0" ci="5" mb="0" cb="0"/><line nr="797" mi="5" ci="0" mb="0" cb="0"/><line nr="801" mi="0" ci="5" mb="0" cb="0"/><line nr="805" mi="0" ci="5" mb="0" cb="0"/><line nr="809" mi="0" ci="5" mb="0" cb="0"/><line nr="813" mi="0" ci="5" mb="0" cb="0"/><line nr="817" mi="0" ci="5" mb="0" cb="0"/><line nr="821" mi="0" ci="5" mb="0" cb="0"/><line nr="825" mi="0" ci="5" mb="0" cb="0"/><line nr="829" mi="0" ci="5" mb="0" cb="0"/><line nr="833" mi="0" ci="5" mb="0" cb="0"/><line nr="837" mi="0" ci="5" mb="0" cb="0"/><line nr="841" mi="0" ci="5" mb="0" cb="0"/><line nr="844" mi="3" ci="0" mb="0" cb="0"/><line nr="854" mi="0" ci="7" mb="0" cb="0"/><line nr="866" mi="0" ci="3" mb="0" cb="0"/><line nr="867" mi="0" ci="11" mb="0" cb="0"/><line nr="868" mi="0" ci="2" mb="0" cb="0"/><line nr="879" mi="0" ci="7" mb="0" cb="0"/><line nr="891" mi="0" ci="3" mb="0" cb="0"/><line nr="892" mi="0" ci="11" mb="0" cb="0"/><line nr="893" mi="0" ci="2" mb="0" cb="0"/><line nr="905" mi="0" ci="3" mb="0" cb="0"/><line nr="906" mi="0" ci="7" mb="0" cb="0"/><line nr="909" mi="0" ci="6" mb="0" cb="0"/><line nr="910" mi="0" ci="10" mb="0" cb="0"/><line nr="913" mi="0" ci="10" mb="0" cb="0"/><line nr="925" mi="3" ci="0" mb="0" cb="0"/><line nr="926" mi="7" ci="0" mb="0" cb="0"/><line nr="929" mi="6" ci="0" mb="0" cb="0"/><line nr="930" mi="10" ci="0" mb="0" cb="0"/><line nr="933" mi="10" ci="0" mb="0" cb="0"/><line nr="944" mi="0" ci="7" mb="0" cb="0"/><line nr="958" mi="0" ci="7" mb="0" cb="0"/><line nr="959" mi="0" ci="10" mb="0" cb="0"/><line nr="963" mi="0" ci="2" mb="0" cb="0"/><line nr="966" mi="0" ci="3" mb="0" cb="0"/><line nr="967" mi="0" ci="3" mb="1" cb="1"/><line nr="968" mi="8" ci="0" mb="2" cb="0"/><line nr="969" mi="9" ci="0" mb="0" cb="0"/><line nr="972" mi="0" ci="7" mb="0" cb="2"/><line nr="973" mi="0" ci="8" mb="0" cb="0"/><line nr="976" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="296" covered="1185"/><counter type="BRANCH" missed="28" covered="42"/><counter type="LINE" missed="46" covered="217"/><counter type="COMPLEXITY" missed="39" covered="75"/><counter type="METHOD" missed="16" covered="63"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><counter type="INSTRUCTION" missed="396" covered="1979"/><counter type="BRANCH" missed="44" covered="100"/><counter type="LINE" missed="58" covered="343"/><counter type="COMPLEXITY" missed="54" covered="123"/><counter type="METHOD" missed="18" covered="87"/><counter type="CLASS" missed="0" covered="8"/></package><package name="neureka/utility"><class name="neureka/utility/CustomCleaner" sourcefilename="CustomCleaner.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Ljava/lang/Object;Ljava/lang/Runnable;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="40"><counter type="INSTRUCTION" missed="4" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="77"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/utility/NeurekaCleaner" sourcefilename="NeurekaCleaner.java"/><class name="neureka/utility/TsrAsString$Util" sourcefilename="TsrAsString.java"><method name="&lt;init&gt;" desc="()V" line="286"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indent" desc="(I)Ljava/lang/String;" line="290"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pad" desc="(ILjava/lang/String;)Ljava/lang/String;" line="294"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pad" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="298"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="32"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/utility/TsrAsString$Should" sourcefilename="TsrAsString.java"><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/utility/TsrAsString" sourcefilename="TsrAsString.java"><method name="&lt;init&gt;" desc="(Lneureka/Tsr;Ljava/util/Map;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/Tsr;Ljava/lang/String;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="(Lneureka/Tsr;Ljava/util/Map;)V" line="62"><counter type="INSTRUCTION" missed="7" covered="99"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_defaults" desc="(Ljava/lang/String;)Ljava/util/Map;" line="94"><counter type="INSTRUCTION" missed="1" covered="85"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_createValStringifier" desc="()Ljava/util/function/IntFunction;" line="107"><counter type="INSTRUCTION" missed="10" covered="51"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="147"><counter type="INSTRUCTION" missed="3" covered="281"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_stringified" desc="()Ljava/lang/String;" line="211"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_stringified" desc="(I[II)Ljava/lang/String;" line="233"><counter type="INSTRUCTION" missed="17" covered="66"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_format" desc="([I[II)Ljava/lang/StringBuilder;" line="252"><counter type="INSTRUCTION" missed="18" covered="128"/><counter type="BRANCH" missed="9" covered="17"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_strShape" desc="()Ljava/lang/StringBuilder;" line="275"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPadding" desc="()I" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShortage" desc="()I" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHasGradient" desc="()Z" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCompact" desc="()Z" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFormatted" desc="()Z" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHasValue" desc="()Z" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHasShape" desc="()Z" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHasRecursiveGraph" desc="()Z" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHasDerivatives" desc="()Z" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toString$8" desc="(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/String;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="200"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$7" desc="(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="178"><counter type="INSTRUCTION" missed="16" covered="60"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_createValStringifier$6" desc="(Ljava/util/function/IntFunction;II)Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_createValStringifier$5" desc="(Ljava/lang/Object;I)Ljava/lang/String;" line="132"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_createValStringifier$4" desc="(ZI)Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_createValStringifier$3" desc="(ZLjava/lang/Object;I)Ljava/lang/String;" line="124"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_createValStringifier$2" desc="(ZLjava/lang/Object;I)Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_createValStringifier$1" desc="(ZLjava/lang/Object;I)Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$_createValStringifier$0" desc="(ZLjava/lang/Object;I)Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="139" covered="1114"/><counter type="BRANCH" missed="37" covered="123"/><counter type="LINE" missed="10" covered="165"/><counter type="COMPLEXITY" missed="45" covered="63"/><counter type="METHOD" missed="11" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/utility/SettingsLoader" sourcefilename="SettingsLoader.java"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryGroovyClosureOn" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryGroovyScriptsOn" desc="(Lneureka/Neureka;)V" line="67"><counter type="INSTRUCTION" missed="17" covered="44"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="53"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/utility/DataConverter$Utility" sourcefilename="DataConverter.java"><method name="&lt;init&gt;" desc="()V" line="198"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newSeededDoubleArray" desc="(Ljava/lang/String;I)[D" line="202"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newSeededDoubleArray" desc="(JI)[D" line="206"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="seededDoubleArray" desc="([DLjava/lang/String;)[D" line="210"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="seededDoubleArray" desc="([DJ)[D" line="214"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newSeededFloatArray" desc="(Ljava/lang/String;I)[F" line="221"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newSeededFloatArray" desc="(JI)[F" line="225"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="seededFloatArray" desc="([FLjava/lang/String;)[F" line="229"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="seededFloatArray" desc="([FJ)[F" line="233"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_longStringHash" desc="(Ljava/lang/String;)J" line="241"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byteToShort" desc="([B)[S" line="249"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="byteToBigInteger" desc="([B)[Ljava/math/BigInteger;" line="256"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleToFloat" desc="([D)[F" line="263"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleToByte" desc="([D)[B" line="270"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleToShort" desc="([D)[S" line="277"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleToLong" desc="([D)[J" line="284"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatToDouble" desc="([F)[D" line="291"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatToByte" desc="([F)[B" line="298"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatToShort" desc="([F)[S" line="305"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatToLong" desc="([F)[J" line="312"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shortToDouble" desc="([S)[D" line="319"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byteToDouble" desc="([B)[D" line="326"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byteToFloat" desc="([B)[F" line="333"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shortToFloat" desc="([S)[F" line="340"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byteToInt" desc="([B)[I" line="347"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shortToInt" desc="([S)[I" line="354"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shortToByte" desc="([S)[B" line="361"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byteToLong" desc="([B)[J" line="368"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shortToLong" desc="([S)[J" line="375"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shortToBigInteger" desc="([S)[Ljava/math/BigInteger;" line="382"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intToFloat" desc="([I)[F" line="389"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatToInt" desc="([F)[I" line="396"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatToBigInteger" desc="([F)[Ljava/math/BigInteger;" line="403"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleToInt" desc="([D)[I" line="410"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleToBigInteger" desc="([D)[Ljava/math/BigInteger;" line="417"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intToDouble" desc="([I)[D" line="424"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intToLong" desc="([I)[J" line="431"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intToShort" desc="([I)[S" line="438"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intToByte" desc="([I)[B" line="445"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intToBigInteger" desc="([I)[Ljava/math/BigInteger;" line="452"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longToByte" desc="([J)[B" line="459"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longToShort" desc="([J)[S" line="466"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longToInt" desc="([J)[I" line="473"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longToFloat" desc="([J)[F" line="480"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longToDouble" desc="([J)[D" line="487"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longToBigInteger" desc="([J)[Ljava/math/BigInteger;" line="494"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="210" covered="801"/><counter type="BRANCH" missed="50" covered="100"/><counter type="LINE" missed="25" covered="138"/><counter type="COMPLEXITY" missed="51" covered="70"/><counter type="METHOD" missed="10" covered="36"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/utility/DataConverter" sourcefilename="DataConverter.java"><method name="instance" desc="()Lneureka/utility/DataConverter;" line="89"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="98"><counter type="INSTRUCTION" missed="0" covered="213"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_set" desc="(Ljava/lang/Class;Ljava/lang/Class;Lneureka/utility/DataConverter$Conversion;)V" line="163"><counter type="INSTRUCTION" missed="5" covered="35"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;" line="187"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(Ljava/util/List;)[J" line="143"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="(Ljava/lang/Object;)J" line="143"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="(Ljava/util/List;)[D" line="142"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="(Ljava/lang/Object;)D" line="142"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Ljava/util/List;)[I" line="141"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/lang/Object;)I" line="141"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="35" covered="280"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="59"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/utility/CustomCleaner$ReferenceWithCleanup" sourcefilename="CustomCleaner.java"><method name="&lt;init&gt;" desc="(Lneureka/utility/CustomCleaner;Ljava/lang/Object;Ljava/lang/Runnable;Ljava/lang/ref/ReferenceQueue;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanup" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/utility/DataConverter$Conversion" sourcefilename="DataConverter.java"/><sourcefile name="DataConverter.java"><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="10" ci="5" mb="0" cb="0"/><line nr="142" mi="10" ci="5" mb="0" cb="0"/><line nr="143" mi="10" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="2"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="5" ci="2" mb="1" cb="1"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="2"/><line nr="188" mi="0" ci="6" mb="0" cb="2"/><line nr="189" mi="0" ci="11" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="13" mb="0" cb="2"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="14" ci="0" mb="2" cb="0"/><line nr="236" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="16" mb="0" cb="2"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="4" ci="0" mb="2" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="15" ci="0" mb="2" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="4" ci="0" mb="2" cb="0"/><line nr="257" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="16" ci="0" mb="2" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="2" mb="1" cb="1"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="15" mb="0" cb="2"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="2" ci="2" mb="1" cb="1"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="16" mb="0" cb="2"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="2" ci="2" mb="1" cb="1"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="16" mb="0" cb="2"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="2" ci="2" mb="1" cb="1"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="15" mb="0" cb="2"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="2" ci="2" mb="1" cb="1"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="15" mb="0" cb="2"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="2" ci="2" mb="1" cb="1"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="16" mb="0" cb="2"/><line nr="301" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="2" ci="2" mb="1" cb="1"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="16" mb="0" cb="2"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="2" ci="2" mb="1" cb="1"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="15" mb="0" cb="2"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="2" ci="2" mb="1" cb="1"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="0" ci="15" mb="0" cb="2"/><line nr="322" mi="0" ci="2" mb="0" cb="0"/><line nr="326" mi="2" ci="2" mb="1" cb="1"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="15" mb="0" cb="2"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="2" ci="2" mb="1" cb="1"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="15" mb="0" cb="2"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="2" ci="2" mb="1" cb="1"/><line nr="341" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="15" mb="0" cb="2"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="4" ci="0" mb="2" cb="0"/><line nr="348" mi="4" ci="0" mb="0" cb="0"/><line nr="349" mi="14" ci="0" mb="2" cb="0"/><line nr="350" mi="2" ci="0" mb="0" cb="0"/><line nr="354" mi="2" ci="2" mb="1" cb="1"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="14" mb="0" cb="2"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="2" ci="2" mb="1" cb="1"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="15" mb="0" cb="2"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="4" ci="0" mb="2" cb="0"/><line nr="369" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="15" ci="0" mb="2" cb="0"/><line nr="371" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="2" ci="2" mb="1" cb="1"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="377" mi="0" ci="15" mb="0" cb="2"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="382" mi="2" ci="2" mb="1" cb="1"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="384" mi="0" ci="16" mb="0" cb="2"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="2" ci="2" mb="1" cb="1"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="15" mb="0" cb="2"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><line nr="396" mi="2" ci="2" mb="1" cb="1"/><line nr="397" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="15" mb="0" cb="2"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="403" mi="2" ci="2" mb="1" cb="1"/><line nr="404" mi="0" ci="4" mb="0" cb="0"/><line nr="405" mi="0" ci="17" mb="0" cb="2"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="2" ci="2" mb="1" cb="1"/><line nr="411" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="0" ci="15" mb="0" cb="2"/><line nr="413" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="2" ci="2" mb="1" cb="1"/><line nr="418" mi="0" ci="4" mb="0" cb="0"/><line nr="419" mi="0" ci="16" mb="0" cb="2"/><line nr="420" mi="0" ci="2" mb="0" cb="0"/><line nr="424" mi="2" ci="2" mb="1" cb="1"/><line nr="425" mi="0" ci="4" mb="0" cb="0"/><line nr="426" mi="0" ci="15" mb="0" cb="2"/><line nr="427" mi="0" ci="2" mb="0" cb="0"/><line nr="431" mi="2" ci="2" mb="1" cb="1"/><line nr="432" mi="0" ci="4" mb="0" cb="0"/><line nr="433" mi="0" ci="15" mb="0" cb="2"/><line nr="434" mi="0" ci="2" mb="0" cb="0"/><line nr="438" mi="2" ci="2" mb="1" cb="1"/><line nr="439" mi="0" ci="4" mb="0" cb="0"/><line nr="440" mi="0" ci="15" mb="0" cb="2"/><line nr="441" mi="0" ci="2" mb="0" cb="0"/><line nr="445" mi="2" ci="2" mb="1" cb="1"/><line nr="446" mi="0" ci="4" mb="0" cb="0"/><line nr="447" mi="0" ci="15" mb="0" cb="2"/><line nr="448" mi="0" ci="2" mb="0" cb="0"/><line nr="452" mi="2" ci="2" mb="1" cb="1"/><line nr="453" mi="0" ci="4" mb="0" cb="0"/><line nr="454" mi="0" ci="16" mb="0" cb="2"/><line nr="455" mi="0" ci="2" mb="0" cb="0"/><line nr="459" mi="2" ci="2" mb="1" cb="1"/><line nr="460" mi="0" ci="4" mb="0" cb="0"/><line nr="461" mi="0" ci="16" mb="0" cb="2"/><line nr="462" mi="0" ci="2" mb="0" cb="0"/><line nr="466" mi="2" ci="2" mb="1" cb="1"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="16" mb="0" cb="2"/><line nr="469" mi="0" ci="2" mb="0" cb="0"/><line nr="473" mi="2" ci="2" mb="1" cb="1"/><line nr="474" mi="0" ci="4" mb="0" cb="0"/><line nr="475" mi="0" ci="15" mb="0" cb="2"/><line nr="476" mi="0" ci="2" mb="0" cb="0"/><line nr="480" mi="2" ci="2" mb="1" cb="1"/><line nr="481" mi="0" ci="4" mb="0" cb="0"/><line nr="482" mi="0" ci="15" mb="0" cb="2"/><line nr="483" mi="0" ci="2" mb="0" cb="0"/><line nr="487" mi="2" ci="2" mb="1" cb="1"/><line nr="488" mi="0" ci="4" mb="0" cb="0"/><line nr="489" mi="0" ci="15" mb="0" cb="2"/><line nr="490" mi="0" ci="2" mb="0" cb="0"/><line nr="494" mi="2" ci="2" mb="1" cb="1"/><line nr="495" mi="0" ci="4" mb="0" cb="0"/><line nr="496" mi="0" ci="15" mb="0" cb="2"/><line nr="497" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="245" covered="1081"/><counter type="BRANCH" missed="51" covered="107"/><counter type="LINE" missed="25" covered="197"/><counter type="COMPLEXITY" missed="58" covered="78"/><counter type="METHOD" missed="16" covered="41"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="NeurekaCleaner.java"/><sourcefile name="CustomCleaner.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="2"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="1" cb="1"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="92"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TsrAsString.java"><line nr="20" mi="0" ci="40" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="3" ci="6" mb="0" cb="0"/><line nr="33" mi="3" ci="6" mb="0" cb="0"/><line nr="34" mi="3" ci="6" mb="0" cb="0"/><line nr="35" mi="3" ci="6" mb="0" cb="0"/><line nr="36" mi="3" ci="6" mb="0" cb="0"/><line nr="37" mi="3" ci="6" mb="0" cb="0"/><line nr="38" mi="3" ci="6" mb="0" cb="0"/><line nr="39" mi="3" ci="6" mb="0" cb="0"/><line nr="40" mi="3" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="16" mb="0" cb="2"/><line nr="49" mi="0" ci="11" mb="0" cb="2"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="1" cb="1"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="1" cb="1"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="1" cb="1"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="1" cb="1"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="1" cb="1"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="1" cb="1"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="1" cb="1"/><line nr="84" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="1" cb="1"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="1" cb="1"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="12" mb="0" cb="2"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="12" mb="0" cb="2"/><line nr="100" mi="1" ci="15" mb="2" cb="2"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="8" mb="0" cb="2"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="8" ci="0" mb="2" cb="0"/><line nr="117" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="1" cb="1"/><line nr="120" mi="8" ci="0" mb="2" cb="0"/><line nr="121" mi="7" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="8" mb="1" cb="1"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="2"/><line nr="128" mi="0" ci="8" mb="1" cb="1"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="14" mb="0" cb="2"/><line nr="140" mi="0" ci="10" mb="1" cb="1"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="2"/><line nr="148" mi="0" ci="6" mb="0" cb="2"/><line nr="150" mi="0" ci="13" mb="0" cb="2"/><line nr="151" mi="0" ci="6" mb="0" cb="2"/><line nr="152" mi="0" ci="6" mb="0" cb="2"/><line nr="153" mi="0" ci="13" mb="0" cb="2"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="3" ci="3" mb="1" cb="1"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="23" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="2"/><line nr="162" mi="0" ci="12" mb="0" cb="0"/><line nr="163" mi="0" ci="14" mb="0" cb="0"/><line nr="165" mi="0" ci="11" mb="0" cb="6"/><line nr="166" mi="0" ci="9" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="2"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="170" mi="0" ci="15" mb="0" cb="0"/><line nr="172" mi="0" ci="16" mb="0" cb="2"/><line nr="174" mi="0" ci="15" mb="0" cb="6"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="9" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="1" cb="1"/><line nr="179" mi="13" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="12" mb="0" cb="0"/><line nr="184" mi="0" ci="18" mb="0" cb="0"/><line nr="187" mi="3" ci="20" mb="1" cb="1"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="11" mb="0" cb="0"/><line nr="195" mi="0" ci="15" mb="0" cb="6"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="1" cb="1"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="21" mb="0" cb="2"/><line nr="201" mi="0" ci="21" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="11" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="2"/><line nr="217" mi="0" ci="7" mb="0" cb="2"/><line nr="218" mi="0" ci="14" mb="0" cb="2"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="10" mb="0" cb="2"/><line nr="221" mi="0" ci="10" mb="0" cb="2"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="2" ci="4" mb="1" cb="1"/><line nr="238" mi="0" ci="7" mb="0" cb="2"/><line nr="239" mi="2" ci="12" mb="1" cb="1"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="10" mb="0" cb="2"/><line nr="242" mi="8" ci="2" mb="1" cb="1"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="5" ci="5" mb="1" cb="1"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="6" ci="8" mb="1" cb="3"/><line nr="254" mi="7" ci="5" mb="1" cb="1"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="2" ci="10" mb="4" cb="4"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="20" mb="0" cb="0"/><line nr="261" mi="0" ci="12" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="1" ci="13" mb="1" cb="1"/><line nr="265" mi="0" ci="4" mb="0" cb="2"/><line nr="266" mi="0" ci="12" mb="0" cb="0"/><line nr="268" mi="2" ci="6" mb="1" cb="1"/><line nr="269" mi="0" ci="14" mb="1" cb="5"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="9" mb="0" cb="2"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="8" mb="0" cb="2"/><line nr="279" mi="0" ci="6" mb="0" cb="0"/><line nr="280" mi="0" ci="10" mb="0" cb="2"/><line nr="282" mi="0" ci="6" mb="0" cb="2"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="13" mb="0" cb="0"/><line nr="298" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="142" covered="1240"/><counter type="BRANCH" missed="37" covered="123"/><counter type="LINE" missed="11" covered="178"/><counter type="COMPLEXITY" missed="46" covered="67"/><counter type="METHOD" missed="12" covered="21"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="SettingsLoader.java"><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="1" cb="3"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="1" cb="1"/><line nr="75" mi="14" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="53"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="411" covered="2466"/><counter type="BRANCH" missed="91" covered="239"/><counter type="LINE" missed="42" covered="410"/><counter type="COMPLEXITY" missed="108" covered="155"/><counter type="METHOD" missed="29" covered="69"/><counter type="CLASS" missed="0" covered="8"/></package><package name="neureka/backend/standard/operations/indexer"><class name="neureka/backend/standard/operations/indexer/Product" sourcefilename="Product.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="347"><counter type="INSTRUCTION" missed="64" covered="37"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DILjava/util/List;)D" line="373"><counter type="INSTRUCTION" missed="7" covered="86"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$41" desc="(Lneureka/backend/api/ExecutionCall;)V" line="319"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$40" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="295"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$39" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="306"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$38" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="300"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$37" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="269"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$36" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="265"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$35" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="226"><counter type="INSTRUCTION" missed="50" covered="57"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="9" covered="15"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$34" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="260"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$33" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="259"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$32" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="253"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$31" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="252"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$30" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="240"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$29" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="239"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$28" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="231"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$27" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="230"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$26" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="222"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$25" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="221"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$24" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="215"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$23" desc="([D[Lneureka/Tsr;[I[I[I)D" line="217"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$22" desc="([D[Lneureka/Tsr;[I[I[I)D" line="216"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$21" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="208"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$20" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="210"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$19" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="209"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$18" desc="(Lneureka/backend/api/ExecutionCall;)V" line="184"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$17" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="155"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="169"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="160"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="127"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$13" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="142"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$12" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="141"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$11" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="132"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="131"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="123"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="122"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="109"><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(I[D[Lneureka/Tsr;[D[I[I[I)D" line="115"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$5" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="112"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="94"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="(I[D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="100"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="97"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="52"><counter type="INSTRUCTION" missed="11" covered="124"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="699" covered="532"/><counter type="BRANCH" missed="38" covered="28"/><counter type="LINE" missed="97" covered="111"/><counter type="COMPLEXITY" missed="57" covered="21"/><counter type="METHOD" missed="33" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/indexer/Summation" sourcefilename="Summation.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="324"><counter type="INSTRUCTION" missed="46" covered="7"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="9" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DILjava/util/List;)D" line="340"><counter type="INSTRUCTION" missed="14" covered="61"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$41" desc="(Lneureka/backend/api/ExecutionCall;)V" line="299"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$40" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="276"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$39" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="287"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$38" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="281"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$37" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="251"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$36" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="247"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$35" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="208"><counter type="INSTRUCTION" missed="50" covered="57"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="9" covered="15"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$34" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="242"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$33" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="241"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$32" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="235"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$31" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="234"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$30" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="222"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$29" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="221"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$28" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="213"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$27" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="212"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$26" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="204"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$25" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="203"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$24" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="197"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$23" desc="([D[Lneureka/Tsr;[I[I[I)D" line="199"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$22" desc="([D[Lneureka/Tsr;[I[I[I)D" line="198"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$21" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="190"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$20" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="192"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$19" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="191"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$18" desc="(Lneureka/backend/api/ExecutionCall;)V" line="165"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$17" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="136"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="150"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="141"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="107"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$13" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="122"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$12" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="121"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$11" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="112"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="111"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="103"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="102"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="95"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="([I[I[I)D" line="98"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([D[Lneureka/Tsr;[D[I[I[I)D" line="97"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="86"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="(Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="89"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="88"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="52"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="640" covered="451"/><counter type="BRANCH" missed="35" covered="23"/><counter type="LINE" missed="93" covered="98"/><counter type="COMPLEXITY" missed="53" covered="21"/><counter type="METHOD" missed="32" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Summation.java"><line nr="29" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="13" mb="1" cb="3"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="21" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="16" ci="0" mb="2" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="23" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="2" cb="0"/><line nr="110" mi="8" ci="0" mb="0" cb="0"/><line nr="111" mi="17" ci="0" mb="0" cb="0"/><line nr="112" mi="14" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="7" ci="0" mb="2" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="8" ci="0" mb="0" cb="0"/><line nr="121" mi="17" ci="0" mb="0" cb="0"/><line nr="122" mi="14" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="13" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="1" cb="1"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="8" ci="0" mb="2" cb="0"/><line nr="166" mi="14" ci="0" mb="2" cb="0"/><line nr="167" mi="7" ci="0" mb="0" cb="0"/><line nr="168" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="10" ci="0" mb="2" cb="0"/><line nr="192" mi="8" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="14" ci="0" mb="2" cb="0"/><line nr="199" mi="12" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="2" ci="2" mb="0" cb="0"/><line nr="204" mi="2" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="1" cb="1"/><line nr="211" mi="8" ci="0" mb="0" cb="0"/><line nr="212" mi="17" ci="0" mb="0" cb="0"/><line nr="213" mi="14" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="2"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="8" mb="0" cb="0"/><line nr="221" mi="13" ci="4" mb="0" cb="0"/><line nr="222" mi="13" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="1" cb="1"/><line nr="228" mi="8" ci="0" mb="0" cb="0"/><line nr="229" mi="11" ci="0" mb="0" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="8" ci="0" mb="0" cb="0"/><line nr="234" mi="17" ci="0" mb="0" cb="0"/><line nr="235" mi="25" ci="0" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="13" ci="4" mb="0" cb="0"/><line nr="242" mi="13" ci="1" mb="0" cb="0"/><line nr="247" mi="2" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="2" cb="0"/><line nr="255" mi="6" ci="0" mb="0" cb="0"/><line nr="256" mi="6" ci="0" mb="0" cb="0"/><line nr="257" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="1" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="13" mb="0" cb="0"/><line nr="272" mi="0" ci="8" mb="0" cb="0"/><line nr="276" mi="7" ci="0" mb="0" cb="0"/><line nr="277" mi="1" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="5" ci="0" mb="2" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="5" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="8" ci="0" mb="0" cb="0"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="8" ci="0" mb="2" cb="0"/><line nr="301" mi="4" ci="0" mb="2" cb="0"/><line nr="302" mi="5" ci="0" mb="0" cb="0"/><line nr="303" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="7" ci="0" mb="0" cb="0"/><line nr="305" mi="6" ci="0" mb="0" cb="0"/><line nr="306" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="4" ci="0" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="0" cb="0"/><line nr="309" mi="1" ci="0" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="324" mi="0" ci="7" mb="1" cb="1"/><line nr="325" mi="2" ci="0" mb="2" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="8" ci="0" mb="2" cb="0"/><line nr="329" mi="10" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="0" cb="0"/><line nr="332" mi="9" ci="0" mb="2" cb="0"/><line nr="333" mi="2" ci="0" mb="0" cb="0"/><line nr="335" mi="9" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="2"/><line nr="341" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="8" mb="0" cb="2"/><line nr="344" mi="0" ci="10" mb="0" cb="0"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="7" ci="2" mb="1" cb="1"/><line nr="348" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="8" mb="0" cb="2"/><line nr="353" mi="0" ci="9" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="2" mb="0" cb="0"/><line nr="357" mi="7" ci="2" mb="1" cb="1"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="640" covered="451"/><counter type="BRANCH" missed="35" covered="23"/><counter type="LINE" missed="93" covered="98"/><counter type="COMPLEXITY" missed="53" covered="21"/><counter type="METHOD" missed="32" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Product.java"><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="13" mb="1" cb="3"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="21" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="1" cb="1"/><line nr="74" mi="5" ci="10" mb="1" cb="1"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="14" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="7" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="1" cb="1"/><line nr="112" mi="0" ci="21" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="10" ci="0" mb="2" cb="0"/><line nr="116" mi="8" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="2" cb="0"/><line nr="130" mi="8" ci="0" mb="0" cb="0"/><line nr="131" mi="17" ci="0" mb="0" cb="0"/><line nr="132" mi="14" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="7" ci="0" mb="2" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="8" ci="0" mb="0" cb="0"/><line nr="141" mi="17" ci="0" mb="0" cb="0"/><line nr="142" mi="14" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="13" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="1" cb="1"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="8" ci="0" mb="2" cb="0"/><line nr="185" mi="14" ci="0" mb="2" cb="0"/><line nr="186" mi="7" ci="0" mb="0" cb="0"/><line nr="187" mi="6" ci="0" mb="0" cb="0"/><line nr="188" mi="6" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="10" ci="0" mb="2" cb="0"/><line nr="210" mi="8" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="14" ci="0" mb="2" cb="0"/><line nr="217" mi="12" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="2" ci="2" mb="0" cb="0"/><line nr="222" mi="2" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="1" cb="1"/><line nr="229" mi="8" ci="0" mb="0" cb="0"/><line nr="230" mi="17" ci="0" mb="0" cb="0"/><line nr="231" mi="14" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="2"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="8" mb="0" cb="0"/><line nr="239" mi="13" ci="4" mb="0" cb="0"/><line nr="240" mi="13" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="1" cb="1"/><line nr="246" mi="8" ci="0" mb="0" cb="0"/><line nr="247" mi="11" ci="0" mb="0" cb="0"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="251" mi="8" ci="0" mb="0" cb="0"/><line nr="252" mi="17" ci="0" mb="0" cb="0"/><line nr="253" mi="25" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="8" mb="0" cb="0"/><line nr="259" mi="13" ci="4" mb="0" cb="0"/><line nr="260" mi="13" ci="1" mb="0" cb="0"/><line nr="265" mi="2" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="3" ci="0" mb="0" cb="0"/><line nr="271" mi="4" ci="0" mb="2" cb="0"/><line nr="273" mi="6" ci="0" mb="0" cb="0"/><line nr="274" mi="6" ci="0" mb="0" cb="0"/><line nr="275" mi="4" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="1" ci="0" mb="0" cb="0"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="13" mb="0" cb="0"/><line nr="291" mi="0" ci="8" mb="0" cb="0"/><line nr="295" mi="7" ci="0" mb="0" cb="0"/><line nr="296" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="298" mi="5" ci="0" mb="2" cb="0"/><line nr="299" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><line nr="303" mi="5" ci="0" mb="0" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="8" ci="0" mb="0" cb="0"/><line nr="309" mi="5" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="8" ci="0" mb="2" cb="0"/><line nr="320" mi="14" ci="0" mb="2" cb="0"/><line nr="321" mi="7" ci="0" mb="0" cb="0"/><line nr="322" mi="6" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="1" ci="0" mb="0" cb="0"/><line nr="327" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="7" mb="0" cb="2"/><line nr="348" mi="0" ci="2" mb="1" cb="1"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="8" mb="0" cb="2"/><line nr="352" mi="0" ci="10" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="8" ci="2" mb="1" cb="1"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="8" ci="0" mb="0" cb="0"/><line nr="360" mi="9" ci="0" mb="0" cb="0"/><line nr="361" mi="8" ci="0" mb="2" cb="0"/><line nr="362" mi="8" ci="0" mb="0" cb="0"/><line nr="363" mi="9" ci="0" mb="0" cb="0"/><line nr="364" mi="8" ci="0" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="0" cb="0"/><line nr="367" mi="2" ci="0" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="0" cb="2"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="8" mb="0" cb="2"/><line nr="377" mi="0" ci="10" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="7" ci="2" mb="1" cb="1"/><line nr="381" mi="0" ci="2" mb="0" cb="0"/><line nr="384" mi="0" ci="8" mb="0" cb="0"/><line nr="385" mi="0" ci="9" mb="0" cb="0"/><line nr="386" mi="0" ci="8" mb="0" cb="2"/><line nr="387" mi="0" ci="8" mb="0" cb="0"/><line nr="388" mi="0" ci="9" mb="0" cb="0"/><line nr="389" mi="0" ci="8" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="699" covered="532"/><counter type="BRANCH" missed="38" covered="28"/><counter type="LINE" missed="97" covered="111"/><counter type="COMPLEXITY" missed="57" covered="21"/><counter type="METHOD" missed="33" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1339" covered="983"/><counter type="BRANCH" missed="73" covered="51"/><counter type="LINE" missed="190" covered="209"/><counter type="COMPLEXITY" missed="110" covered="42"/><counter type="METHOD" missed="65" covered="25"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/ndim/config"><class name="neureka/ndim/config/NDConfiguration$Utility" sourcefilename="NDConfiguration.java"><method name="&lt;init&gt;" desc="()V" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rearrange" desc="([I[I[I)[I" line="93"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rearrange" desc="([I[I)[I" line="104"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newTlnOf" desc="([I)[I" line="114"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="increment" desc="([I[I)V" line="133"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_incrementAt" desc="(I[I[I)I" line="140"><counter type="INSTRUCTION" missed="2" covered="69"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="szeOfShp" desc="([I)I" line="167"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="248"/><counter type="BRANCH" missed="4" covered="32"/><counter type="LINE" missed="3" covered="43"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/AbstractNDC" sourcefilename="AbstractNDC.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_cacheArray" desc="([I)[I" line="34"><counter type="INSTRUCTION" missed="39" covered="96"/><counter type="BRANCH" missed="11" covered="13"/><counter type="LINE" missed="5" covered="16"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asInlineArray" desc="()[I" line="67"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keyCode" desc="()J" line="83"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lneureka/ndim/config/NDConfiguration;)Z" line="93"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="construct" desc="([I[I[I[I[I)Lneureka/ndim/config/NDConfiguration;" line="109"><counter type="INSTRUCTION" missed="14" covered="129"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_cached" desc="(Lneureka/ndim/config/NDConfiguration;)Lneureka/ndim/config/NDConfiguration;" line="145"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_isSimpleConfiguration" desc="([I[I[I[I[I)Z" line="165"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="178"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_simpleReshape" desc="([ILneureka/ndim/config/NDConfiguration;)Lneureka/ndim/config/NDConfiguration;" line="188"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newReshaped" desc="([I)Lneureka/ndim/config/NDConfiguration;" line="208"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="108" covered="533"/><counter type="BRANCH" missed="24" covered="66"/><counter type="LINE" missed="14" covered="91"/><counter type="COMPLEXITY" missed="20" covered="37"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/NDConfiguration" sourcefilename="NDConfiguration.java"/><sourcefile name="NDConfiguration.java"><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="2"/><line nr="96" mi="0" ci="11" mb="0" cb="2"/><line nr="97" mi="0" ci="12" mb="1" cb="1"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="2"/><line nr="106" mi="0" ci="12" mb="0" cb="2"/><line nr="107" mi="0" ci="12" mb="1" cb="1"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="2"/><line nr="117" mi="0" ci="9" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="9" mb="0" cb="2"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="2"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="12" mb="0" cb="4"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="2"/><line nr="141" mi="0" ci="7" mb="1" cb="1"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="2"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="1" cb="1"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="20" mb="0" cb="2"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="248"/><counter type="BRANCH" missed="4" covered="32"/><counter type="LINE" missed="3" covered="43"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractNDC.java"><line nr="11" mi="2" ci="8" mb="1" cb="1"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="16" mb="0" cb="2"/><line nr="36" mi="0" ci="8" mb="0" cb="2"/><line nr="37" mi="0" ci="8" mb="0" cb="2"/><line nr="38" mi="0" ci="8" mb="0" cb="2"/><line nr="39" mi="0" ci="8" mb="1" cb="1"/><line nr="40" mi="8" ci="0" mb="2" cb="0"/><line nr="41" mi="8" ci="0" mb="2" cb="0"/><line nr="42" mi="8" ci="0" mb="2" cb="0"/><line nr="43" mi="8" ci="0" mb="2" cb="0"/><line nr="44" mi="7" ci="0" mb="2" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="2"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="2"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="1" cb="1"/><line nr="94" mi="0" ci="6" mb="1" cb="1"/><line nr="95" mi="0" ci="6" mb="1" cb="1"/><line nr="96" mi="0" ci="6" mb="1" cb="1"/><line nr="97" mi="0" ci="8" mb="0" cb="2"/><line nr="109" mi="0" ci="16" mb="0" cb="2"/><line nr="110" mi="0" ci="2" mb="1" cb="1"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="1" cb="1"/><line nr="117" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="2"/><line nr="123" mi="0" ci="8" mb="0" cb="2"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="2"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="10" mb="0" cb="2"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="2"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="4" ci="5" mb="2" cb="2"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="2" mb="1" cb="1"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="2"/><line nr="169" mi="0" ci="6" mb="1" cb="1"/><line nr="170" mi="0" ci="4" mb="0" cb="2"/><line nr="171" mi="0" ci="5" mb="0" cb="2"/><line nr="178" mi="19" ci="0" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="0" cb="0"/><line nr="180" mi="6" ci="0" mb="0" cb="0"/><line nr="181" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="6" ci="0" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="8" mb="0" cb="2"/><line nr="193" mi="0" ci="9" mb="0" cb="2"/><line nr="194" mi="0" ci="12" mb="1" cb="1"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="8" mb="0" cb="2"/><line nr="198" mi="0" ci="9" mb="0" cb="2"/><line nr="199" mi="0" ci="12" mb="1" cb="1"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="208" mi="0" ci="14" mb="0" cb="2"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="533"/><counter type="BRANCH" missed="24" covered="66"/><counter type="LINE" missed="14" covered="91"/><counter type="COMPLEXITY" missed="20" covered="37"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="113" covered="781"/><counter type="BRANCH" missed="28" covered="98"/><counter type="LINE" missed="17" covered="134"/><counter type="COMPLEXITY" missed="25" covered="57"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/backend/standard/operations/operator"><class name="neureka/backend/standard/operations/operator/Subtraction$2" sourcefilename="Subtraction.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Subtraction;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="371"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="374"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Subtraction$1" sourcefilename="Subtraction.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Subtraction;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="363"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="366"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Subtraction$4" sourcefilename="Subtraction.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Subtraction;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="403"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="406"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Subtraction$3" sourcefilename="Subtraction.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Subtraction;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="383"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="386"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Subtraction$5" sourcefilename="Subtraction.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Subtraction;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="411"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="414"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Multiplication" sourcefilename="Multiplication.java"><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="263"/><counter type="LINE" missed="0" covered="65"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="646"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DILjava/util/List;)D" line="671"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$80" desc="(Lneureka/backend/api/ExecutionCall;)V" line="614"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$79" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="591"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$78" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="602"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$77" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="596"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$76" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="571"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$75" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="568"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$74" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="567"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$73" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="548"><counter type="INSTRUCTION" missed="13" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$72" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="563"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$71" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="562"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$70" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="553"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$69" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="552"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$68" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="537"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$67" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="534"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$66" desc="(Lneureka/backend/api/ExecutionCall;)V" line="514"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$65" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="491"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$64" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="502"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$63" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="496"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$62" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="471"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$61" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="468"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$60" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="467"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$59" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="444"><counter type="INSTRUCTION" missed="11" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$58" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="462"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$57" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="460"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$56" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="448"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$55" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="434"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$54" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="431"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$53" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="423"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$52" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I[I[I)D" line="427"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$51" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="416"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$50" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="418"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$49" desc="(Lneureka/backend/api/ExecutionCall;)V" line="388"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$48" desc="(Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="363"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$47" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="375"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$46" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="369"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$45" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="353"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$44" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="328"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$43" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="349"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$42" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="348"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$41" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="341"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$40" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="332"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$39" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="324"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$38" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="323"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$37" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="313"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$36" desc="([DLneureka/ndim/config/NDConfiguration;[I)D" line="318"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$35" desc="(D[I)D" line="317"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$34" desc="([DLneureka/ndim/config/NDConfiguration;D[I)D" line="315"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$33" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDIConsumer;" line="303"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$32" desc="([DLneureka/ndim/iterators/NDIterator;)D" line="307"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$31" desc="(DLneureka/ndim/iterators/NDIterator;)D" line="306"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$30" desc="([DDLneureka/ndim/iterators/NDIterator;)D" line="304"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$29" desc="(Lneureka/backend/api/ExecutionCall;)V" line="276"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$28" desc="(Lneureka/backend/api/ExecutionCall;)V" line="253"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$27" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="264"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$26" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="258"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$25" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="226"><counter type="INSTRUCTION" missed="13" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$24" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="241"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$23" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="240"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$22" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="231"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$21" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="230"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$20" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="222"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$19" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="221"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$18" desc="(Lneureka/backend/api/ExecutionCall;)V" line="197"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$17" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="168"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="182"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="173"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="157"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$13" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="138"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$12" desc="(I[DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I)D" line="148"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I)D" line="145"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$SecondaryNDIConsumer;" line="121"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(I[D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="129"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="126"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="81"><counter type="INSTRUCTION" missed="11" covered="124"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="45"><counter type="INSTRUCTION" missed="7" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$4" desc="(I[DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I[I[I)D" line="53"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$3" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I[I[I)D" line="50"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="31"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(I[D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="37"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="34"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="896" covered="1265"/><counter type="BRANCH" missed="62" covered="50"/><counter type="LINE" missed="120" covered="257"/><counter type="COMPLEXITY" missed="88" covered="53"/><counter type="METHOD" missed="50" covered="35"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Multiplication$1" sourcefilename="Multiplication.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Multiplication;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="480"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="483"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Multiplication$2" sourcefilename="Multiplication.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Multiplication;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="580"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="583"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Division" sourcefilename="Division.java"><method name="&lt;init&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="233"/><counter type="LINE" missed="0" covered="53"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="563"><counter type="INSTRUCTION" missed="0" covered="105"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DILjava/util/List;)D" line="587"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$58" desc="(Ljava/util/List;)Ljava/lang/String;" line="544"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$57" desc="(Ljava/util/List;)Ljava/lang/String;" line="525"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$56" desc="(Ljava/util/List;)Ljava/lang/String;" line="505"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$55" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="497"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$54" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="494"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$53" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="493"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$52" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="473"><counter type="INSTRUCTION" missed="13" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$51" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="489"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$50" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="488"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$49" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="478"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$48" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="477"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$47" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="463"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$46" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="460"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$45" desc="(Lneureka/backend/api/ExecutionCall;)V" line="404"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$44" desc="(Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="379"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$43" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="391"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$42" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="385"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$41" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="369"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$40" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="367"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$39" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="364"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$38" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="363"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$37" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="352"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$36" desc="(D[DLneureka/ndim/config/NDConfiguration;[I)D" line="358"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$35" desc="(D[I)D" line="357"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$34" desc="([DLneureka/ndim/config/NDConfiguration;D[I)D" line="355"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$33" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDIConsumer;" line="341"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$32" desc="(D[DLneureka/ndim/iterators/NDIterator;)D" line="346"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$31" desc="(DLneureka/ndim/iterators/NDIterator;)D" line="345"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$30" desc="([DDLneureka/ndim/iterators/NDIterator;)D" line="343"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$29" desc="(Lneureka/backend/api/ExecutionCall;)V" line="313"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$28" desc="(Lneureka/backend/api/ExecutionCall;)V" line="290"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$27" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="301"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$26" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="295"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$25" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="262"><counter type="INSTRUCTION" missed="13" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$24" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="277"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$23" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="276"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$22" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="267"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$21" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="266"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$20" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="258"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$19" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="257"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$18" desc="(Lneureka/backend/api/ExecutionCall;)V" line="229"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$17" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="199"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="213"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="204"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="187"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$13" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="169"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$12" desc="(I[D[Lneureka/Tsr;[D[I)D" line="175"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="([D[Lneureka/Tsr;[D[I)D" line="172"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$SecondaryNDIConsumer;" line="152"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(I[D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="158"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="155"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="91"><counter type="INSTRUCTION" missed="48" covered="215"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="6" covered="32"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="48"><counter type="INSTRUCTION" missed="7" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$4" desc="(I[DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I[I[I)D" line="56"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$3" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I[I[I)D" line="53"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="31"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(I[D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="37"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="34"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="656" covered="1208"/><counter type="BRANCH" missed="47" covered="53"/><counter type="LINE" missed="84" covered="223"/><counter type="COMPLEXITY" missed="63" covered="50"/><counter type="METHOD" missed="34" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Modulo$2" sourcefilename="Modulo.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Modulo;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="455"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="458"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Modulo$1" sourcefilename="Modulo.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Modulo;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="447"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="450"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Power" sourcefilename="Power.java"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="229"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="564"><counter type="INSTRUCTION" missed="122" covered="7"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="16" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DILjava/util/List;)D" line="592"><counter type="INSTRUCTION" missed="6" covered="127"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$56" desc="(Ljava/util/List;)Ljava/lang/String;" line="521"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$55" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="512"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$54" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="509"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$53" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="508"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$52" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="488"><counter type="INSTRUCTION" missed="13" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$51" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="504"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$50" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="503"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$49" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="493"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$48" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="492"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$47" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="478"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$46" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="475"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$45" desc="(Lneureka/backend/api/ExecutionCall;)V" line="421"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$44" desc="(Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="396"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$43" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="408"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$42" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="402"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$41" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="386"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$40" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="384"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$39" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="381"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$38" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="380"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$37" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="370"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$36" desc="([DLneureka/ndim/config/NDConfiguration;D[I)D" line="375"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$35" desc="(D[DLneureka/ndim/config/NDConfiguration;[I)D" line="374"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$34" desc="([DLneureka/ndim/config/NDConfiguration;D[I)D" line="372"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$33" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDIConsumer;" line="360"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$32" desc="([DDLneureka/ndim/iterators/NDIterator;)D" line="364"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$31" desc="(D[DLneureka/ndim/iterators/NDIterator;)D" line="363"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$30" desc="([DDLneureka/ndim/iterators/NDIterator;)D" line="361"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$29" desc="(Lneureka/backend/api/ExecutionCall;)V" line="332"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$28" desc="(Lneureka/backend/api/ExecutionCall;)V" line="309"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$27" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="320"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$26" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="314"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$25" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="281"><counter type="INSTRUCTION" missed="13" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$24" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="296"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$23" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="295"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$22" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="286"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$21" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="285"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$20" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="277"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$19" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="276"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$18" desc="(Lneureka/backend/api/ExecutionCall;)V" line="247"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$17" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="217"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="231"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="222"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="207"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$13" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="136"><counter type="INSTRUCTION" missed="0" covered="265"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$12" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="117"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;I[I)D" line="126"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I)D" line="122"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$SecondaryNDIConsumer;" line="94"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="(I[D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="101"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="97"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="54"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$4" desc="(I[DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I[I[I)D" line="62"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$3" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I[I[I)D" line="59"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="31"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$1" desc="(I[D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="36"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="33"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="924" covered="977"/><counter type="BRANCH" missed="62" covered="36"/><counter type="LINE" missed="129" covered="191"/><counter type="COMPLEXITY" missed="78" covered="32"/><counter type="METHOD" missed="43" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Modulo" sourcefilename="Modulo.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="178"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DILjava/util/List;)D" line="467"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="481"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$47" desc="(Lneureka/backend/api/ExecutionCall;)V" line="417"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$46" desc="(Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="392"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$45" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="404"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$44" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="398"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$43" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="383"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$42" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="382"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$41" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="380"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$40" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="370"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$39" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="367"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$38" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="356"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$37" desc="(D[DLneureka/ndim/config/NDConfiguration;[I)D" line="362"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$36" desc="(D[I)D" line="361"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$35" desc="([DLneureka/ndim/config/NDConfiguration;D[I)D" line="359"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$34" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDIConsumer;" line="345"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$33" desc="(D[DLneureka/ndim/iterators/NDIterator;)D" line="350"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$32" desc="(DLneureka/ndim/iterators/NDIterator;)D" line="349"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$31" desc="([DDLneureka/ndim/iterators/NDIterator;)D" line="347"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$30" desc="(Lneureka/backend/api/ExecutionCall;)V" line="317"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$29" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="294"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$28" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="305"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$27" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="299"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$26" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="285"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$25" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="266"><counter type="INSTRUCTION" missed="13" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$24" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="281"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$23" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="280"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$22" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="271"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$21" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="270"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$20" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="255"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$19" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="252"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$18" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="234"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$17" desc="(I[DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I[I[I)D" line="242"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$16" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I[I[I)D" line="239"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$15" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="214"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$14" desc="(I[D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="220"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$13" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="217"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$12" desc="(Lneureka/backend/api/ExecutionCall;)V" line="184"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="155"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="169"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="160"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="144"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="125"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(I[DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I)D" line="132"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I)D" line="129"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$SecondaryNDIConsumer;" line="110"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="(I[D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="115"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="112"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="49"><counter type="INSTRUCTION" missed="243" covered="20"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="31" covered="7"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1007" covered="447"/><counter type="BRANCH" missed="69" covered="15"/><counter type="LINE" missed="153" covered="95"/><counter type="COMPLEXITY" missed="77" covered="16"/><counter type="METHOD" missed="40" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Addition" sourcefilename="Addition.java"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="221"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="478"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DILjava/util/List;)D" line="497"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$57" desc="(Ljava/util/List;)Ljava/lang/String;" line="441"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$56" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="432"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$55" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="429"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$54" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="428"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$53" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="408"><counter type="INSTRUCTION" missed="13" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$52" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="424"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$51" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="423"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$50" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="413"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$49" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="412"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$48" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="397"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$47" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="394"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$46" desc="(Lneureka/backend/api/ExecutionCall;)V" line="341"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$45" desc="(Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="315"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$44" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="327"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$43" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="321"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$42" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="300"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$41" desc="([I)D" line="305"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$40" desc="([I)D" line="304"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$39" desc="([DLneureka/ndim/config/NDConfiguration;D[I)D" line="302"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$38" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDIConsumer;" line="290"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$37" desc="(Lneureka/ndim/iterators/NDIterator;)D" line="294"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$36" desc="(Lneureka/ndim/iterators/NDIterator;)D" line="293"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$35" desc="([DDLneureka/ndim/iterators/NDIterator;)D" line="291"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$34" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="284"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$33" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="282"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$32" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="279"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$31" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="278"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$30" desc="(Lneureka/backend/api/ExecutionCall;)V" line="255"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$29" desc="(Lneureka/backend/api/ExecutionCall;)V" line="232"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$28" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="243"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$27" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="237"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$26" desc="(Lneureka/backend/api/ExecutionCall;)V" line="204"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$25" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="174"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$24" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="188"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$23" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="179"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$22" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="162"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$21" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="151"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$20" desc="([I)D" line="156"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$19" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I)D" line="155"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$18" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$SecondaryNDIConsumer;" line="143"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$17" desc="(Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="146"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$16" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="145"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="110"><counter type="INSTRUCTION" missed="10" covered="84"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="(Ljava/util/List;)Ljava/lang/String;" line="97"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$13" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="80"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$12" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="61"><counter type="INSTRUCTION" missed="13" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$11" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="76"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$10" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="75"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$9" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="66"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$8" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="65"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$7" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="51"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$6" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="38"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$4" desc="([I[I[I)D" line="43"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$3" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I[I[I)D" line="42"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="30"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="33"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="32"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="463" covered="968"/><counter type="BRANCH" missed="37" covered="45"/><counter type="LINE" missed="58" covered="195"/><counter type="COMPLEXITY" missed="56" covered="47"/><counter type="METHOD" missed="32" covered="30"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Subtraction" sourcefilename="Subtraction.java"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="210"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="426"><counter type="INSTRUCTION" missed="69" covered="7"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="12" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DILjava/util/List;)D" line="449"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$46" desc="(Ljava/util/List;)Ljava/lang/String;" line="390"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$45" desc="(Lneureka/backend/api/ExecutionCall;)V" line="339"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$44" desc="(Lneureka/backend/api/ExecutionCall;)V" line="316"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$43" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="327"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$42" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="321"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$41" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="287"><counter type="INSTRUCTION" missed="13" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$40" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="302"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$39" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="301"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$38" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="292"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$37" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="291"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$36" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="283"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$35" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="282"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$34" desc="(Lneureka/backend/api/ExecutionCall;)V" line="255"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$33" desc="(Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="229"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$32" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="242"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$31" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="236"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$30" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="219"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$29" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="217"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$28" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="214"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$27" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="213"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$26" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="206"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$25" desc="([I)D" line="209"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$24" desc="([I)D" line="209"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$23" desc="([DLneureka/ndim/config/NDConfiguration;D[I)D" line="208"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$22" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDIConsumer;" line="199"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$21" desc="(Lneureka/ndim/iterators/NDIterator;)D" line="201"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$20" desc="(Lneureka/ndim/iterators/NDIterator;)D" line="201"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$19" desc="([DDLneureka/ndim/iterators/NDIterator;)D" line="200"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$18" desc="(Lneureka/backend/api/ExecutionCall;)V" line="171"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$17" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="156"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="147"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="131"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$13" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="119"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$12" desc="(I[I)D" line="125"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I)D" line="124"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$SecondaryNDIConsumer;" line="111"><counter type="INSTRUCTION" missed="3" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(ILneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="115"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="114"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="78"><counter type="INSTRUCTION" missed="78" covered="20"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="10" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="42"><counter type="INSTRUCTION" missed="3" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$4" desc="(I[I[I[I)D" line="50"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$3" desc="([DLneureka/ndim/config/NDConfiguration;[DLneureka/ndim/config/NDConfiguration;[I[I[I)D" line="47"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="28"><counter type="INSTRUCTION" missed="3" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(ILneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="34"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="([D[DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="453" covered="807"/><counter type="BRANCH" missed="46" covered="36"/><counter type="LINE" missed="65" covered="161"/><counter type="COMPLEXITY" missed="51" covered="41"/><counter type="METHOD" missed="23" covered="28"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Power$1" sourcefilename="Power.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Power;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="450"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="453"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Power$5" sourcefilename="Power.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Power;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="538"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="541"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Power$4" sourcefilename="Power.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Power;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="532"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="535"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Power$3" sourcefilename="Power.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Power;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="467"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="470"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Power$2" sourcefilename="Power.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Power;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="456"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="459"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Addition$5" sourcefilename="Addition.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Addition;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="462"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="465"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Addition$1" sourcefilename="Addition.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Addition;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="365"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="368"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Addition$2" sourcefilename="Addition.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Addition;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="374"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="377"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Addition$3" sourcefilename="Addition.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Addition;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="385"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="388"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Addition$4" sourcefilename="Addition.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Addition;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="454"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="457"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Division$5" sourcefilename="Division.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Division;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="537"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="540"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Division$4" sourcefilename="Division.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Division;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="518"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="521"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Division$3" sourcefilename="Division.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Division;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="452"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="455"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Division$2" sourcefilename="Division.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Division;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="441"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="444"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/operator/Division$1" sourcefilename="Division.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/standard/operations/operator/Division;Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="433"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="436"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Subtraction.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="1" cb="1"/><line nr="31" mi="0" ci="14" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="2" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="1" cb="1"/><line nr="47" mi="0" ci="18" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="2" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="2"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="11" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="1" cb="1"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="86" mi="21" ci="0" mb="0" cb="0"/><line nr="87" mi="11" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="11" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="14" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="1" cb="1"/><line nr="114" mi="0" ci="14" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="2" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="2"/><line nr="124" mi="0" ci="18" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="2"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="13" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="2"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="1" ci="7" mb="1" cb="1"/><line nr="172" mi="4" ci="10" mb="1" cb="1"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="13" ci="0" mb="2" cb="0"/><line nr="201" mi="10" ci="0" mb="2" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="15" ci="0" mb="2" cb="0"/><line nr="209" mi="10" ci="0" mb="2" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="2" ci="2" mb="0" cb="0"/><line nr="214" mi="2" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="7" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="13" mb="0" cb="0"/><line nr="225" mi="0" ci="8" mb="0" cb="0"/><line nr="229" mi="15" ci="0" mb="4" cb="0"/><line nr="230" mi="8" ci="0" mb="0" cb="0"/><line nr="231" mi="6" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="2" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="239" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="15" ci="0" mb="4" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="257" mi="7" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="6" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="0" cb="0"/><line nr="261" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="264" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="1" cb="1"/><line nr="290" mi="8" ci="0" mb="0" cb="0"/><line nr="291" mi="17" ci="0" mb="0" cb="0"/><line nr="292" mi="14" ci="0" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="7" mb="0" cb="2"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="8" mb="0" cb="0"/><line nr="301" mi="13" ci="4" mb="0" cb="0"/><line nr="302" mi="13" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="11" mb="0" cb="0"/><line nr="312" mi="0" ci="8" mb="0" cb="0"/><line nr="316" mi="0" ci="7" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="5" mb="0" cb="2"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="8" mb="0" cb="0"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="8" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="1" ci="7" mb="1" cb="1"/><line nr="340" mi="4" ci="10" mb="1" cb="1"/><line nr="341" mi="0" ci="7" mb="0" cb="0"/><line nr="342" mi="0" ci="6" mb="0" cb="0"/><line nr="343" mi="0" ci="6" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="348" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="12" mb="0" cb="0"/><line nr="363" mi="0" ci="13" mb="0" cb="0"/><line nr="366" mi="8" ci="0" mb="0" cb="0"/><line nr="369" mi="0" ci="12" mb="0" cb="0"/><line nr="371" mi="0" ci="13" mb="0" cb="0"/><line nr="374" mi="8" ci="0" mb="0" cb="0"/><line nr="381" mi="0" ci="12" mb="0" cb="0"/><line nr="383" mi="0" ci="13" mb="0" cb="0"/><line nr="386" mi="8" ci="0" mb="0" cb="0"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="8" mb="0" cb="2"/><line nr="392" mi="0" ci="7" mb="0" cb="0"/><line nr="393" mi="0" ci="6" mb="0" cb="2"/><line nr="394" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="11" mb="0" cb="0"/><line nr="401" mi="0" ci="12" mb="0" cb="0"/><line nr="403" mi="0" ci="13" mb="0" cb="0"/><line nr="406" mi="8" ci="0" mb="0" cb="0"/><line nr="409" mi="0" ci="12" mb="0" cb="0"/><line nr="411" mi="0" ci="13" mb="0" cb="0"/><line nr="414" mi="8" ci="0" mb="0" cb="0"/><line nr="419" mi="0" ci="1" mb="0" cb="0"/><line nr="426" mi="0" ci="7" mb="1" cb="1"/><line nr="427" mi="2" ci="0" mb="2" cb="0"/><line nr="428" mi="8" ci="0" mb="0" cb="0"/><line nr="429" mi="8" ci="0" mb="2" cb="0"/><line nr="430" mi="8" ci="0" mb="0" cb="0"/><line nr="431" mi="4" ci="0" mb="0" cb="0"/><line nr="433" mi="2" ci="0" mb="0" cb="0"/><line nr="435" mi="2" ci="0" mb="0" cb="0"/><line nr="436" mi="8" ci="0" mb="2" cb="0"/><line nr="437" mi="2" ci="0" mb="2" cb="0"/><line nr="438" mi="12" ci="0" mb="0" cb="0"/><line nr="440" mi="11" ci="0" mb="0" cb="0"/><line nr="443" mi="2" ci="0" mb="0" cb="0"/><line nr="449" mi="0" ci="2" mb="0" cb="2"/><line nr="450" mi="0" ci="7" mb="0" cb="0"/><line nr="451" mi="0" ci="8" mb="0" cb="2"/><line nr="452" mi="0" ci="7" mb="0" cb="0"/><line nr="453" mi="0" ci="4" mb="0" cb="0"/><line nr="455" mi="0" ci="2" mb="0" cb="0"/><line nr="457" mi="0" ci="2" mb="0" cb="0"/><line nr="458" mi="0" ci="8" mb="0" cb="2"/><line nr="459" mi="0" ci="2" mb="0" cb="2"/><line nr="460" mi="0" ci="11" mb="0" cb="0"/><line nr="462" mi="0" ci="10" mb="0" cb="0"/><line nr="465" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="493" covered="872"/><counter type="BRANCH" missed="46" covered="36"/><counter type="LINE" missed="70" covered="166"/><counter type="COMPLEXITY" missed="56" covered="46"/><counter type="METHOD" missed="28" covered="33"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="Power.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="16" ci="0" mb="2" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="2" cb="0"/><line nr="37" mi="7" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="2" cb="0"/><line nr="59" mi="12" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="2" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="12" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="11" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="2"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="2"/><line nr="85" mi="0" ci="11" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="1" cb="1"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="2" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="2"/><line nr="122" mi="0" ci="12" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="2"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="2"/><line nr="145" mi="0" ci="21" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="2"/><line nr="159" mi="0" ci="9" mb="0" cb="0"/><line nr="160" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="9" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="19" mb="0" cb="0"/><line nr="166" mi="0" ci="11" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="9" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="11" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="20" mb="0" cb="0"/><line nr="181" mi="0" ci="9" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="19" mb="0" cb="0"/><line nr="187" mi="0" ci="11" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="7" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="13" mb="0" cb="0"/><line nr="213" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="2"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="1" ci="7" mb="1" cb="1"/><line nr="248" mi="0" ci="4" mb="1" cb="1"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="4" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="2" ci="2" mb="0" cb="0"/><line nr="277" mi="2" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="1" cb="1"/><line nr="284" mi="8" ci="0" mb="0" cb="0"/><line nr="285" mi="17" ci="0" mb="0" cb="0"/><line nr="286" mi="14" ci="0" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="7" mb="0" cb="2"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="8" mb="0" cb="0"/><line nr="295" mi="13" ci="4" mb="0" cb="0"/><line nr="296" mi="13" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="11" mb="0" cb="0"/><line nr="305" mi="0" ci="8" mb="0" cb="0"/><line nr="309" mi="7" ci="0" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><line nr="311" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="2" cb="0"/><line nr="313" mi="3" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="315" mi="8" ci="0" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="5" ci="0" mb="0" cb="0"/><line nr="319" mi="2" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="321" mi="8" ci="0" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="332" mi="8" ci="0" mb="2" cb="0"/><line nr="333" mi="14" ci="0" mb="2" cb="0"/><line nr="334" mi="7" ci="0" mb="0" cb="0"/><line nr="335" mi="6" ci="0" mb="0" cb="0"/><line nr="336" mi="6" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="4" ci="0" mb="0" cb="0"/><line nr="339" mi="3" ci="0" mb="0" cb="0"/><line nr="340" mi="1" ci="0" mb="0" cb="0"/><line nr="341" mi="1" ci="0" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="5" ci="0" mb="0" cb="0"/><line nr="361" mi="13" ci="0" mb="2" cb="0"/><line nr="363" mi="17" ci="0" mb="2" cb="0"/><line nr="364" mi="14" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="370" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="5" ci="0" mb="0" cb="0"/><line nr="372" mi="15" ci="0" mb="2" cb="0"/><line nr="374" mi="19" ci="0" mb="2" cb="0"/><line nr="375" mi="16" ci="0" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="2" ci="2" mb="0" cb="0"/><line nr="381" mi="2" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="2" mb="0" cb="0"/><line nr="384" mi="7" ci="0" mb="0" cb="0"/><line nr="386" mi="2" ci="2" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="13" mb="0" cb="0"/><line nr="392" mi="0" ci="8" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="6" ci="0" mb="0" cb="0"/><line nr="398" mi="1" ci="0" mb="0" cb="0"/><line nr="399" mi="2" ci="0" mb="0" cb="0"/><line nr="400" mi="5" ci="0" mb="2" cb="0"/><line nr="401" mi="5" ci="0" mb="0" cb="0"/><line nr="402" mi="4" ci="0" mb="0" cb="0"/><line nr="403" mi="5" ci="0" mb="0" cb="0"/><line nr="405" mi="5" ci="0" mb="0" cb="0"/><line nr="407" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="409" mi="5" ci="0" mb="0" cb="0"/><line nr="411" mi="5" ci="0" mb="0" cb="0"/><line nr="414" mi="1" ci="0" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="421" mi="15" ci="0" mb="4" cb="0"/><line nr="422" mi="5" ci="0" mb="0" cb="0"/><line nr="423" mi="7" ci="0" mb="0" cb="0"/><line nr="424" mi="4" ci="0" mb="0" cb="0"/><line nr="425" mi="6" ci="0" mb="0" cb="0"/><line nr="426" mi="7" ci="0" mb="0" cb="0"/><line nr="427" mi="4" ci="0" mb="0" cb="0"/><line nr="428" mi="3" ci="0" mb="0" cb="0"/><line nr="429" mi="1" ci="0" mb="0" cb="0"/><line nr="430" mi="1" ci="0" mb="0" cb="0"/><line nr="432" mi="0" ci="5" mb="0" cb="0"/><line nr="450" mi="0" ci="25" mb="0" cb="0"/><line nr="453" mi="8" ci="0" mb="0" cb="0"/><line nr="456" mi="0" ci="25" mb="0" cb="0"/><line nr="459" mi="8" ci="0" mb="0" cb="0"/><line nr="465" mi="0" ci="16" mb="0" cb="0"/><line nr="467" mi="0" ci="13" mb="0" cb="0"/><line nr="470" mi="2" ci="0" mb="0" cb="0"/><line nr="472" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="2" ci="2" mb="0" cb="0"/><line nr="476" mi="0" ci="2" mb="0" cb="0"/><line nr="478" mi="2" ci="0" mb="0" cb="0"/><line nr="479" mi="17" ci="0" mb="2" cb="0"/><line nr="480" mi="10" ci="0" mb="4" cb="0"/><line nr="481" mi="2" ci="0" mb="0" cb="0"/><line nr="483" mi="2" ci="0" mb="0" cb="0"/><line nr="485" mi="0" ci="2" mb="0" cb="0"/><line nr="488" mi="0" ci="5" mb="0" cb="0"/><line nr="489" mi="0" ci="2" mb="0" cb="0"/><line nr="490" mi="0" ci="2" mb="1" cb="1"/><line nr="491" mi="8" ci="0" mb="0" cb="0"/><line nr="492" mi="17" ci="0" mb="0" cb="0"/><line nr="493" mi="14" ci="0" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="0" ci="3" mb="0" cb="0"/><line nr="497" mi="0" ci="2" mb="0" cb="2"/><line nr="498" mi="0" ci="5" mb="0" cb="0"/><line nr="501" mi="0" ci="5" mb="0" cb="0"/><line nr="502" mi="0" ci="8" mb="0" cb="0"/><line nr="503" mi="13" ci="4" mb="0" cb="0"/><line nr="504" mi="13" ci="1" mb="0" cb="0"/><line nr="508" mi="2" ci="2" mb="0" cb="0"/><line nr="509" mi="2" ci="2" mb="0" cb="0"/><line nr="510" mi="0" ci="1" mb="0" cb="0"/><line nr="512" mi="3" ci="0" mb="0" cb="0"/><line nr="513" mi="8" ci="0" mb="2" cb="0"/><line nr="514" mi="26" ci="0" mb="0" cb="0"/><line nr="517" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="2" mb="0" cb="0"/><line nr="521" mi="4" ci="0" mb="0" cb="0"/><line nr="522" mi="8" ci="0" mb="2" cb="0"/><line nr="523" mi="7" ci="0" mb="0" cb="0"/><line nr="524" mi="6" ci="0" mb="2" cb="0"/><line nr="525" mi="4" ci="0" mb="0" cb="0"/><line nr="528" mi="11" ci="0" mb="0" cb="0"/><line nr="532" mi="0" ci="25" mb="0" cb="0"/><line nr="535" mi="8" ci="0" mb="0" cb="0"/><line nr="538" mi="0" ci="25" mb="0" cb="0"/><line nr="541" mi="8" ci="0" mb="0" cb="0"/><line nr="548" mi="0" ci="1" mb="0" cb="0"/><line nr="564" mi="0" ci="7" mb="1" cb="1"/><line nr="565" mi="2" ci="0" mb="2" cb="0"/><line nr="566" mi="8" ci="0" mb="0" cb="0"/><line nr="567" mi="8" ci="0" mb="2" cb="0"/><line nr="568" mi="8" ci="0" mb="0" cb="0"/><line nr="569" mi="4" ci="0" mb="0" cb="0"/><line nr="571" mi="2" ci="0" mb="0" cb="0"/><line nr="573" mi="2" ci="0" mb="0" cb="0"/><line nr="574" mi="8" ci="0" mb="2" cb="0"/><line nr="575" mi="2" ci="0" mb="0" cb="0"/><line nr="576" mi="8" ci="0" mb="2" cb="0"/><line nr="577" mi="10" ci="0" mb="0" cb="0"/><line nr="579" mi="2" ci="0" mb="2" cb="0"/><line nr="580" mi="26" ci="0" mb="0" cb="0"/><line nr="582" mi="8" ci="0" mb="0" cb="0"/><line nr="583" mi="22" ci="0" mb="2" cb="0"/><line nr="586" mi="2" ci="0" mb="0" cb="0"/><line nr="592" mi="0" ci="2" mb="0" cb="2"/><line nr="593" mi="0" ci="7" mb="0" cb="0"/><line nr="594" mi="0" ci="8" mb="0" cb="2"/><line nr="595" mi="0" ci="7" mb="0" cb="0"/><line nr="596" mi="0" ci="4" mb="0" cb="0"/><line nr="598" mi="0" ci="2" mb="0" cb="0"/><line nr="600" mi="0" ci="2" mb="0" cb="0"/><line nr="601" mi="0" ci="2" mb="0" cb="0"/><line nr="602" mi="0" ci="2" mb="0" cb="0"/><line nr="603" mi="0" ci="8" mb="0" cb="2"/><line nr="604" mi="0" ci="2" mb="0" cb="0"/><line nr="605" mi="0" ci="7" mb="0" cb="0"/><line nr="606" mi="0" ci="8" mb="0" cb="2"/><line nr="607" mi="5" ci="3" mb="1" cb="1"/><line nr="608" mi="0" ci="10" mb="0" cb="0"/><line nr="610" mi="0" ci="4" mb="0" cb="0"/><line nr="611" mi="0" ci="4" mb="0" cb="0"/><line nr="613" mi="0" ci="2" mb="0" cb="0"/><line nr="614" mi="0" ci="7" mb="0" cb="0"/><line nr="615" mi="0" ci="18" mb="0" cb="0"/><line nr="616" mi="1" ci="16" mb="1" cb="1"/><line nr="617" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="958" covered="1042"/><counter type="BRANCH" missed="62" covered="36"/><counter type="LINE" missed="134" covered="192"/><counter type="COMPLEXITY" missed="83" covered="37"/><counter type="METHOD" missed="48" covered="23"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="Multiplication.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="1" cb="1"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="2" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="1" cb="1"/><line nr="50" mi="0" ci="18" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="2" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="2"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="2"/><line nr="89" mi="0" ci="21" mb="0" cb="0"/><line nr="90" mi="0" ci="11" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="1" cb="1"/><line nr="103" mi="5" ci="10" mb="1" cb="1"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="1" cb="1"/><line nr="126" mi="0" ci="14" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="7" ci="0" mb="2" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="2"/><line nr="145" mi="0" ci="18" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="2"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="13" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="2"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="1" ci="7" mb="1" cb="1"/><line nr="198" mi="4" ci="10" mb="1" cb="1"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="1" cb="1"/><line nr="229" mi="8" ci="0" mb="0" cb="0"/><line nr="230" mi="17" ci="0" mb="0" cb="0"/><line nr="231" mi="14" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="7" mb="0" cb="2"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="13" ci="4" mb="0" cb="0"/><line nr="241" mi="13" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="11" mb="0" cb="0"/><line nr="249" mi="0" ci="8" mb="0" cb="0"/><line nr="253" mi="0" ci="7" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="2"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="8" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="1" ci="7" mb="1" cb="1"/><line nr="277" mi="4" ci="10" mb="1" cb="1"/><line nr="278" mi="0" ci="7" mb="0" cb="0"/><line nr="279" mi="0" ci="6" mb="0" cb="0"/><line nr="280" mi="0" ci="6" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="0"/><line nr="303" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="13" ci="0" mb="2" cb="0"/><line nr="306" mi="7" ci="0" mb="2" cb="0"/><line nr="307" mi="8" ci="0" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="5" ci="0" mb="0" cb="0"/><line nr="314" mi="5" ci="0" mb="0" cb="0"/><line nr="315" mi="15" ci="0" mb="2" cb="0"/><line nr="317" mi="7" ci="0" mb="2" cb="0"/><line nr="318" mi="10" ci="0" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="2" ci="2" mb="0" cb="0"/><line nr="324" mi="2" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="5" ci="0" mb="0" cb="0"/><line nr="329" mi="2" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="2" cb="0"/><line nr="331" mi="8" ci="0" mb="0" cb="0"/><line nr="332" mi="15" ci="0" mb="0" cb="0"/><line nr="333" mi="1" ci="0" mb="0" cb="0"/><line nr="335" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="0" cb="0"/><line nr="337" mi="2" ci="0" mb="2" cb="0"/><line nr="339" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="8" ci="0" mb="0" cb="0"/><line nr="341" mi="15" ci="0" mb="0" cb="0"/><line nr="342" mi="1" ci="0" mb="0" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="8" ci="0" mb="0" cb="0"/><line nr="348" mi="17" ci="0" mb="0" cb="0"/><line nr="349" mi="14" ci="0" mb="0" cb="0"/><line nr="353" mi="2" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="13" mb="0" cb="0"/><line nr="359" mi="0" ci="8" mb="0" cb="0"/><line nr="363" mi="6" ci="0" mb="0" cb="0"/><line nr="364" mi="6" ci="0" mb="0" cb="0"/><line nr="365" mi="1" ci="0" mb="0" cb="0"/><line nr="366" mi="2" ci="0" mb="0" cb="0"/><line nr="367" mi="5" ci="0" mb="2" cb="0"/><line nr="368" mi="5" ci="0" mb="0" cb="0"/><line nr="369" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="5" ci="0" mb="0" cb="0"/><line nr="372" mi="5" ci="0" mb="0" cb="0"/><line nr="374" mi="4" ci="0" mb="0" cb="0"/><line nr="375" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="5" ci="0" mb="0" cb="0"/><line nr="378" mi="5" ci="0" mb="0" cb="0"/><line nr="381" mi="1" ci="0" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="15" ci="0" mb="4" cb="0"/><line nr="389" mi="5" ci="0" mb="0" cb="0"/><line nr="390" mi="7" ci="0" mb="0" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="6" ci="0" mb="0" cb="0"/><line nr="393" mi="7" ci="0" mb="0" cb="0"/><line nr="394" mi="4" ci="0" mb="0" cb="0"/><line nr="395" mi="3" ci="0" mb="0" cb="0"/><line nr="396" mi="1" ci="0" mb="0" cb="0"/><line nr="397" mi="1" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="416" mi="5" ci="0" mb="0" cb="0"/><line nr="417" mi="5" ci="0" mb="0" cb="0"/><line nr="418" mi="14" ci="0" mb="0" cb="0"/><line nr="421" mi="0" ci="2" mb="0" cb="0"/><line nr="423" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="0" cb="0"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="426" mi="0" ci="5" mb="0" cb="0"/><line nr="427" mi="0" ci="18" mb="0" cb="0"/><line nr="430" mi="0" ci="4" mb="0" cb="0"/><line nr="431" mi="2" ci="2" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="0" cb="0"/><line nr="435" mi="17" ci="0" mb="2" cb="0"/><line nr="436" mi="10" ci="0" mb="4" cb="0"/><line nr="437" mi="2" ci="0" mb="0" cb="0"/><line nr="439" mi="2" ci="0" mb="0" cb="0"/><line nr="441" mi="0" ci="2" mb="0" cb="0"/><line nr="444" mi="0" ci="5" mb="0" cb="0"/><line nr="445" mi="0" ci="2" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="1" cb="1"/><line nr="447" mi="8" ci="0" mb="0" cb="0"/><line nr="448" mi="15" ci="0" mb="0" cb="0"/><line nr="449" mi="1" ci="0" mb="0" cb="0"/><line nr="451" mi="0" ci="3" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="453" mi="0" ci="7" mb="0" cb="2"/><line nr="456" mi="0" ci="5" mb="0" cb="0"/><line nr="457" mi="0" ci="8" mb="0" cb="0"/><line nr="459" mi="0" ci="4" mb="0" cb="0"/><line nr="460" mi="13" ci="0" mb="0" cb="0"/><line nr="461" mi="0" ci="1" mb="0" cb="0"/><line nr="462" mi="13" ci="0" mb="0" cb="0"/><line nr="467" mi="2" ci="2" mb="0" cb="0"/><line nr="468" mi="2" ci="2" mb="0" cb="0"/><line nr="469" mi="0" ci="1" mb="0" cb="0"/><line nr="471" mi="3" ci="0" mb="0" cb="0"/><line nr="472" mi="8" ci="0" mb="2" cb="0"/><line nr="473" mi="26" ci="0" mb="0" cb="0"/><line nr="476" mi="0" ci="3" mb="0" cb="0"/><line nr="478" mi="0" ci="21" mb="0" cb="0"/><line nr="480" mi="0" ci="13" mb="0" cb="0"/><line nr="483" mi="2" ci="0" mb="0" cb="0"/><line nr="485" mi="0" ci="2" mb="0" cb="0"/><line nr="487" mi="0" ci="8" mb="0" cb="0"/><line nr="491" mi="0" ci="7" mb="0" cb="0"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="493" mi="0" ci="2" mb="0" cb="0"/><line nr="494" mi="0" ci="5" mb="1" cb="1"/><line nr="495" mi="0" ci="4" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="0"/><line nr="497" mi="0" ci="8" mb="0" cb="0"/><line nr="498" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="0" ci="5" mb="0" cb="0"/><line nr="501" mi="3" ci="0" mb="0" cb="0"/><line nr="502" mi="4" ci="0" mb="0" cb="0"/><line nr="503" mi="8" ci="0" mb="0" cb="0"/><line nr="504" mi="5" ci="0" mb="0" cb="0"/><line nr="505" mi="5" ci="0" mb="0" cb="0"/><line nr="510" mi="0" ci="2" mb="0" cb="0"/><line nr="514" mi="8" ci="0" mb="2" cb="0"/><line nr="515" mi="14" ci="0" mb="2" cb="0"/><line nr="516" mi="7" ci="0" mb="0" cb="0"/><line nr="517" mi="6" ci="0" mb="0" cb="0"/><line nr="518" mi="6" ci="0" mb="0" cb="0"/><line nr="519" mi="4" ci="0" mb="0" cb="0"/><line nr="520" mi="4" ci="0" mb="0" cb="0"/><line nr="521" mi="3" ci="0" mb="0" cb="0"/><line nr="522" mi="1" ci="0" mb="0" cb="0"/><line nr="523" mi="1" ci="0" mb="0" cb="0"/><line nr="525" mi="0" ci="5" mb="0" cb="0"/><line nr="533" mi="0" ci="4" mb="0" cb="0"/><line nr="534" mi="2" ci="2" mb="0" cb="0"/><line nr="535" mi="0" ci="2" mb="0" cb="0"/><line nr="537" mi="2" ci="0" mb="0" cb="0"/><line nr="538" mi="17" ci="0" mb="2" cb="0"/><line nr="539" mi="10" ci="0" mb="4" cb="0"/><line nr="540" mi="2" ci="0" mb="0" cb="0"/><line nr="542" mi="2" ci="0" mb="0" cb="0"/><line nr="545" mi="0" ci="2" mb="0" cb="0"/><line nr="548" mi="0" ci="5" mb="0" cb="0"/><line nr="549" mi="0" ci="2" mb="0" cb="0"/><line nr="550" mi="0" ci="2" mb="1" cb="1"/><line nr="551" mi="8" ci="0" mb="0" cb="0"/><line nr="552" mi="17" ci="0" mb="0" cb="0"/><line nr="553" mi="14" ci="0" mb="0" cb="0"/><line nr="555" mi="0" ci="3" mb="0" cb="0"/><line nr="556" mi="0" ci="3" mb="0" cb="0"/><line nr="557" mi="0" ci="7" mb="0" cb="2"/><line nr="560" mi="0" ci="5" mb="0" cb="0"/><line nr="561" mi="0" ci="8" mb="0" cb="0"/><line nr="562" mi="13" ci="4" mb="0" cb="0"/><line nr="563" mi="13" ci="1" mb="0" cb="0"/><line nr="567" mi="2" ci="2" mb="0" cb="0"/><line nr="568" mi="2" ci="2" mb="0" cb="0"/><line nr="569" mi="0" ci="1" mb="0" cb="0"/><line nr="571" mi="3" ci="0" mb="0" cb="0"/><line nr="572" mi="8" ci="0" mb="2" cb="0"/><line nr="573" mi="26" ci="0" mb="0" cb="0"/><line nr="576" mi="0" ci="3" mb="0" cb="0"/><line nr="578" mi="0" ci="21" mb="0" cb="0"/><line nr="580" mi="0" ci="13" mb="0" cb="0"/><line nr="583" mi="2" ci="0" mb="0" cb="0"/><line nr="585" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="0" ci="8" mb="0" cb="0"/><line nr="591" mi="0" ci="7" mb="0" cb="0"/><line nr="592" mi="0" ci="1" mb="0" cb="0"/><line nr="593" mi="0" ci="2" mb="0" cb="0"/><line nr="594" mi="0" ci="5" mb="1" cb="1"/><line nr="595" mi="0" ci="4" mb="0" cb="0"/><line nr="596" mi="0" ci="4" mb="0" cb="0"/><line nr="597" mi="0" ci="8" mb="0" cb="0"/><line nr="598" mi="0" ci="5" mb="0" cb="0"/><line nr="599" mi="0" ci="5" mb="0" cb="0"/><line nr="601" mi="3" ci="0" mb="0" cb="0"/><line nr="602" mi="4" ci="0" mb="0" cb="0"/><line nr="603" mi="8" ci="0" mb="0" cb="0"/><line nr="604" mi="5" ci="0" mb="0" cb="0"/><line nr="605" mi="5" ci="0" mb="0" cb="0"/><line nr="610" mi="0" ci="2" mb="0" cb="0"/><line nr="614" mi="8" ci="0" mb="2" cb="0"/><line nr="615" mi="14" ci="0" mb="2" cb="0"/><line nr="616" mi="7" ci="0" mb="0" cb="0"/><line nr="617" mi="6" ci="0" mb="0" cb="0"/><line nr="618" mi="6" ci="0" mb="0" cb="0"/><line nr="619" mi="4" ci="0" mb="0" cb="0"/><line nr="620" mi="4" ci="0" mb="0" cb="0"/><line nr="621" mi="3" ci="0" mb="0" cb="0"/><line nr="622" mi="1" ci="0" mb="0" cb="0"/><line nr="623" mi="1" ci="0" mb="0" cb="0"/><line nr="625" mi="0" ci="5" mb="0" cb="0"/><line nr="637" mi="0" ci="1" mb="0" cb="0"/><line nr="646" mi="0" ci="7" mb="0" cb="2"/><line nr="647" mi="0" ci="2" mb="0" cb="2"/><line nr="648" mi="0" ci="8" mb="0" cb="0"/><line nr="649" mi="0" ci="8" mb="0" cb="2"/><line nr="650" mi="0" ci="8" mb="0" cb="0"/><line nr="651" mi="0" ci="4" mb="0" cb="0"/><line nr="653" mi="0" ci="2" mb="0" cb="0"/><line nr="656" mi="0" ci="8" mb="0" cb="0"/><line nr="657" mi="0" ci="9" mb="0" cb="0"/><line nr="659" mi="0" ci="8" mb="0" cb="2"/><line nr="660" mi="0" ci="8" mb="0" cb="0"/><line nr="661" mi="0" ci="9" mb="0" cb="0"/><line nr="662" mi="0" ci="8" mb="0" cb="0"/><line nr="663" mi="0" ci="4" mb="0" cb="0"/><line nr="665" mi="0" ci="2" mb="0" cb="0"/><line nr="671" mi="0" ci="2" mb="0" cb="2"/><line nr="672" mi="0" ci="7" mb="0" cb="0"/><line nr="673" mi="0" ci="8" mb="0" cb="2"/><line nr="674" mi="0" ci="7" mb="0" cb="0"/><line nr="675" mi="0" ci="4" mb="0" cb="0"/><line nr="677" mi="0" ci="2" mb="0" cb="0"/><line nr="680" mi="0" ci="7" mb="0" cb="0"/><line nr="681" mi="0" ci="8" mb="0" cb="0"/><line nr="682" mi="0" ci="8" mb="0" cb="2"/><line nr="683" mi="0" ci="7" mb="0" cb="0"/><line nr="684" mi="0" ci="8" mb="0" cb="0"/><line nr="686" mi="0" ci="8" mb="0" cb="0"/><line nr="687" mi="0" ci="4" mb="0" cb="0"/><line nr="689" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="900" covered="1291"/><counter type="BRANCH" missed="62" covered="50"/><counter type="LINE" missed="122" covered="259"/><counter type="COMPLEXITY" missed="90" covered="55"/><counter type="METHOD" missed="52" covered="37"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Modulo.java"><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="2"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="1" cb="1"/><line nr="56" mi="2" ci="0" mb="2" cb="0"/><line nr="57" mi="21" ci="0" mb="0" cb="0"/><line nr="58" mi="11" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="11" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="2" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="9" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="9" ci="0" mb="2" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="2" cb="0"/><line nr="81" mi="13" ci="0" mb="0" cb="0"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="9" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="24" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="30" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="2" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="16" ci="0" mb="2" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="2" cb="0"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="13" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="20" mb="0" cb="2"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="2"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="15" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="13" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="1" cb="1"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="1" ci="7" mb="1" cb="1"/><line nr="185" mi="4" ci="10" mb="1" cb="1"/><line nr="186" mi="0" ci="7" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="2" cb="0"/><line nr="217" mi="14" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="2" ci="0" mb="2" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="6" ci="0" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="2" cb="0"/><line nr="239" mi="18" ci="0" mb="0" cb="0"/><line nr="241" mi="7" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="2" cb="0"/><line nr="243" mi="8" ci="0" mb="0" cb="0"/><line nr="245" mi="15" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="2" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="17" ci="0" mb="2" cb="0"/><line nr="257" mi="10" ci="0" mb="4" cb="0"/><line nr="258" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="1" cb="1"/><line nr="269" mi="8" ci="0" mb="0" cb="0"/><line nr="270" mi="17" ci="0" mb="0" cb="0"/><line nr="271" mi="14" ci="0" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="7" mb="0" cb="2"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="8" mb="0" cb="0"/><line nr="280" mi="13" ci="4" mb="0" cb="0"/><line nr="281" mi="13" ci="1" mb="0" cb="0"/><line nr="285" mi="2" ci="1" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="13" mb="0" cb="0"/><line nr="290" mi="0" ci="8" mb="0" cb="0"/><line nr="294" mi="7" ci="0" mb="0" cb="0"/><line nr="295" mi="1" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="5" ci="0" mb="2" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="8" ci="0" mb="0" cb="0"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="3" ci="0" mb="0" cb="0"/><line nr="305" mi="4" ci="0" mb="0" cb="0"/><line nr="306" mi="8" ci="0" mb="0" cb="0"/><line nr="307" mi="5" ci="0" mb="0" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="8" ci="0" mb="2" cb="0"/><line nr="318" mi="14" ci="0" mb="2" cb="0"/><line nr="319" mi="7" ci="0" mb="0" cb="0"/><line nr="320" mi="6" ci="0" mb="0" cb="0"/><line nr="321" mi="6" ci="0" mb="0" cb="0"/><line nr="322" mi="4" ci="0" mb="0" cb="0"/><line nr="323" mi="4" ci="0" mb="0" cb="0"/><line nr="324" mi="3" ci="0" mb="0" cb="0"/><line nr="325" mi="1" ci="0" mb="0" cb="0"/><line nr="326" mi="1" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="5" ci="0" mb="0" cb="0"/><line nr="346" mi="2" ci="0" mb="2" cb="0"/><line nr="347" mi="11" ci="0" mb="0" cb="0"/><line nr="349" mi="9" ci="0" mb="2" cb="0"/><line nr="350" mi="14" ci="0" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="356" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="5" ci="0" mb="0" cb="0"/><line nr="358" mi="2" ci="0" mb="2" cb="0"/><line nr="359" mi="13" ci="0" mb="0" cb="0"/><line nr="361" mi="9" ci="0" mb="2" cb="0"/><line nr="362" mi="16" ci="0" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="2" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="2" ci="0" mb="0" cb="0"/><line nr="371" mi="17" ci="0" mb="2" cb="0"/><line nr="372" mi="10" ci="0" mb="4" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="2" ci="0" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="7" ci="0" mb="0" cb="0"/><line nr="382" mi="2" ci="2" mb="0" cb="0"/><line nr="383" mi="2" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><line nr="386" mi="0" ci="13" mb="0" cb="0"/><line nr="388" mi="0" ci="8" mb="0" cb="0"/><line nr="392" mi="6" ci="0" mb="0" cb="0"/><line nr="393" mi="6" ci="0" mb="0" cb="0"/><line nr="394" mi="1" ci="0" mb="0" cb="0"/><line nr="395" mi="2" ci="0" mb="0" cb="0"/><line nr="396" mi="5" ci="0" mb="2" cb="0"/><line nr="397" mi="5" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="0" cb="0"/><line nr="399" mi="5" ci="0" mb="0" cb="0"/><line nr="401" mi="5" ci="0" mb="0" cb="0"/><line nr="403" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="4" ci="0" mb="0" cb="0"/><line nr="405" mi="5" ci="0" mb="0" cb="0"/><line nr="407" mi="5" ci="0" mb="0" cb="0"/><line nr="410" mi="1" ci="0" mb="0" cb="0"/><line nr="413" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="15" ci="0" mb="4" cb="0"/><line nr="418" mi="5" ci="0" mb="0" cb="0"/><line nr="419" mi="7" ci="0" mb="0" cb="0"/><line nr="420" mi="4" ci="0" mb="0" cb="0"/><line nr="421" mi="6" ci="0" mb="0" cb="0"/><line nr="422" mi="7" ci="0" mb="0" cb="0"/><line nr="423" mi="4" ci="0" mb="0" cb="0"/><line nr="424" mi="3" ci="0" mb="0" cb="0"/><line nr="425" mi="1" ci="0" mb="0" cb="0"/><line nr="426" mi="1" ci="0" mb="0" cb="0"/><line nr="428" mi="0" ci="5" mb="0" cb="0"/><line nr="445" mi="0" ci="12" mb="0" cb="0"/><line nr="447" mi="0" ci="13" mb="0" cb="0"/><line nr="450" mi="8" ci="0" mb="0" cb="0"/><line nr="453" mi="0" ci="12" mb="0" cb="0"/><line nr="455" mi="0" ci="13" mb="0" cb="0"/><line nr="458" mi="8" ci="0" mb="0" cb="0"/><line nr="461" mi="0" ci="1" mb="0" cb="0"/><line nr="467" mi="2" ci="0" mb="2" cb="0"/><line nr="468" mi="7" ci="0" mb="0" cb="0"/><line nr="469" mi="8" ci="0" mb="2" cb="0"/><line nr="470" mi="7" ci="0" mb="0" cb="0"/><line nr="471" mi="4" ci="0" mb="0" cb="0"/><line nr="473" mi="2" ci="0" mb="0" cb="0"/><line nr="474" mi="8" ci="0" mb="0" cb="0"/><line nr="481" mi="7" ci="0" mb="2" cb="0"/><line nr="482" mi="2" ci="0" mb="2" cb="0"/><line nr="483" mi="8" ci="0" mb="0" cb="0"/><line nr="484" mi="8" ci="0" mb="2" cb="0"/><line nr="485" mi="8" ci="0" mb="0" cb="0"/><line nr="486" mi="4" ci="0" mb="0" cb="0"/><line nr="488" mi="2" ci="0" mb="0" cb="0"/><line nr="490" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1023" covered="473"/><counter type="BRANCH" missed="69" covered="15"/><counter type="LINE" missed="155" covered="97"/><counter type="COMPLEXITY" missed="79" covered="18"/><counter type="METHOD" missed="42" covered="13"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Division.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="1" cb="1"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="2" cb="0"/><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="13" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="1" cb="1"/><line nr="53" mi="0" ci="18" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="2" cb="0"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="15" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="2"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="11" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="2" mb="0" cb="2"/><line nr="99" mi="0" ci="21" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="11" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="8" mb="1" cb="1"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="1" cb="1"/><line nr="123" mi="0" ci="13" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="6" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="24" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="30" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="3" ci="2" mb="1" cb="1"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="1" cb="1"/><line nr="155" mi="0" ci="14" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="2" cb="0"/><line nr="159" mi="7" ci="0" mb="0" cb="0"/><line nr="161" mi="13" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="2"/><line nr="172" mi="0" ci="21" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="2"/><line nr="176" mi="0" ci="10" mb="0" cb="0"/><line nr="178" mi="0" ci="19" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="13" mb="0" cb="0"/><line nr="195" mi="0" ci="8" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="2"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="1" ci="7" mb="1" cb="1"/><line nr="230" mi="4" ci="10" mb="1" cb="1"/><line nr="231" mi="0" ci="7" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="1" cb="1"/><line nr="265" mi="8" ci="0" mb="0" cb="0"/><line nr="266" mi="17" ci="0" mb="0" cb="0"/><line nr="267" mi="14" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="7" mb="0" cb="2"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="8" mb="0" cb="0"/><line nr="276" mi="13" ci="4" mb="0" cb="0"/><line nr="277" mi="13" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="11" mb="0" cb="0"/><line nr="286" mi="0" ci="8" mb="0" cb="0"/><line nr="290" mi="0" ci="7" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="2"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="8" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="302" mi="0" ci="8" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="8" ci="0" mb="2" cb="0"/><line nr="314" mi="14" ci="0" mb="2" cb="0"/><line nr="315" mi="7" ci="0" mb="0" cb="0"/><line nr="316" mi="6" ci="0" mb="0" cb="0"/><line nr="317" mi="6" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="3" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="1" ci="0" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="5" ci="0" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="2" cb="0"/><line nr="343" mi="11" ci="0" mb="0" cb="0"/><line nr="345" mi="9" ci="0" mb="2" cb="0"/><line nr="346" mi="14" ci="0" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="5" ci="0" mb="0" cb="0"/><line nr="353" mi="5" ci="0" mb="0" cb="0"/><line nr="354" mi="2" ci="0" mb="2" cb="0"/><line nr="355" mi="13" ci="0" mb="0" cb="0"/><line nr="357" mi="9" ci="0" mb="2" cb="0"/><line nr="358" mi="16" ci="0" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="2" ci="2" mb="0" cb="0"/><line nr="364" mi="2" ci="3" mb="0" cb="0"/><line nr="365" mi="0" ci="2" mb="0" cb="0"/><line nr="367" mi="7" ci="0" mb="0" cb="0"/><line nr="369" mi="2" ci="2" mb="0" cb="0"/><line nr="370" mi="0" ci="1" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="373" mi="0" ci="13" mb="0" cb="0"/><line nr="375" mi="0" ci="8" mb="0" cb="0"/><line nr="379" mi="6" ci="0" mb="0" cb="0"/><line nr="380" mi="6" ci="0" mb="0" cb="0"/><line nr="381" mi="1" ci="0" mb="0" cb="0"/><line nr="382" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="5" ci="0" mb="2" cb="0"/><line nr="384" mi="5" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="0" cb="0"/><line nr="386" mi="5" ci="0" mb="0" cb="0"/><line nr="388" mi="6" ci="0" mb="0" cb="0"/><line nr="390" mi="4" ci="0" mb="0" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="5" ci="0" mb="0" cb="0"/><line nr="394" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="1" ci="0" mb="0" cb="0"/><line nr="400" mi="0" ci="2" mb="0" cb="0"/><line nr="404" mi="15" ci="0" mb="4" cb="0"/><line nr="405" mi="5" ci="0" mb="0" cb="0"/><line nr="406" mi="7" ci="0" mb="0" cb="0"/><line nr="407" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="6" ci="0" mb="0" cb="0"/><line nr="409" mi="7" ci="0" mb="0" cb="0"/><line nr="410" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="3" ci="0" mb="0" cb="0"/><line nr="412" mi="1" ci="0" mb="0" cb="0"/><line nr="413" mi="1" ci="0" mb="0" cb="0"/><line nr="415" mi="0" ci="5" mb="0" cb="0"/><line nr="431" mi="0" ci="12" mb="0" cb="0"/><line nr="433" mi="0" ci="13" mb="0" cb="0"/><line nr="436" mi="8" ci="0" mb="0" cb="0"/><line nr="439" mi="0" ci="12" mb="0" cb="0"/><line nr="441" mi="0" ci="13" mb="0" cb="0"/><line nr="444" mi="8" ci="0" mb="0" cb="0"/><line nr="450" mi="0" ci="16" mb="0" cb="0"/><line nr="452" mi="0" ci="13" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="0" cb="0"/><line nr="457" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="2" ci="2" mb="0" cb="0"/><line nr="461" mi="0" ci="2" mb="0" cb="0"/><line nr="463" mi="2" ci="0" mb="0" cb="0"/><line nr="464" mi="17" ci="0" mb="2" cb="0"/><line nr="465" mi="10" ci="0" mb="4" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="468" mi="2" ci="0" mb="0" cb="0"/><line nr="470" mi="0" ci="2" mb="0" cb="0"/><line nr="473" mi="0" ci="5" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="2" mb="1" cb="1"/><line nr="476" mi="8" ci="0" mb="0" cb="0"/><line nr="477" mi="17" ci="0" mb="0" cb="0"/><line nr="478" mi="14" ci="0" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="3" mb="0" cb="0"/><line nr="482" mi="0" ci="2" mb="0" cb="2"/><line nr="483" mi="0" ci="5" mb="0" cb="0"/><line nr="486" mi="0" ci="5" mb="0" cb="0"/><line nr="487" mi="0" ci="8" mb="0" cb="0"/><line nr="488" mi="13" ci="4" mb="0" cb="0"/><line nr="489" mi="13" ci="1" mb="0" cb="0"/><line nr="493" mi="2" ci="2" mb="0" cb="0"/><line nr="494" mi="2" ci="2" mb="0" cb="0"/><line nr="495" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="3" ci="0" mb="0" cb="0"/><line nr="498" mi="8" ci="0" mb="2" cb="0"/><line nr="499" mi="26" ci="0" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="0" cb="0"/><line nr="503" mi="0" ci="2" mb="0" cb="0"/><line nr="505" mi="0" ci="4" mb="0" cb="0"/><line nr="506" mi="0" ci="8" mb="0" cb="2"/><line nr="507" mi="0" ci="7" mb="0" cb="0"/><line nr="508" mi="0" ci="6" mb="0" cb="2"/><line nr="509" mi="0" ci="4" mb="0" cb="0"/><line nr="512" mi="0" ci="11" mb="0" cb="0"/><line nr="516" mi="0" ci="12" mb="0" cb="0"/><line nr="518" mi="0" ci="13" mb="0" cb="0"/><line nr="521" mi="8" ci="0" mb="0" cb="0"/><line nr="523" mi="0" ci="2" mb="0" cb="0"/><line nr="525" mi="4" ci="0" mb="0" cb="0"/><line nr="526" mi="8" ci="0" mb="2" cb="0"/><line nr="527" mi="7" ci="0" mb="0" cb="0"/><line nr="528" mi="6" ci="0" mb="2" cb="0"/><line nr="529" mi="4" ci="0" mb="0" cb="0"/><line nr="532" mi="11" ci="0" mb="0" cb="0"/><line nr="535" mi="0" ci="12" mb="0" cb="0"/><line nr="537" mi="0" ci="13" mb="0" cb="0"/><line nr="540" mi="8" ci="0" mb="0" cb="0"/><line nr="542" mi="0" ci="2" mb="0" cb="0"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="545" mi="0" ci="8" mb="0" cb="2"/><line nr="546" mi="0" ci="7" mb="0" cb="0"/><line nr="547" mi="0" ci="6" mb="0" cb="2"/><line nr="548" mi="0" ci="4" mb="0" cb="0"/><line nr="551" mi="0" ci="11" mb="0" cb="0"/><line nr="555" mi="0" ci="1" mb="0" cb="0"/><line nr="563" mi="0" ci="7" mb="0" cb="2"/><line nr="564" mi="0" ci="2" mb="0" cb="2"/><line nr="565" mi="0" ci="8" mb="0" cb="0"/><line nr="566" mi="0" ci="8" mb="0" cb="2"/><line nr="567" mi="0" ci="8" mb="0" cb="0"/><line nr="568" mi="0" ci="4" mb="0" cb="0"/><line nr="570" mi="0" ci="2" mb="0" cb="0"/><line nr="573" mi="0" ci="8" mb="0" cb="0"/><line nr="574" mi="0" ci="9" mb="0" cb="0"/><line nr="575" mi="0" ci="10" mb="0" cb="2"/><line nr="576" mi="0" ci="10" mb="0" cb="0"/><line nr="577" mi="0" ci="11" mb="0" cb="0"/><line nr="578" mi="0" ci="12" mb="0" cb="0"/><line nr="579" mi="0" ci="4" mb="0" cb="0"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="0" ci="2" mb="0" cb="2"/><line nr="588" mi="0" ci="7" mb="0" cb="0"/><line nr="589" mi="0" ci="8" mb="0" cb="2"/><line nr="590" mi="0" ci="7" mb="0" cb="0"/><line nr="591" mi="0" ci="4" mb="0" cb="0"/><line nr="593" mi="0" ci="2" mb="0" cb="0"/><line nr="595" mi="0" ci="2" mb="0" cb="0"/><line nr="596" mi="0" ci="7" mb="0" cb="0"/><line nr="597" mi="0" ci="8" mb="0" cb="0"/><line nr="599" mi="0" ci="10" mb="0" cb="2"/><line nr="601" mi="0" ci="9" mb="0" cb="0"/><line nr="602" mi="0" ci="10" mb="0" cb="0"/><line nr="603" mi="0" ci="2" mb="0" cb="0"/><line nr="604" mi="0" ci="2" mb="0" cb="0"/><line nr="605" mi="0" ci="12" mb="0" cb="0"/><line nr="606" mi="0" ci="4" mb="0" cb="0"/><line nr="608" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="690" covered="1273"/><counter type="BRANCH" missed="47" covered="53"/><counter type="LINE" missed="89" covered="228"/><counter type="COMPLEXITY" missed="68" covered="55"/><counter type="METHOD" missed="39" covered="34"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="Addition.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="16" mb="1" cb="1"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="20" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="17" mb="1" cb="1"/><line nr="53" mi="0" ci="10" mb="1" cb="3"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="1" cb="1"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="17" ci="0" mb="0" cb="0"/><line nr="66" mi="14" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="13" ci="4" mb="0" cb="0"/><line nr="76" mi="13" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="2"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="1" cb="1"/><line nr="118" mi="0" ci="21" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="11" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="10" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="16" mb="1" cb="1"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="20" mb="0" cb="2"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="13" mb="0" cb="0"/><line nr="170" mi="0" ci="8" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="2"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="1" ci="7" mb="1" cb="1"/><line nr="205" mi="4" ci="10" mb="1" cb="1"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="11" mb="0" cb="0"/><line nr="228" mi="0" ci="8" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="2"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="8" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="8" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="1" ci="7" mb="1" cb="1"/><line nr="256" mi="4" ci="10" mb="1" cb="1"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="2" ci="2" mb="0" cb="0"/><line nr="279" mi="2" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="7" ci="0" mb="0" cb="0"/><line nr="284" mi="2" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="291" mi="13" ci="0" mb="2" cb="0"/><line nr="293" mi="6" ci="0" mb="2" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="5" ci="0" mb="0" cb="0"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="15" ci="0" mb="2" cb="0"/><line nr="304" mi="6" ci="0" mb="2" cb="0"/><line nr="305" mi="4" ci="0" mb="0" cb="0"/><line nr="309" mi="0" ci="13" mb="0" cb="0"/><line nr="311" mi="0" ci="8" mb="0" cb="0"/><line nr="315" mi="6" ci="0" mb="0" cb="0"/><line nr="316" mi="6" ci="0" mb="0" cb="0"/><line nr="317" mi="1" ci="0" mb="0" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="5" ci="0" mb="2" cb="0"/><line nr="320" mi="5" ci="0" mb="0" cb="0"/><line nr="321" mi="4" ci="0" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="5" ci="0" mb="0" cb="0"/><line nr="326" mi="4" ci="0" mb="0" cb="0"/><line nr="327" mi="4" ci="0" mb="0" cb="0"/><line nr="328" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="333" mi="1" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="15" ci="0" mb="4" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="7" ci="0" mb="0" cb="0"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="6" ci="0" mb="0" cb="0"/><line nr="346" mi="7" ci="0" mb="0" cb="0"/><line nr="347" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="3" ci="0" mb="0" cb="0"/><line nr="349" mi="1" ci="0" mb="0" cb="0"/><line nr="350" mi="1" ci="0" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="363" mi="0" ci="13" mb="0" cb="0"/><line nr="365" mi="0" ci="13" mb="0" cb="0"/><line nr="368" mi="2" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="13" mb="0" cb="0"/><line nr="374" mi="0" ci="13" mb="0" cb="0"/><line nr="377" mi="2" ci="0" mb="0" cb="0"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="383" mi="0" ci="16" mb="0" cb="0"/><line nr="385" mi="0" ci="13" mb="0" cb="0"/><line nr="388" mi="2" ci="0" mb="0" cb="0"/><line nr="391" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="2" ci="2" mb="0" cb="0"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="397" mi="2" ci="0" mb="0" cb="0"/><line nr="398" mi="17" ci="0" mb="2" cb="0"/><line nr="399" mi="10" ci="0" mb="4" cb="0"/><line nr="400" mi="2" ci="0" mb="0" cb="0"/><line nr="402" mi="2" ci="0" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="408" mi="0" ci="5" mb="0" cb="0"/><line nr="409" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="0" ci="2" mb="1" cb="1"/><line nr="411" mi="8" ci="0" mb="0" cb="0"/><line nr="412" mi="17" ci="0" mb="0" cb="0"/><line nr="413" mi="14" ci="0" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="2"/><line nr="418" mi="0" ci="5" mb="0" cb="0"/><line nr="421" mi="0" ci="5" mb="0" cb="0"/><line nr="422" mi="0" ci="8" mb="0" cb="0"/><line nr="423" mi="13" ci="4" mb="0" cb="0"/><line nr="424" mi="13" ci="1" mb="0" cb="0"/><line nr="428" mi="2" ci="2" mb="0" cb="0"/><line nr="429" mi="2" ci="2" mb="0" cb="0"/><line nr="430" mi="0" ci="1" mb="0" cb="0"/><line nr="432" mi="3" ci="0" mb="0" cb="0"/><line nr="433" mi="8" ci="0" mb="2" cb="0"/><line nr="434" mi="26" ci="0" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="439" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="4" ci="0" mb="0" cb="0"/><line nr="442" mi="8" ci="0" mb="2" cb="0"/><line nr="443" mi="7" ci="0" mb="0" cb="0"/><line nr="444" mi="6" ci="0" mb="2" cb="0"/><line nr="445" mi="4" ci="0" mb="0" cb="0"/><line nr="448" mi="11" ci="0" mb="0" cb="0"/><line nr="452" mi="0" ci="12" mb="0" cb="0"/><line nr="454" mi="0" ci="13" mb="0" cb="0"/><line nr="457" mi="8" ci="0" mb="0" cb="0"/><line nr="460" mi="0" ci="12" mb="0" cb="0"/><line nr="462" mi="0" ci="13" mb="0" cb="0"/><line nr="465" mi="8" ci="0" mb="0" cb="0"/><line nr="470" mi="0" ci="1" mb="0" cb="0"/><line nr="478" mi="0" ci="7" mb="0" cb="2"/><line nr="479" mi="0" ci="2" mb="0" cb="2"/><line nr="480" mi="0" ci="8" mb="0" cb="0"/><line nr="481" mi="0" ci="8" mb="0" cb="2"/><line nr="482" mi="0" ci="8" mb="0" cb="0"/><line nr="483" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="0" ci="2" mb="0" cb="0"/><line nr="487" mi="0" ci="2" mb="0" cb="0"/><line nr="488" mi="0" ci="8" mb="0" cb="2"/><line nr="489" mi="0" ci="11" mb="0" cb="0"/><line nr="491" mi="0" ci="2" mb="0" cb="0"/><line nr="497" mi="0" ci="2" mb="0" cb="2"/><line nr="498" mi="0" ci="7" mb="0" cb="0"/><line nr="499" mi="0" ci="8" mb="0" cb="2"/><line nr="500" mi="0" ci="7" mb="0" cb="0"/><line nr="501" mi="0" ci="4" mb="0" cb="0"/><line nr="503" mi="0" ci="2" mb="0" cb="0"/><line nr="505" mi="0" ci="2" mb="0" cb="0"/><line nr="506" mi="0" ci="10" mb="0" cb="2"/><line nr="507" mi="0" ci="7" mb="0" cb="0"/><line nr="508" mi="0" ci="1" mb="0" cb="0"/><line nr="509" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="485" covered="1033"/><counter type="BRANCH" missed="37" covered="45"/><counter type="LINE" missed="63" covered="200"/><counter type="COMPLEXITY" missed="61" covered="52"/><counter type="METHOD" missed="37" covered="35"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><counter type="INSTRUCTION" missed="4549" covered="5984"/><counter type="BRANCH" missed="323" covered="235"/><counter type="LINE" missed="633" covered="1142"/><counter type="COMPLEXITY" missed="437" covered="263"/><counter type="METHOD" missed="246" covered="175"/><counter type="CLASS" missed="0" covered="30"/></package><package name="neureka/devices/host"><class name="neureka/devices/host/HostCPU$Range" sourcefilename="HostCPU.java"/><class name="neureka/devices/host/HostCPU$NativeExecutor" sourcefilename="HostCPU.java"><method name="&lt;init&gt;" desc="(Lneureka/devices/host/HostCPU;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPool" desc="()Ljava/util/concurrent/ThreadPoolExecutor;" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="threaded" desc="(ILneureka/devices/host/HostCPU$Range;)V" line="142"><counter type="INSTRUCTION" missed="9" covered="90"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$threaded$0" desc="(Lneureka/Neureka;Lneureka/devices/host/HostCPU$Range;II)V" line="152"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="112"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/host/HostCPU" sourcefilename="HostCPU.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lneureka/devices/host/HostCPU;" line="28"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExecutor" desc="()Lneureka/devices/host/HostCPU$NativeExecutor;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_execute" desc="([Lneureka/Tsr;ILneureka/backend/api/operations/Operation;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="()V" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restore" desc="(Lneureka/Tsr;)Lneureka/devices/Device;" line="55"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="store" desc="(Lneureka/Tsr;)Lneureka/devices/Device;" line="60"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="store" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/devices/Device;" line="66"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="has" desc="(Lneureka/Tsr;)Z" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="free" desc="(Lneureka/Tsr;)Lneureka/devices/Device;" line="78"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overwrite64" desc="(Lneureka/Tsr;[D)Lneureka/devices/Device;" line="84"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overwrite32" desc="(Lneureka/Tsr;[F)Lneureka/devices/Device;" line="89"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swap" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/devices/Device;" line="94"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value64f" desc="(Lneureka/Tsr;)[D" line="99"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value32f" desc="(Lneureka/Tsr;)[F" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value64f" desc="(Lneureka/Tsr;I)D" line="109"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value32f" desc="(Lneureka/Tsr;I)F" line="114"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTensors" desc="()Ljava/util/Collection;" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="72"/><counter type="LINE" missed="10" covered="19"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="7" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HostCPU.java"><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="2" ci="4" mb="1" cb="1"/><line nr="144" mi="0" ci="8" mb="0" cb="4"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="2"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="13" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="11" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="16" mb="0" cb="2"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="184"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="14" covered="42"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="7" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="38" covered="184"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="14" covered="42"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="7" covered="16"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/optimization/implementations"><class name="neureka/optimization/implementations/Template" sourcefilename="Template.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/optimization/implementations/ADAM" sourcefilename="ADAM.java"><method name="&lt;init&gt;" desc="(Lneureka/Tsr;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_optimize" desc="(Lneureka/Tsr;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="optimize" desc="(Lneureka/Tsr;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="80"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1" covered="138"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/optimization/implementations/SGD" sourcefilename="SGD.java"><method name="&lt;init&gt;" desc="(D)V" line="48"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimize" desc="(Lneureka/Tsr;)V" line="55"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="learningRate" desc="()D" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="66"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Template.java"><line nr="5" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ADAM.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="15" mb="0" cb="0"/><line nr="65" mi="0" ci="16" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="15" mb="0" cb="0"/><line nr="69" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="138"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SGD.java"><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="14" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="41" covered="138"/><counter type="LINE" missed="11" covered="19"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="2" covered="1"/></package><package name="neureka/dtype/custom"><class name="neureka/dtype/custom/I16" sourcefilename="I16.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signed" desc="()Z" line="19"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBytes" desc="()I" line="24"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetType" desc="()Ljava/lang/Class;" line="29"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetArrayType" desc="()Ljava/lang/Class;" line="34"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="holderType" desc="()Ljava/lang/Class;" line="39"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="holderArrayType" desc="()Ljava/lang/Class;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foreignHolderBytesToTarget" desc="([B)Ljava/lang/Short;" line="49"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTarget" desc="(Ljava/lang/Short;)Ljava/lang/Short;" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetToForeignHolderBytes" desc="(Ljava/lang/Short;)[B" line="61"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/io/DataInput;I)[S" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/util/Iterator;I)[S" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/io/DataInput;I)[S" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/util/Iterator;I)[S" line="82"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolder" desc="(Ljava/lang/Object;)Ljava/lang/Short;" line="87"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolderArray" desc="(Ljava/lang/Object;)[S" line="105"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTarget" desc="(Ljava/lang/Object;)Ljava/lang/Short;" line="110"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTargetArray" desc="(Ljava/lang/Object;)[S" line="115"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_readData" desc="(Ljava/io/DataInput;I)[S" line="119"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="113" covered="51"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="27" covered="13"/><counter type="COMPLEXITY" missed="17" covered="9"/><counter type="METHOD" missed="10" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/dtype/custom/UI16" sourcefilename="UI16.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signed" desc="()Z" line="20"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBytes" desc="()I" line="25"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetType" desc="()Ljava/lang/Class;" line="30"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetArrayType" desc="()Ljava/lang/Class;" line="35"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="holderType" desc="()Ljava/lang/Class;" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="holderArrayType" desc="()Ljava/lang/Class;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foreignHolderBytesToTarget" desc="([B)Ljava/lang/Integer;" line="50"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTarget" desc="(Ljava/lang/Short;)Ljava/lang/Integer;" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetToForeignHolderBytes" desc="(Ljava/lang/Integer;)[B" line="64"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/io/DataInput;I)[I" line="71"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/util/Iterator;I)[I" line="82"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/io/DataInput;I)[S" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/util/Iterator;I)[S" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolder" desc="(Ljava/lang/Object;)Ljava/lang/Short;" line="97"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolderArray" desc="(Ljava/lang/Object;)[S" line="102"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTarget" desc="(Ljava/lang/Object;)Ljava/lang/Integer;" line="107"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTargetArray" desc="(Ljava/lang/Object;)[I" line="112"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="51"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="13"/><counter type="COMPLEXITY" missed="10" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/dtype/custom/UI8" sourcefilename="UI8.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signed" desc="()Z" line="19"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBytes" desc="()I" line="24"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetType" desc="()Ljava/lang/Class;" line="29"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetArrayType" desc="()Ljava/lang/Class;" line="34"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="holderType" desc="()Ljava/lang/Class;" line="39"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="holderArrayType" desc="()Ljava/lang/Class;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foreignHolderBytesToTarget" desc="([B)Ljava/lang/Short;" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTarget" desc="(Ljava/lang/Byte;)Ljava/lang/Short;" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetToForeignHolderBytes" desc="(Ljava/lang/Short;)[B" line="61"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/io/DataInput;I)[S" line="66"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/util/Iterator;I)[S" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/io/DataInput;I)[B" line="82"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/util/Iterator;I)[B" line="93"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolder" desc="(Ljava/lang/Object;)Ljava/lang/Byte;" line="98"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolderArray" desc="(Ljava/lang/Object;)[B" line="103"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTarget" desc="(Ljava/lang/Object;)Ljava/lang/Short;" line="108"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTargetArray" desc="(Ljava/lang/Object;)[S" line="126"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="100" covered="68"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="25" covered="16"/><counter type="COMPLEXITY" missed="15" covered="11"/><counter type="METHOD" missed="8" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/dtype/custom/I64" sourcefilename="I64.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signed" desc="()Z" line="19"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBytes" desc="()I" line="24"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetType" desc="()Ljava/lang/Class;" line="29"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetArrayType" desc="()Ljava/lang/Class;" line="34"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="holderType" desc="()Ljava/lang/Class;" line="39"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="holderArrayType" desc="()Ljava/lang/Class;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foreignHolderBytesToTarget" desc="([B)Ljava/lang/Long;" line="49"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTarget" desc="(Ljava/lang/Long;)Ljava/lang/Long;" line="57"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetToForeignHolderBytes" desc="(Ljava/lang/Long;)[B" line="62"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/io/DataInput;I)[J" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/util/Iterator;I)[J" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/io/DataInput;I)[J" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/util/Iterator;I)[J" line="83"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolder" desc="(Ljava/lang/Object;)Ljava/lang/Long;" line="88"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolderArray" desc="(Ljava/lang/Object;)[J" line="106"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTarget" desc="(Ljava/lang/Object;)Ljava/lang/Long;" line="111"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTargetArray" desc="(Ljava/lang/Object;)[J" line="116"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="83" covered="51"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="21" covered="13"/><counter type="COMPLEXITY" missed="15" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/dtype/custom/I32" sourcefilename="I32.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signed" desc="()Z" line="20"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBytes" desc="()I" line="25"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetType" desc="()Ljava/lang/Class;" line="30"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetArrayType" desc="()Ljava/lang/Class;" line="35"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="holderType" desc="()Ljava/lang/Class;" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="holderArrayType" desc="()Ljava/lang/Class;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foreignHolderBytesToTarget" desc="([B)Ljava/lang/Integer;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTarget" desc="(Ljava/lang/Integer;)Ljava/lang/Integer;" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetToForeignHolderBytes" desc="(Ljava/lang/Integer;)[B" line="61"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/io/DataInput;I)[I" line="71"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/util/Iterator;I)[I" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/io/DataInput;I)[I" line="81"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/util/Iterator;I)[I" line="86"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolder" desc="(Ljava/lang/Object;)Ljava/lang/Integer;" line="91"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolderArray" desc="(Ljava/lang/Object;)[I" line="109"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTarget" desc="(Ljava/lang/Object;)Ljava/lang/Integer;" line="114"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTargetArray" desc="(Ljava/lang/Object;)[I" line="119"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_readData" desc="(Ljava/io/DataInput;I)[I" line="123"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="115" covered="67"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="27" covered="14"/><counter type="COMPLEXITY" missed="17" covered="9"/><counter type="METHOD" missed="10" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/dtype/custom/F32" sourcefilename="F32.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signed" desc="()Z" line="19"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBytes" desc="()I" line="24"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetType" desc="()Ljava/lang/Class;" line="29"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetArrayType" desc="()Ljava/lang/Class;" line="34"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="holderType" desc="()Ljava/lang/Class;" line="39"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="holderArrayType" desc="()Ljava/lang/Class;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foreignHolderBytesToTarget" desc="([B)Ljava/lang/Float;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTarget" desc="(Ljava/lang/Float;)Ljava/lang/Float;" line="54"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetToForeignHolderBytes" desc="(Ljava/lang/Float;)[B" line="59"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/io/DataInput;I)[F" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/util/Iterator;I)[F" line="75"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readForeignDataFrom" desc="(Ljava/io/DataInput;I)[F" line="83"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/util/Iterator;I)[F" line="88"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToHolder" desc="(Ljava/lang/Object;)Ljava/lang/Float;" line="94"><counter type="INSTRUCTION" missed="40" covered="20"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="9" covered="4"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToHolderArray" desc="(Ljava/lang/Object;)[F" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTarget" desc="(Ljava/lang/Object;)Ljava/lang/Float;" line="117"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTargetArray" desc="(Ljava/lang/Object;)[F" line="122"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="102"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="15" covered="19"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="6" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/dtype/custom/UI64" sourcefilename="UI64.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signed" desc="()Z" line="18"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBytes" desc="()I" line="23"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetType" desc="()Ljava/lang/Class;" line="28"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetArrayType" desc="()Ljava/lang/Class;" line="33"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="holderType" desc="()Ljava/lang/Class;" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="holderArrayType" desc="()Ljava/lang/Class;" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foreignHolderBytesToTarget" desc="([B)Ljava/math/BigInteger;" line="49"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTarget" desc="(Ljava/lang/Long;)Ljava/math/BigInteger;" line="58"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetToForeignHolderBytes" desc="(Ljava/math/BigInteger;)[B" line="64"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/io/DataInput;I)[Ljava/math/BigInteger;" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/util/Iterator;I)[Ljava/math/BigInteger;" line="81"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/io/DataInput;I)[J" line="86"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/util/Iterator;I)[J" line="91"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolder" desc="(Ljava/lang/Object;)Ljava/lang/Long;" line="96"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolderArray" desc="(Ljava/lang/Object;)[J" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTarget" desc="(Ljava/lang/Object;)Ljava/math/BigInteger;" line="106"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTargetArray" desc="(Ljava/lang/Object;)[Ljava/math/BigInteger;" line="111"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="87"/><counter type="LINE" missed="9" covered="19"/><counter type="COMPLEXITY" missed="9" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/dtype/custom/I8" sourcefilename="I8.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signed" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBytes" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetType" desc="()Ljava/lang/Class;" line="33"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetArrayType" desc="()Ljava/lang/Class;" line="38"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="holderType" desc="()Ljava/lang/Class;" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="holderArrayType" desc="()Ljava/lang/Class;" line="48"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foreignHolderBytesToTarget" desc="([B)Ljava/lang/Byte;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTarget" desc="(Ljava/lang/Byte;)Ljava/lang/Byte;" line="58"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetToForeignHolderBytes" desc="(Ljava/lang/Byte;)[B" line="63"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/io/DataInput;I)[B" line="68"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/util/Iterator;I)[B" line="75"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/io/DataInput;I)[B" line="80"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/util/Iterator;I)[B" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolder" desc="(Ljava/lang/Object;)Ljava/lang/Byte;" line="92"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolderArray" desc="(Ljava/lang/Object;)[B" line="110"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTarget" desc="(Ljava/lang/Object;)Ljava/lang/Byte;" line="115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTargetArray" desc="(Ljava/lang/Object;)[B" line="120"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="97" covered="32"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="25" covered="10"/><counter type="COMPLEXITY" missed="15" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/dtype/custom/F64" sourcefilename="F64.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signed" desc="()Z" line="20"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBytes" desc="()I" line="25"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetType" desc="()Ljava/lang/Class;" line="30"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetArrayType" desc="()Ljava/lang/Class;" line="35"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="holderType" desc="()Ljava/lang/Class;" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="holderArrayType" desc="()Ljava/lang/Class;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foreignHolderBytesToTarget" desc="([B)Ljava/lang/Double;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTarget" desc="(Ljava/lang/Double;)Ljava/lang/Double;" line="55"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetToForeignHolderBytes" desc="(Ljava/lang/Double;)[B" line="60"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/io/DataInput;I)[D" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/util/Iterator;I)[D" line="80"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/io/DataInput;I)[D" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/util/Iterator;I)[D" line="92"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToHolder" desc="(Ljava/lang/Object;)Ljava/lang/Double;" line="99"><counter type="INSTRUCTION" missed="25" covered="35"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToHolderArray" desc="(Ljava/lang/Object;)[D" line="117"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTarget" desc="(Ljava/lang/Object;)Ljava/lang/Double;" line="122"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTargetArray" desc="(Ljava/lang/Object;)[D" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_readFrom" desc="(Ljava/io/DataInput;I)[D" line="131"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="61" covered="197"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="14" covered="28"/><counter type="COMPLEXITY" missed="13" covered="15"/><counter type="METHOD" missed="6" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/dtype/custom/UI32" sourcefilename="UI32.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signed" desc="()Z" line="16"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBytes" desc="()I" line="21"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetType" desc="()Ljava/lang/Class;" line="26"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetArrayType" desc="()Ljava/lang/Class;" line="31"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="holderType" desc="()Ljava/lang/Class;" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="holderArrayType" desc="()Ljava/lang/Class;" line="41"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foreignHolderBytesToTarget" desc="([B)Ljava/lang/Long;" line="46"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTarget" desc="(Ljava/lang/Integer;)Ljava/lang/Long;" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetToForeignHolderBytes" desc="(Ljava/lang/Long;)[B" line="60"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/io/DataInput;I)[J" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readAndConvertForeignDataFrom" desc="(Ljava/util/Iterator;I)[J" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/io/DataInput;I)[I" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readForeignDataFrom" desc="(Ljava/util/Iterator;I)[I" line="83"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolder" desc="(Ljava/lang/Object;)Ljava/lang/Integer;" line="88"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToHolderArray" desc="(Ljava/lang/Object;)[I" line="93"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTarget" desc="(Ljava/lang/Object;)Ljava/lang/Long;" line="98"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToTargetArray" desc="(Ljava/lang/Object;)[J" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="95"/><counter type="LINE" missed="9" covered="13"/><counter type="COMPLEXITY" missed="9" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="F64.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="83" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="15" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="15" mb="0" cb="2"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="1" cb="1"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="1" cb="1"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="1" cb="1"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="1" cb="1"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="1" cb="1"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="1" cb="1"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="2"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="197"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="14" covered="28"/><counter type="COMPLEXITY" missed="13" covered="15"/><counter type="METHOD" missed="6" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="I16.java"><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="2" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="2" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="2" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="2" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="2" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="2" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="7" ci="0" mb="2" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="113" covered="51"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="27" covered="13"/><counter type="COMPLEXITY" missed="17" covered="9"/><counter type="METHOD" missed="10" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="I64.java"><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="2" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="2" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="2" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="2" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="2" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="51"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="21" covered="13"/><counter type="COMPLEXITY" missed="15" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="I32.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="2" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="2" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="2" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="2" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="2" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="2" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="2" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="115" covered="67"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="27" covered="14"/><counter type="COMPLEXITY" missed="17" covered="9"/><counter type="METHOD" missed="10" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UI8.java"><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="2" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="2" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="2" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="2" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="2" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="2" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="68"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="25" covered="16"/><counter type="COMPLEXITY" missed="15" covered="11"/><counter type="METHOD" missed="8" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UI32.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="34" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="27" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="95"/><counter type="LINE" missed="9" covered="13"/><counter type="COMPLEXITY" missed="9" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="I8.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="2" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="2" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="2" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="2" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="97" covered="32"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="25" covered="10"/><counter type="COMPLEXITY" missed="15" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UI16.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="16" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="2" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="51"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="13"/><counter type="COMPLEXITY" missed="10" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UI64.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="12" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="87"/><counter type="LINE" missed="9" covered="19"/><counter type="COMPLEXITY" missed="9" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="F32.java"><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="29" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="15" mb="0" cb="2"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="1" cb="1"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="1" cb="1"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="1" cb="1"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="2" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="2" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="102"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="15" covered="19"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="6" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="718" covered="801"/><counter type="BRANCH" missed="85" covered="17"/><counter type="LINE" missed="186" covered="158"/><counter type="COMPLEXITY" missed="132" covered="102"/><counter type="METHOD" missed="85" covered="98"/><counter type="CLASS" missed="0" covered="10"/></package><package name="neureka/backend/standard/operations/other"><class name="neureka/backend/standard/operations/other/DimFit" sourcefilename="DimFit.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="134"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="121"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$6" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="120"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$5" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="63"><counter type="INSTRUCTION" missed="169" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="49"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="41"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lneureka/backend/api/ExecutionCall;)F" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="290" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/backend/standard/operations/other/DimTrim" sourcefilename="DimTrim.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pad" desc="(Lneureka/Tsr;[IZ)Lneureka/Tsr;" line="89"><counter type="INSTRUCTION" missed="1" covered="184"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="(Lneureka/Tsr;[IZ)Lneureka/Tsr;" line="133"><counter type="INSTRUCTION" missed="1" covered="161"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="168"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$trim$19" desc="(Ljava/lang/Integer;)I" line="157"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$trim$18" desc="(Ljava/lang/Integer;)I" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$trim$17" desc="(Ljava/lang/Integer;)I" line="155"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$trim$16" desc="(Ljava/lang/Integer;)I" line="154"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$trim$15" desc="(Ljava/lang/Integer;)I" line="153"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$pad$14" desc="(Ljava/lang/Integer;)I" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$pad$13" desc="(Ljava/lang/Integer;)I" line="124"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$pad$12" desc="(Ljava/lang/Integer;)I" line="123"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$pad$11" desc="(Ljava/lang/Integer;)I" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$pad$10" desc="(Ljava/lang/Integer;)I" line="121"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="78"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="63"><counter type="INSTRUCTION" missed="32" covered="35"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="49"><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(IILneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="57"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="(Lneureka/calculus/Function;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="56"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="45"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lneureka/backend/api/ExecutionCall;)F" line="43"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="17" covered="20"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="83" covered="526"/><counter type="BRANCH" missed="10" covered="24"/><counter type="LINE" missed="6" covered="93"/><counter type="COMPLEXITY" missed="13" covered="29"/><counter type="METHOD" missed="4" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/other/CopyLeft" sourcefilename="CopyLeft.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="108"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="199"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$23" desc="(Lneureka/backend/api/ExecutionCall;)V" line="184"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$22" desc="(Lneureka/backend/api/ExecutionCall;)V" line="171"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$21" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="155"><counter type="INSTRUCTION" missed="1" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$20" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="151"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$19" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="150"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$18" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="148"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$17" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="145"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="144"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/ExecutionCall;)V" line="124"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="(Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="99"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$13" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="111"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$12" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="105"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="87"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="([D[Lneureka/Tsr;D[I)D" line="88"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDIConsumer;" line="80"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="([DDLneureka/ndim/iterators/NDIterator;)D" line="81"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="64"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="60"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="59"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="54"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lneureka/backend/api/ExecutionCall;)F" line="48"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)Ljava/lang/String;" line="33"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="81" covered="377"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="16" covered="76"/><counter type="COMPLEXITY" missed="14" covered="21"/><counter type="METHOD" missed="10" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/other/Reshape" sourcefilename="Reshape.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reshaped" desc="(Lneureka/Tsr;[IZ)Lneureka/Tsr;" line="111"><counter type="INSTRUCTION" missed="1" covered="40"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invert" desc="([I)[I" line="124"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="143"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="98"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="97"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="85"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="75"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Lneureka/calculus/Function;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="80"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(Lneureka/calculus/Function;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="79"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="70"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lneureka/backend/api/ExecutionCall;)F" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Ljava/util/List;)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="9" covered="92"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="39"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="312"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="3" covered="65"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/other/CopyRight" sourcefilename="CopyRight.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="105"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;)V" line="85"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;)V" line="67"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="55"><counter type="INSTRUCTION" missed="1" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="38"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="128" covered="141"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="24" covered="25"/><counter type="COMPLEXITY" missed="13" covered="7"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/other/Randomization" sourcefilename="Randomization.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="119"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$12" desc="(Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="85"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;II)V" line="100"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;II)V" line="90"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="73"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="70"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$6" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="67"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$5" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="55"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDXConsumer;" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="(D[I)D" line="43"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDIConsumer;" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(DLneureka/ndim/iterators/NDIterator;)D" line="31"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="295" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="CopyRight.java"><line nr="21" mi="0" ci="9" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="2"/><line nr="27" mi="0" ci="7" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="2"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="11" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="10" ci="0" mb="2" cb="0"/><line nr="40" mi="8" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="2" ci="2" mb="0" cb="0"/><line nr="46" mi="2" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="2" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="1" ci="7" mb="1" cb="1"/><line nr="57" mi="0" ci="26" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="2" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="10" ci="0" mb="0" cb="0"/><line nr="70" mi="10" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="8" ci="0" mb="2" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="10" ci="0" mb="0" cb="0"/><line nr="88" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="128" covered="141"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="24" covered="25"/><counter type="COMPLEXITY" missed="13" covered="7"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DimTrim.java"><line nr="16" mi="2" ci="6" mb="1" cb="1"/><line nr="22" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="8" ci="5" mb="3" cb="1"/><line nr="36" mi="9" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="11" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="1" cb="1"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="13" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="15" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="4" ci="6" mb="2" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="1" cb="1"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="14" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="2" ci="2" mb="0" cb="0"/><line nr="78" mi="2" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="1" ci="10" mb="1" cb="1"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="2"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="2"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="2"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="1" ci="10" mb="1" cb="1"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="20" mb="0" cb="4"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="15" mb="0" cb="4"/><line nr="144" mi="0" ci="10" mb="0" cb="2"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="526"/><counter type="BRANCH" missed="10" covered="24"/><counter type="LINE" missed="6" covered="93"/><counter type="COMPLEXITY" missed="13" covered="29"/><counter type="METHOD" missed="4" covered="21"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DimFit.java"><line nr="13" mi="8" ci="0" mb="2" cb="0"/><line nr="19" mi="9" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="13" ci="0" mb="4" cb="0"/><line nr="33" mi="9" ci="0" mb="0" cb="0"/><line nr="35" mi="11" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="2" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="9" ci="0" mb="0" cb="0"/><line nr="64" mi="9" ci="0" mb="4" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="20" ci="0" mb="4" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="20" ci="0" mb="4" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="15" ci="0" mb="4" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="2" cb="0"/><line nr="82" mi="6" ci="0" mb="2" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="9" ci="0" mb="2" cb="0"/><line nr="89" mi="16" ci="0" mb="4" cb="0"/><line nr="90" mi="18" ci="0" mb="4" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="290" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Randomization.java"><line nr="23" mi="9" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="20" ci="0" mb="2" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="20" ci="0" mb="2" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="2" cb="0"/><line nr="56" mi="8" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="17" ci="0" mb="2" cb="0"/><line nr="59" mi="10" ci="0" mb="4" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="2" cb="0"/><line nr="75" mi="26" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="13" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="2" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="295" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="57" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CopyLeft.java"><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="2"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="2"/><line nr="38" mi="0" ci="11" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="11" mb="0" cb="4"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="2" ci="2" mb="0" cb="0"/><line nr="54" mi="2" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="2"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="20" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="13" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="17" mb="1" cb="1"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="13" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="1" cb="1"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="2" ci="2" mb="0" cb="0"/><line nr="145" mi="2" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="1" ci="7" mb="1" cb="1"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="26" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="11" mb="0" cb="0"/><line nr="166" mi="0" ci="8" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="377"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="16" covered="76"/><counter type="COMPLEXITY" missed="14" covered="21"/><counter type="METHOD" missed="10" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Reshape.java"><line nr="24" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="2"/><line nr="46" mi="0" ci="6" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="1" cb="1"/><line nr="49" mi="9" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="2"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="2"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="1" cb="1"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="13" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="14" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="2"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="2" ci="2" mb="0" cb="0"/><line nr="98" mi="2" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="1" ci="10" mb="1" cb="1"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="1" cb="1"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="16" mb="0" cb="2"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="0" cb="2"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="312"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="3" covered="65"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="917" covered="1356"/><counter type="BRANCH" missed="82" covered="66"/><counter type="LINE" missed="153" covered="259"/><counter type="COMPLEXITY" missed="102" covered="78"/><counter type="METHOD" missed="53" covered="53"/><counter type="CLASS" missed="2" covered="4"/></package><package name="neureka/ndim/iterators/types/simple"><class name="neureka/ndim/iterators/types/simple/SimpleD1CIterator" sourcefilename="SimpleD1CIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/types/simple/SimpleD1Configuration;)V" line="12"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="()V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decrement" desc="()V" line="23"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="29"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)I" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[I" line="39"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([I)V" line="49"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rank" desc="()I" line="54"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="SimpleD1CIterator.java"><line nr="12" mi="8" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="8" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="neureka/backend/api/algorithms"><class name="neureka/backend/api/algorithms/Algorithm$BackwardADAnalyzer" sourcefilename="Algorithm.java"/><class name="neureka/backend/api/algorithms/Algorithm" sourcefilename="Algorithm.java"/><class name="neureka/backend/api/algorithms/Algorithm$ForwardADAnalyzer" sourcefilename="Algorithm.java"/><class name="neureka/backend/api/algorithms/Algorithm$DrainInstantiation" sourcefilename="Algorithm.java"/><class name="neureka/backend/api/algorithms/Algorithm$ADAgentSupplier" sourcefilename="Algorithm.java"/><class name="neureka/backend/api/algorithms/AbstractBaseAlgorithm" sourcefilename="AbstractBaseAlgorithm.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recursiveReductionOf" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Consumer;)Lneureka/Tsr;" line="29"><counter type="INSTRUCTION" missed="3" covered="100"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setImplementationFor" desc="(Ljava/lang/Class;Lneureka/backend/api/implementations/ImplementationFor;)Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImplementationFor" desc="(Ljava/lang/Class;)Lneureka/backend/api/implementations/ImplementationFor;" line="93"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$recursiveReductionOf$2" desc="(Ljava/util/function/Consumer;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$recursiveReductionOf$1" desc="(Lneureka/Tsr;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$recursiveReductionOf$0" desc="(Lneureka/devices/Device;Lneureka/Tsr;)V" line="45"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="140"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="4" covered="28"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/api/algorithms/Algorithm$InitialCallHook" sourcefilename="Algorithm.java"/><class name="neureka/backend/api/algorithms/AbstractFunctionalAlgorithm" sourcefilename="AbstractFunctionalAlgorithm.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAlgorithmSuitableFor" desc="(Lneureka/backend/api/ExecutionCall;)F" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findDeviceFor" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/devices/Device;" line="58"><counter type="INSTRUCTION" missed="4" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canAlgorithmPerformForwardADFor" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canAlgorithmPerformBackwardADFor" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supplyADAgentFor" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="79"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleInsteadOfDevice" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleRecursivelyAccordingToArity" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="93"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instantiateNewTensorsForExecutionIn" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuitabilityChecker" desc="()Lneureka/backend/api/algorithms/Algorithm$SuitabilityChecker;" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSuitabilityChecker" desc="(Lneureka/backend/api/algorithms/Algorithm$SuitabilityChecker;)Lneureka/backend/api/algorithms/AbstractFunctionalAlgorithm;" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeviceFinder" desc="()Lneureka/backend/api/algorithms/Algorithm$DeviceFinder;" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDeviceFinder" desc="(Lneureka/backend/api/algorithms/Algorithm$DeviceFinder;)Lneureka/backend/api/algorithms/AbstractFunctionalAlgorithm;" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getForwardADAnalyzer" desc="()Lneureka/backend/api/algorithms/Algorithm$ForwardADAnalyzer;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setForwardADAnalyzer" desc="(Lneureka/backend/api/algorithms/Algorithm$ForwardADAnalyzer;)Lneureka/backend/api/algorithms/AbstractFunctionalAlgorithm;" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBackwardADAnalyzer" desc="()Lneureka/backend/api/algorithms/Algorithm$BackwardADAnalyzer;" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBackwardADAnalyzer" desc="(Lneureka/backend/api/algorithms/Algorithm$BackwardADAnalyzer;)Lneureka/backend/api/algorithms/AbstractFunctionalAlgorithm;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getADAgentSupplier" desc="()Lneureka/backend/api/algorithms/Algorithm$ADAgentSupplier;" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setADAgentSupplier" desc="(Lneureka/backend/api/algorithms/Algorithm$ADAgentSupplier;)Lneureka/backend/api/algorithms/AbstractFunctionalAlgorithm;" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCallHook" desc="()Lneureka/backend/api/algorithms/Algorithm$InitialCallHook;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCallHook" desc="(Lneureka/backend/api/algorithms/Algorithm$InitialCallHook;)Lneureka/backend/api/algorithms/AbstractFunctionalAlgorithm;" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRJAgent" desc="()Lneureka/backend/api/algorithms/Algorithm$RecursiveJunctionAgent;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRJAgent" desc="(Lneureka/backend/api/algorithms/Algorithm$RecursiveJunctionAgent;)Lneureka/backend/api/algorithms/AbstractFunctionalAlgorithm;" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDrainInstantiation" desc="()Lneureka/backend/api/algorithms/Algorithm$DrainInstantiation;" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDrainInstantiation" desc="(Lneureka/backend/api/algorithms/Algorithm$DrainInstantiation;)Lneureka/backend/api/algorithms/AbstractFunctionalAlgorithm;" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="89"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="8" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/api/algorithms/Algorithm$SuitabilityChecker" sourcefilename="Algorithm.java"/><class name="neureka/backend/api/algorithms/GenericAlgorithm" sourcefilename="GenericAlgorithm.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILneureka/backend/api/operations/Operation;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAlgorithmSuitableFor" desc="(Lneureka/backend/api/ExecutionCall;)F" line="81"><counter type="INSTRUCTION" missed="8" covered="32"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findDeviceFor" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/devices/Device;" line="95"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canAlgorithmPerformForwardADFor" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="100"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canAlgorithmPerformBackwardADFor" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="105"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supplyADAgentFor" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="111"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleInsteadOfDevice" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="126"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleRecursivelyAccordingToArity" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="132"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instantiateNewTensorsForExecutionIn" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="138"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$supplyADAgentFor$7" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="121"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$supplyADAgentFor$6" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="120"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$supplyADAgentFor$5" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="116"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$supplyADAgentFor$4" desc="(Lneureka/calculus/Function;Lneureka/Tsr;Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="115"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lneureka/backend/api/operations/Operation;Lneureka/backend/api/ExecutionCall;)V" line="29"><counter type="INSTRUCTION" missed="21" covered="55"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="16"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Ljava/lang/Object;Lneureka/backend/api/ExecutionCall;Lgroovy/lang/GroovyShell;Ljava/lang/String;II)V" line="63"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([DLneureka/backend/api/ExecutionCall;Lneureka/calculus/Function;II)V" line="43"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Lneureka/Tsr;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="67" covered="285"/><counter type="BRANCH" missed="9" covered="15"/><counter type="LINE" missed="14" covered="54"/><counter type="COMPLEXITY" missed="7" covered="22"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/api/algorithms/Algorithm$RecursiveJunctionAgent" sourcefilename="Algorithm.java"/><class name="neureka/backend/api/algorithms/Algorithm$DeviceFinder" sourcefilename="Algorithm.java"/><sourcefile name="Algorithm.java"/><sourcefile name="AbstractFunctionalAlgorithm.java"><line nr="34" mi="3" ci="5" mb="0" cb="0"/><line nr="35" mi="8" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="5" mb="0" cb="0"/><line nr="37" mi="3" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="3" ci="5" mb="0" cb="0"/><line nr="40" mi="3" ci="5" mb="0" cb="0"/><line nr="41" mi="3" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="4" ci="6" mb="1" cb="1"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="89"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="8" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractBaseAlgorithm.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="2"/><line nr="36" mi="0" ci="9" mb="1" cb="3"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="2"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="2"/><line nr="74" mi="0" ci="16" mb="2" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="140"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="4" covered="28"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericAlgorithm.java"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="10" mb="0" cb="0"/><line nr="29" mi="0" ci="9" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="1" cb="1"/><line nr="36" mi="7" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="2" cb="0"/><line nr="44" mi="8" ci="0" mb="2" cb="0"/><line nr="45" mi="10" ci="0" mb="0" cb="0"/><line nr="47" mi="9" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="2"/><line nr="64" mi="0" ci="8" mb="0" cb="2"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="17" mb="0" cb="2"/><line nr="83" mi="0" ci="9" mb="0" cb="4"/><line nr="84" mi="8" ci="2" mb="3" cb="1"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="2"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="17" mb="0" cb="0"/><line nr="116" mi="0" ci="14" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="17" mb="0" cb="0"/><line nr="121" mi="0" ci="14" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="1" cb="1"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="9" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="285"/><counter type="BRANCH" missed="9" covered="15"/><counter type="LINE" missed="14" covered="54"/><counter type="COMPLEXITY" missed="7" covered="22"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="103" covered="514"/><counter type="BRANCH" missed="13" covered="27"/><counter type="LINE" missed="19" covered="100"/><counter type="COMPLEXITY" missed="19" covered="52"/><counter type="METHOD" missed="9" covered="42"/><counter type="CLASS" missed="0" covered="3"/></package><package name="neureka/autograd"><class name="neureka/autograd/GraphNode" sourcefilename="GraphNode.java"><method name="usesAD" desc="()Z" line="92"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usesForwardAD" desc="()Z" line="101"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usesReverseAD" desc="()Z" line="110"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAndRemovePendingError" desc="()Lneureka/autograd/PendingError;" line="174"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPayload" desc="()Lneureka/Tsr;" line="240"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setPayload" desc="(Lneureka/Tsr;)V" line="244"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="264"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_attachChild" desc="(Lneureka/autograd/GraphNode;)V" line="313"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCachable" desc="()Z" line="333"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="obtainLocking" desc="(Lneureka/autograd/GraphLock;)V" line="342"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeave" desc="()Z" line="351"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGraphLeave" desc="()Z" line="355"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVirtual" desc="()Z" line="366"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lneureka/calculus/Function;Ljava/lang/Object;Ljava/util/function/Supplier;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="189"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_construct" desc="(Lneureka/Tsr;Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Lneureka/autograd/GraphLock;)V" line="438"><counter type="INSTRUCTION" missed="5" covered="287"/><counter type="BRANCH" missed="7" covered="49"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="7" covered="22"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_modeOf" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/calculus/Function;)I" line="569"><counter type="INSTRUCTION" missed="0" covered="105"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_migrateAndOrApplyError" desc="(Lneureka/Tsr;Ljava/util/function/Consumer;)V" line="598"><counter type="INSTRUCTION" missed="3" covered="28"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backward" desc="(Lneureka/Tsr;)V" line="620"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_backward" desc="(Lneureka/Tsr;Ljava/util/Set;Z)V" line="650"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_carryPendingBackPropToGradients" desc="(Ljava/util/Set;)V" line="683"><counter type="INSTRUCTION" missed="3" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backwardJIT" desc="(Lneureka/Tsr;)V" line="707"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_backwardJIT" desc="(Lneureka/Tsr;Lneureka/autograd/GraphNode;)V" line="712"><counter type="INSTRUCTION" missed="8" covered="20"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_deleteDerivativesRecursively" desc="()V" line="749"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_numberOfReverseModeADChildren" desc="()I" line="761"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="779"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lneureka/autograd/GraphNode;)Ljava/util/List;" line="796"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="has" desc="(Lneureka/autograd/GraphNode;)Z" line="808"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="819"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachDerivative" desc="(Ljava/util/function/BiConsumer;)V" line="826"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachBackward" desc="(Lneureka/Tsr;Ljava/util/function/BiConsumer;)V" line="836"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachTarget" desc="(Ljava/util/function/Consumer;)V" line="846"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachTargetAgentPair" desc="(Ljava/util/function/BiConsumer;)V" line="854"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasDerivatives" desc="()Z" line="869"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="()Ljava/lang/String;" line="876"><counter type="INSTRUCTION" missed="10" covered="42"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="886"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="894"><counter type="INSTRUCTION" missed="25" covered="86"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_toString" desc="(Ljava/lang/String;ZLjava/lang/String;)Ljava/lang/String;" line="926"><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMode" desc="()I" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReliesOnJustInTimeProp" desc="()Z" line="161"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPendingError" desc="()Lneureka/autograd/PendingError;" line="182"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUsedAsDerivative" desc="()Z" line="195"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="()Lneureka/calculus/Function;" line="203"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParents" desc="()[Lneureka/autograd/GraphNode;" line="213"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPayloadReferenceVersion" desc="()I" line="276"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLock" desc="()Lneureka/autograd/GraphLock;" line="297"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="306"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeID" desc="()J" line="323"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachTargetAgentPair$14" desc="(Ljava/util/function/BiConsumer;Lneureka/autograd/GraphNode;Ljava/util/List;)V" line="858"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachTargetAgentPair$13" desc="(Ljava/util/function/BiConsumer;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="859"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachTarget$12" desc="(Ljava/util/function/Consumer;Lneureka/autograd/GraphNode;Ljava/util/List;)V" line="847"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachBackward$11" desc="(Ljava/util/function/BiConsumer;Lneureka/Tsr;Lneureka/autograd/GraphNode;Ljava/util/List;)V" line="838"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachDerivative$10" desc="(Ljava/util/function/BiConsumer;Lneureka/autograd/GraphNode;Ljava/util/List;)V" line="828"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$forEachDerivative$9" desc="(Ljava/util/function/BiConsumer;Lneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="828"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$put$8" desc="(Lneureka/autograd/GraphNode;Lneureka/autograd/GraphNode;)I" line="779"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_backwardJIT$7" desc="(Lneureka/autograd/GraphNode;Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="734"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_backwardJIT$6" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="714"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_carryPendingBackPropToGradients$5" desc="(Ljava/util/Set;Lneureka/autograd/GraphNode;)V" line="684"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_backward$4" desc="(Ljava/util/Set;Lneureka/autograd/GraphNode;Lneureka/Tsr;)V" line="668"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$backward$3" desc="(Lneureka/autograd/GraphNode;)V" line="626"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$backward$2" desc="(Ljava/util/Set;Lneureka/autograd/GraphNode;)V" line="623"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_construct$1" desc="(Lneureka/Tsr;Lneureka/backend/api/ExecutionCall;Lneureka/calculus/Function;ILneureka/autograd/GraphNode;Lneureka/autograd/ADAgent;)V" line="508"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_setPayload$0" desc="()V" line="248"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="108" covered="1486"/><counter type="BRANCH" missed="42" covered="214"/><counter type="LINE" missed="17" covered="269"/><counter type="COMPLEXITY" missed="41" covered="149"/><counter type="METHOD" missed="5" covered="57"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/PendingError" sourcefilename="PendingError.java"><method name="&lt;init&gt;" desc="(Lneureka/Tsr;I)V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulate" desc="(Lneureka/Tsr;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFullyAccumulated" desc="()Z" line="31"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getToBeReceived" desc="()I" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAccumulatedError" desc="()Lneureka/Tsr;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/GraphLock" sourcefilename="GraphLock.java"><method name="&lt;init&gt;" desc="(Lneureka/calculus/Function;[Lneureka/Tsr;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLocked" desc="()Z" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/JITProp" sourcefilename="JITProp.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPending" desc="(Ljava/util/Set;)V" line="27"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="noteFinished" desc="(Lneureka/autograd/GraphNode;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finishedCount" desc="()I" line="49"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pendingCount" desc="()I" line="53"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V" line="61"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDone" desc="()Z" line="78"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="95"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$execute$0" desc="(Lneureka/autograd/GraphNode;)V" line="63"><counter type="INSTRUCTION" missed="10" covered="14"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="95" covered="112"/><counter type="BRANCH" missed="23" covered="11"/><counter type="LINE" missed="9" covered="25"/><counter type="COMPLEXITY" missed="21" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/DefaultADAgent" sourcefilename="DefaultADAgent.java"><method name="&lt;init&gt;" desc="(Lneureka/Tsr;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withContext" desc="(Ljava/util/Map;)Lneureka/autograd/DefaultADAgent;" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forward" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backward" desc="(Lneureka/autograd/GraphNode;Lneureka/Tsr;)Lneureka/Tsr;" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derivative" desc="()Lneureka/Tsr;" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasForward" desc="()Z" line="76"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasBackward" desc="()Z" line="84"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setForward" desc="(Lneureka/autograd/DefaultADAgent$ADAction;)Lneureka/autograd/DefaultADAgent;" line="44"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBackward" desc="(Lneureka/autograd/DefaultADAgent$ADAction;)Lneureka/autograd/DefaultADAgent;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$0" desc="(Ljava/lang/String;)Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="98"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/autograd/DefaultADAgent$ADAction" sourcefilename="DefaultADAgent.java"/><class name="neureka/autograd/ADAgent" sourcefilename="ADAgent.java"/><sourcefile name="DefaultADAgent.java"><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="1" cb="1"/><line nr="78" mi="1" ci="4" mb="1" cb="1"/><line nr="84" mi="7" ci="0" mb="2" cb="0"/><line nr="89" mi="0" ci="3" mb="1" cb="1"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="18" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="98"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphNode.java"><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="2"/><line nr="101" mi="0" ci="7" mb="0" cb="2"/><line nr="110" mi="0" ci="7" mb="0" cb="2"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="3" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="2" ci="8" mb="1" cb="1"/><line nr="244" mi="4" ci="2" mb="1" cb="1"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="2"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="2"/><line nr="251" mi="0" ci="11" mb="0" cb="2"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="7" mb="1" cb="3"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="2"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="8" mb="0" cb="2"/><line nr="314" mi="0" ci="6" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="6" mb="0" cb="0"/><line nr="333" mi="0" ci="9" mb="0" cb="2"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="10" mb="1" cb="3"/><line nr="355" mi="0" ci="5" mb="0" cb="2"/><line nr="356" mi="0" ci="17" mb="0" cb="2"/><line nr="357" mi="0" ci="7" mb="0" cb="2"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><line nr="366" mi="7" ci="0" mb="2" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="2"/><line nr="379" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="2"/><line nr="383" mi="0" ci="10" mb="0" cb="0"/><line nr="384" mi="0" ci="3" mb="0" cb="2"/><line nr="385" mi="0" ci="3" mb="0" cb="0"/><line nr="386" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="2"/><line nr="390" mi="0" ci="16" mb="0" cb="2"/><line nr="391" mi="0" ci="6" mb="0" cb="4"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="0" ci="8" mb="0" cb="2"/><line nr="399" mi="0" ci="7" mb="0" cb="0"/><line nr="400" mi="0" ci="16" mb="0" cb="2"/><line nr="404" mi="0" ci="5" mb="0" cb="2"/><line nr="405" mi="0" ci="4" mb="0" cb="2"/><line nr="406" mi="0" ci="5" mb="0" cb="0"/><line nr="411" mi="0" ci="7" mb="0" cb="4"/><line nr="412" mi="0" ci="8" mb="0" cb="0"/><line nr="413" mi="0" ci="6" mb="0" cb="0"/><line nr="415" mi="0" ci="8" mb="0" cb="0"/><line nr="419" mi="0" ci="14" mb="0" cb="0"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="421" mi="0" ci="8" mb="0" cb="0"/><line nr="422" mi="0" ci="8" mb="0" cb="0"/><line nr="426" mi="0" ci="1" mb="0" cb="0"/><line nr="438" mi="0" ci="7" mb="0" cb="2"/><line nr="439" mi="0" ci="7" mb="0" cb="2"/><line nr="440" mi="0" ci="4" mb="0" cb="0"/><line nr="441" mi="0" ci="4" mb="0" cb="2"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="444" mi="0" ci="4" mb="0" cb="0"/><line nr="445" mi="0" ci="2" mb="0" cb="2"/><line nr="446" mi="0" ci="8" mb="0" cb="2"/><line nr="447" mi="0" ci="3" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="0"/><line nr="450" mi="0" ci="6" mb="0" cb="0"/><line nr="451" mi="0" ci="3" mb="0" cb="0"/><line nr="452" mi="0" ci="5" mb="0" cb="0"/><line nr="453" mi="0" ci="8" mb="0" cb="2"/><line nr="454" mi="0" ci="10" mb="0" cb="0"/><line nr="455" mi="0" ci="5" mb="1" cb="1"/><line nr="456" mi="5" ci="0" mb="0" cb="0"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="462" mi="0" ci="5" mb="1" cb="1"/><line nr="463" mi="0" ci="2" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="2"/><line nr="465" mi="0" ci="17" mb="0" cb="2"/><line nr="466" mi="0" ci="7" mb="0" cb="0"/><line nr="468" mi="0" ci="10" mb="0" cb="2"/><line nr="469" mi="0" ci="3" mb="0" cb="0"/><line nr="472" mi="0" ci="6" mb="0" cb="4"/><line nr="473" mi="0" ci="21" mb="0" cb="4"/><line nr="475" mi="0" ci="6" mb="1" cb="3"/><line nr="477" mi="0" ci="3" mb="0" cb="2"/><line nr="478" mi="0" ci="9" mb="0" cb="2"/><line nr="479" mi="0" ci="7" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="2"/><line nr="481" mi="0" ci="1" mb="0" cb="0"/><line nr="482" mi="0" ci="6" mb="1" cb="3"/><line nr="484" mi="0" ci="5" mb="1" cb="3"/><line nr="486" mi="0" ci="9" mb="0" cb="0"/><line nr="488" mi="0" ci="1" mb="0" cb="0"/><line nr="491" mi="0" ci="2" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="0" ci="2" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="0" cb="0"/><line nr="503" mi="0" ci="5" mb="0" cb="0"/><line nr="504" mi="0" ci="8" mb="0" cb="0"/><line nr="508" mi="0" ci="5" mb="0" cb="0"/><line nr="510" mi="0" ci="8" mb="0" cb="0"/><line nr="512" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="0" ci="2" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="521" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="1" mb="0" cb="0"/><line nr="532" mi="0" ci="3" mb="1" cb="1"/><line nr="533" mi="0" ci="8" mb="0" cb="2"/><line nr="534" mi="0" ci="7" mb="0" cb="0"/><line nr="535" mi="0" ci="8" mb="1" cb="3"/><line nr="536" mi="0" ci="8" mb="0" cb="0"/><line nr="538" mi="0" ci="1" mb="0" cb="0"/><line nr="541" mi="0" ci="2" mb="0" cb="0"/><line nr="542" mi="0" ci="3" mb="0" cb="0"/><line nr="544" mi="0" ci="2" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="554" mi="0" ci="1" mb="0" cb="0"/><line nr="569" mi="0" ci="3" mb="0" cb="0"/><line nr="570" mi="0" ci="2" mb="0" cb="0"/><line nr="571" mi="0" ci="4" mb="0" cb="0"/><line nr="572" mi="0" ci="2" mb="0" cb="0"/><line nr="573" mi="0" ci="8" mb="0" cb="2"/><line nr="574" mi="0" ci="7" mb="0" cb="0"/><line nr="575" mi="0" ci="12" mb="0" cb="2"/><line nr="576" mi="0" ci="10" mb="0" cb="2"/><line nr="578" mi="0" ci="4" mb="0" cb="0"/><line nr="579" mi="0" ci="4" mb="0" cb="0"/><line nr="580" mi="0" ci="6" mb="0" cb="4"/><line nr="581" mi="0" ci="9" mb="0" cb="2"/><line nr="582" mi="0" ci="20" mb="0" cb="4"/><line nr="585" mi="0" ci="6" mb="1" cb="1"/><line nr="586" mi="0" ci="6" mb="0" cb="2"/><line nr="587" mi="0" ci="2" mb="0" cb="0"/><line nr="598" mi="0" ci="3" mb="0" cb="0"/><line nr="599" mi="0" ci="3" mb="0" cb="2"/><line nr="601" mi="0" ci="8" mb="0" cb="2"/><line nr="602" mi="1" ci="0" mb="0" cb="0"/><line nr="603" mi="2" ci="0" mb="0" cb="0"/><line nr="604" mi="0" ci="1" mb="0" cb="0"/><line nr="605" mi="0" ci="7" mb="0" cb="2"/><line nr="606" mi="0" ci="5" mb="0" cb="2"/><line nr="607" mi="0" ci="1" mb="0" cb="0"/><line nr="620" mi="0" ci="4" mb="0" cb="0"/><line nr="621" mi="0" ci="5" mb="0" cb="0"/><line nr="622" mi="0" ci="5" mb="0" cb="2"/><line nr="623" mi="0" ci="9" mb="0" cb="0"/><line nr="625" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="4" mb="1" cb="1"/><line nr="627" mi="5" ci="0" mb="0" cb="0"/><line nr="628" mi="0" ci="5" mb="0" cb="0"/><line nr="629" mi="0" ci="1" mb="0" cb="0"/><line nr="631" mi="0" ci="2" mb="0" cb="0"/><line nr="632" mi="0" ci="1" mb="0" cb="0"/><line nr="650" mi="0" ci="4" mb="0" cb="0"/><line nr="651" mi="0" ci="3" mb="1" cb="1"/><line nr="653" mi="0" ci="5" mb="0" cb="4"/><line nr="654" mi="0" ci="3" mb="0" cb="0"/><line nr="655" mi="0" ci="3" mb="0" cb="2"/><line nr="656" mi="0" ci="3" mb="0" cb="2"/><line nr="657" mi="0" ci="9" mb="0" cb="0"/><line nr="658" mi="0" ci="5" mb="0" cb="0"/><line nr="659" mi="0" ci="4" mb="0" cb="0"/><line nr="660" mi="0" ci="1" mb="0" cb="0"/><line nr="668" mi="0" ci="11" mb="0" cb="0"/><line nr="671" mi="0" ci="1" mb="0" cb="0"/><line nr="683" mi="0" ci="3" mb="0" cb="0"/><line nr="684" mi="0" ci="8" mb="0" cb="0"/><line nr="685" mi="0" ci="7" mb="1" cb="3"/><line nr="686" mi="0" ci="6" mb="0" cb="0"/><line nr="687" mi="0" ci="8" mb="1" cb="1"/><line nr="688" mi="3" ci="0" mb="0" cb="0"/><line nr="689" mi="0" ci="5" mb="0" cb="0"/><line nr="691" mi="0" ci="1" mb="0" cb="0"/><line nr="707" mi="0" ci="4" mb="0" cb="0"/><line nr="708" mi="0" ci="2" mb="0" cb="0"/><line nr="709" mi="0" ci="1" mb="0" cb="0"/><line nr="712" mi="0" ci="3" mb="0" cb="0"/><line nr="713" mi="0" ci="5" mb="0" cb="0"/><line nr="714" mi="0" ci="5" mb="0" cb="0"/><line nr="715" mi="0" ci="2" mb="0" cb="2"/><line nr="716" mi="0" ci="3" mb="0" cb="0"/><line nr="717" mi="0" ci="7" mb="1" cb="1"/><line nr="719" mi="0" ci="1" mb="0" cb="0"/><line nr="720" mi="3" ci="3" mb="3" cb="1"/><line nr="721" mi="4" ci="0" mb="0" cb="0"/><line nr="730" mi="1" ci="0" mb="0" cb="0"/><line nr="732" mi="0" ci="3" mb="1" cb="1"/><line nr="734" mi="0" ci="10" mb="0" cb="0"/><line nr="737" mi="0" ci="1" mb="0" cb="0"/><line nr="749" mi="0" ci="5" mb="0" cb="2"/><line nr="750" mi="0" ci="6" mb="1" cb="1"/><line nr="751" mi="0" ci="6" mb="0" cb="2"/><line nr="753" mi="0" ci="1" mb="0" cb="0"/><line nr="761" mi="0" ci="2" mb="0" cb="0"/><line nr="762" mi="0" ci="3" mb="1" cb="1"/><line nr="763" mi="0" ci="11" mb="0" cb="2"/><line nr="764" mi="0" ci="5" mb="2" cb="2"/><line nr="765" mi="0" ci="4" mb="0" cb="0"/><line nr="766" mi="0" ci="6" mb="1" cb="3"/><line nr="768" mi="0" ci="1" mb="0" cb="0"/><line nr="770" mi="0" ci="2" mb="0" cb="0"/><line nr="779" mi="0" ci="15" mb="0" cb="2"/><line nr="781" mi="0" ci="5" mb="0" cb="2"/><line nr="782" mi="0" ci="9" mb="0" cb="0"/><line nr="783" mi="0" ci="15" mb="0" cb="0"/><line nr="785" mi="0" ci="3" mb="0" cb="0"/><line nr="786" mi="0" ci="12" mb="0" cb="4"/><line nr="787" mi="0" ci="1" mb="0" cb="0"/><line nr="796" mi="5" ci="0" mb="2" cb="0"/><line nr="797" mi="6" ci="0" mb="0" cb="0"/><line nr="808" mi="5" ci="0" mb="2" cb="0"/><line nr="809" mi="5" ci="0" mb="0" cb="0"/><line nr="819" mi="0" ci="9" mb="0" cb="2"/><line nr="826" mi="1" ci="3" mb="1" cb="1"/><line nr="827" mi="0" ci="5" mb="0" cb="0"/><line nr="828" mi="0" ci="11" mb="0" cb="0"/><line nr="830" mi="0" ci="1" mb="0" cb="0"/><line nr="836" mi="0" ci="4" mb="0" cb="2"/><line nr="837" mi="0" ci="6" mb="0" cb="0"/><line nr="838" mi="0" ci="18" mb="0" cb="2"/><line nr="839" mi="0" ci="1" mb="0" cb="0"/><line nr="840" mi="0" ci="1" mb="0" cb="0"/><line nr="846" mi="0" ci="4" mb="0" cb="2"/><line nr="847" mi="0" ci="9" mb="0" cb="0"/><line nr="848" mi="0" ci="1" mb="0" cb="0"/><line nr="854" mi="1" ci="3" mb="1" cb="1"/><line nr="855" mi="0" ci="4" mb="0" cb="0"/><line nr="856" mi="0" ci="1" mb="0" cb="0"/><line nr="858" mi="0" ci="6" mb="0" cb="0"/><line nr="859" mi="0" ci="5" mb="0" cb="0"/><line nr="862" mi="0" ci="1" mb="0" cb="0"/><line nr="869" mi="6" ci="5" mb="3" cb="1"/><line nr="876" mi="0" ci="2" mb="0" cb="0"/><line nr="877" mi="0" ci="13" mb="0" cb="2"/><line nr="878" mi="0" ci="9" mb="0" cb="0"/><line nr="879" mi="10" ci="3" mb="1" cb="1"/><line nr="880" mi="0" ci="13" mb="0" cb="2"/><line nr="881" mi="0" ci="2" mb="0" cb="0"/><line nr="886" mi="4" ci="0" mb="0" cb="0"/><line nr="894" mi="0" ci="4" mb="0" cb="2"/><line nr="895" mi="0" ci="5" mb="0" cb="0"/><line nr="896" mi="0" ci="20" mb="0" cb="0"/><line nr="898" mi="0" ci="17" mb="0" cb="2"/><line nr="899" mi="0" ci="4" mb="1" cb="1"/><line nr="900" mi="0" ci="15" mb="0" cb="0"/><line nr="903" mi="0" ci="10" mb="0" cb="2"/><line nr="905" mi="2" ci="11" mb="1" cb="1"/><line nr="907" mi="10" ci="0" mb="0" cb="0"/><line nr="909" mi="3" ci="0" mb="2" cb="0"/><line nr="910" mi="2" ci="0" mb="0" cb="0"/><line nr="911" mi="8" ci="0" mb="0" cb="0"/><line nr="926" mi="0" ci="6" mb="0" cb="2"/><line nr="927" mi="0" ci="19" mb="0" cb="2"/><line nr="928" mi="0" ci="16" mb="0" cb="0"/><line nr="929" mi="0" ci="8" mb="0" cb="0"/><line nr="930" mi="0" ci="3" mb="0" cb="2"/><line nr="931" mi="0" ci="12" mb="0" cb="2"/><line nr="932" mi="0" ci="9" mb="0" cb="2"/><line nr="933" mi="0" ci="11" mb="0" cb="2"/><line nr="934" mi="0" ci="17" mb="0" cb="2"/><line nr="935" mi="0" ci="22" mb="0" cb="0"/><line nr="937" mi="0" ci="11" mb="0" cb="0"/><line nr="939" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="1486"/><counter type="BRANCH" missed="42" covered="214"/><counter type="LINE" missed="17" covered="269"/><counter type="COMPLEXITY" missed="41" covered="149"/><counter type="METHOD" missed="5" covered="57"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JITProp.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="8" ci="0" mb="2" cb="0"/><line nr="28" mi="8" ci="0" mb="2" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="1" cb="1"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="1" cb="1"/><line nr="40" mi="0" ci="14" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="1" cb="1"/><line nr="44" mi="0" ci="7" mb="1" cb="1"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="9" ci="0" mb="2" cb="0"/><line nr="53" mi="3" ci="6" mb="1" cb="1"/><line nr="61" mi="1" ci="3" mb="1" cb="1"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="5" ci="3" mb="3" cb="1"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="5" ci="3" mb="1" cb="1"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="5" ci="3" mb="1" cb="1"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="1" ci="9" mb="2" cb="2"/><line nr="86" mi="9" ci="0" mb="2" cb="0"/><line nr="87" mi="9" ci="0" mb="2" cb="0"/><line nr="88" mi="25" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="112"/><counter type="BRANCH" missed="23" covered="11"/><counter type="LINE" missed="9" covered="25"/><counter type="COMPLEXITY" missed="21" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADAgent.java"/><sourcefile name="PendingError.java"><line nr="10" mi="17" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="14" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="1" ci="6" mb="1" cb="1"/><counter type="INSTRUCTION" missed="21" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphLock.java"><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="236" covered="1772"/><counter type="BRANCH" missed="71" covered="229"/><counter type="LINE" missed="30" covered="329"/><counter type="COMPLEXITY" missed="70" covered="174"/><counter type="METHOD" missed="12" covered="82"/><counter type="CLASS" missed="0" covered="5"/></package><package name="neureka/devices/storage"><class name="neureka/devices/storage/IDXHead" sourcefilename="IDXHead.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="57"><counter type="INSTRUCTION" missed="6" covered="7"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/Tsr;Ljava/lang/String;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_loadHead" desc="()V" line="76"><counter type="INSTRUCTION" missed="4" covered="85"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="store" desc="(Lneureka/Tsr;)Lneureka/devices/storage/IDXHead;" line="106"><counter type="INSTRUCTION" missed="25" covered="107"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="9" covered="26"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_loadData" desc="()Ljava/lang/Object;" line="156"><counter type="INSTRUCTION" missed="8" covered="51"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="()Lneureka/Tsr;" line="175"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataSize" desc="()I" line="184"><counter type="INSTRUCTION" missed="1" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTotalSize" desc="()I" line="192"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extension" desc="()Ljava/lang/String;" line="197"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataType" desc="()Lneureka/dtype/DataType;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueSize" desc="()I" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getShape" desc="()[I" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="2" covered="64"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="390"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="15" covered="89"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/storage/FileHead" sourcefilename="FileHead.java"/><class name="neureka/devices/storage/FileDevice" sourcefilename="FileDevice.java"><method name="instance" desc="(Ljava/lang/String;)Lneureka/devices/storage/FileDevice;" line="66"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileHeadOf" desc="(Lneureka/Tsr;)Lneureka/devices/storage/FileHead;" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="()V" line="87"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="restore" desc="(Lneureka/Tsr;)Lneureka/devices/Device;" line="93"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="store" desc="(Lneureka/Tsr;)Lneureka/devices/Device;" line="107"><counter type="INSTRUCTION" missed="16" covered="77"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="store" desc="(Lneureka/Tsr;Ljava/lang/String;)Lneureka/devices/Device;" line="127"><counter type="INSTRUCTION" missed="7" covered="73"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="store" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/devices/Device;" line="149"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="has" desc="(Lneureka/Tsr;)Z" line="154"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="free" desc="(Lneureka/Tsr;)Lneureka/devices/Device;" line="160"><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleaning" desc="(Lneureka/Tsr;Ljava/lang/Runnable;)Lneureka/devices/Device;" line="174"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overwrite64" desc="(Lneureka/Tsr;[D)Lneureka/devices/Device;" line="179"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overwrite32" desc="(Lneureka/Tsr;[F)Lneureka/devices/Device;" line="184"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="swap" desc="(Lneureka/Tsr;Lneureka/Tsr;)Lneureka/devices/Device;" line="189"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/devices/Device;" line="194"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value64f" desc="(Lneureka/Tsr;)[D" line="199"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value32f" desc="(Lneureka/Tsr;)[F" line="204"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value64f" desc="(Lneureka/Tsr;I)D" line="209"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value32f" desc="(Lneureka/Tsr;I)F" line="214"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTensors" desc="()Ljava/util/Collection;" line="219"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="update" desc="(Lneureka/Tsr;Lneureka/Tsr;)V" line="225"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirectory" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$5" desc="(Ljava/lang/String;Lneureka/Tsr;)Lneureka/devices/storage/FileHead;" line="58"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$4" desc="(Ljava/lang/String;Lneureka/Tsr;)Lneureka/devices/storage/FileHead;" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$3" desc="(Ljava/lang/String;Lneureka/Tsr;)Lneureka/devices/storage/FileHead;" line="56"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$2" desc="(Ljava/lang/String;)Lneureka/devices/storage/FileHead;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$1" desc="(Ljava/lang/String;)Lneureka/devices/storage/FileHead;" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="(Ljava/lang/String;)Lneureka/devices/storage/FileHead;" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="112" covered="292"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="35" covered="51"/><counter type="COMPLEXITY" missed="23" covered="15"/><counter type="METHOD" missed="19" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/storage/NumberReader" sourcefilename="NumberReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/FileInputStream;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStream" desc="()Ljava/io/FileInputStream;" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Lneureka/dtype/NumericType;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="4" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bytesRead" desc="()I" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="87"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/storage/AbstractFileHead" sourcefilename="AbstractFileHead.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="19"><counter type="INSTRUCTION" missed="70" covered="35"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="10" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_loadFile" desc="()Ljava/io/File;" line="45"><counter type="INSTRUCTION" missed="25" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_loadFileInputStream" desc="()Ljava/io/FileInputStream;" line="57"><counter type="INSTRUCTION" missed="22" covered="13"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="free" desc="()Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="25" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocation" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileName" desc="()Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restore" desc="(Lneureka/Tsr;)Lneureka/devices/Storage;" line="98"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="159" covered="88"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="27" covered="22"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/devices/storage/JPEGHead" sourcefilename="JPEGHead.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="31"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lneureka/Tsr;Ljava/lang/String;)V" line="40"><counter type="INSTRUCTION" missed="8" covered="35"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_loadHead" desc="()V" line="52"><counter type="INSTRUCTION" missed="55" covered="30"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="10" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="()Lneureka/Tsr;" line="86"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_loadData" desc="()Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueSize" desc="()I" line="121"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataSize" desc="()I" line="126"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTotalSize" desc="()I" line="131"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataType" desc="()Lneureka/dtype/DataType;" line="136"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getShape" desc="()[I" line="141"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extension" desc="()Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="store" desc="(Lneureka/Tsr;)Lneureka/devices/Storage;" line="152"><counter type="INSTRUCTION" missed="3" covered="42"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_loadData$0" desc="([SLneureka/dtype/custom/UI8;[BII)V" line="107"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="85" covered="239"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="18" covered="51"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileDevice.java"><line nr="40" mi="0" ci="17" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="5" ci="5" mb="0" cb="0"/><line nr="49" mi="5" ci="5" mb="0" cb="0"/><line nr="50" mi="2" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="6" ci="5" mb="0" cb="0"/><line nr="57" mi="6" ci="5" mb="0" cb="0"/><line nr="58" mi="2" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="2"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="2" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="1" cb="1"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="10" mb="0" cb="0"/><line nr="117" mi="0" ci="17" mb="0" cb="0"/><line nr="118" mi="0" ci="12" mb="0" cb="0"/><line nr="119" mi="0" ci="12" mb="0" cb="0"/><line nr="120" mi="0" ci="15" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="1" cb="3"/><line nr="129" mi="0" ci="16" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="13" mb="0" cb="2"/><line nr="137" mi="0" ci="16" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="1" cb="1"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="112" covered="292"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="35" covered="51"/><counter type="COMPLEXITY" missed="23" covered="15"/><counter type="METHOD" missed="19" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileHead.java"/><sourcefile name="NumberReader.java"><line nr="10" mi="2" ci="6" mb="1" cb="1"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="15" mb="2" cb="2"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="87"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractFileHead.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="1" cb="1"/><line nr="22" mi="12" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="1" cb="1"/><line nr="27" mi="11" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="1" cb="1"/><line nr="35" mi="17" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="1" cb="1"/><line nr="47" mi="17" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="12" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="1" cb="1"/><line nr="77" mi="17" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="159" covered="88"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="27" covered="22"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IDXHead.java"><line nr="20" mi="2" ci="5" mb="1" cb="1"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="4" ci="4" mb="2" cb="2"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="12" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="2"/><line nr="136" mi="0" ci="9" mb="0" cb="0"/><line nr="137" mi="4" ci="6" mb="2" cb="2"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="1" cb="1"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="10" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="1" cb="1"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="1" cb="1"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="2" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="8" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="1" cb="1"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="1" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="390"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="15" covered="89"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JPEGHead.java"><line nr="19" mi="2" ci="5" mb="1" cb="1"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="4" ci="6" mb="2" cb="2"/><line nr="42" mi="4" ci="7" mb="2" cb="2"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="12" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="2" cb="2"/><line nr="71" mi="22" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="22" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="107" mi="0" ci="17" mb="0" cb="2"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="8" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="17" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="9" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="10" mb="0" cb="0"/><line nr="162" mi="0" ci="9" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="239"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="18" covered="51"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="416" covered="1096"/><counter type="BRANCH" missed="29" covered="41"/><counter type="LINE" missed="96" covered="227"/><counter type="COMPLEXITY" missed="51" covered="53"/><counter type="METHOD" missed="23" covered="46"/><counter type="CLASS" missed="0" covered="5"/></package><package name="neureka/ndim/config/types/simple"><class name="neureka/ndim/config/types/simple/SimpleD3Configuration" sourcefilename="SimpleD3Configuration.java"><method name="&lt;init&gt;" desc="([I[I)V" line="26"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="construct" desc="([I[I)Lneureka/ndim/config/NDConfiguration;" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="49"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="54"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="()[I" line="59"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="(I)I" line="64"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="()[I" line="69"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="74"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="()[I" line="79"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="(I)I" line="84"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="()[I" line="89"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="94"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="103"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="124"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="([I)I" line="142"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="(III)I" line="149"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="350"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/types/simple/SimpleD1Configuration" sourcefilename="SimpleD1Configuration.java"><method name="construct" desc="([I[I)Lneureka/ndim/config/NDConfiguration;" line="23"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="36"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="()[I" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="(I)I" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="()[I" line="61"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="()[I" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="(I)I" line="76"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="()[I" line="81"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="86"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="92"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="97"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="([I)I" line="102"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="(I)I" line="107"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="92"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/types/simple/SimpleDefaultNDConfiguration" sourcefilename="SimpleDefaultNDConfiguration.java"><method name="&lt;init&gt;" desc="([I[I)V" line="24"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="construct" desc="([I[I)Lneureka/ndim/config/NDConfiguration;" line="33"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxmap" desc="()[I" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="(I)I" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="()[I" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="()[I" line="73"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="(I)I" line="80"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="()[I" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="90"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="98"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="103"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="([I)I" line="120"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="158"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="1" covered="19"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/types/simple/SimpleD2Configuration" sourcefilename="SimpleD2Configuration.java"><method name="&lt;init&gt;" desc="([I[I)V" line="25"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="construct" desc="([I[I)Lneureka/ndim/config/NDConfiguration;" line="36"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="42"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="47"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="()[I" line="57"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="(I)I" line="62"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="()[I" line="67"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="72"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="()[I" line="77"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="(I)I" line="82"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="()[I" line="87"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="92"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="100"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="111"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="([I)I" line="126"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="(II)I" line="134"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="259"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/types/simple/SimpleScalarConfiguration" sourcefilename="SimpleScalarConfiguration.java"><method name="construct" desc="()Lneureka/ndim/config/NDConfiguration;" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="16"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="21"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="26"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="()[I" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="(I)I" line="36"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="()[I" line="41"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="()[I" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="(I)I" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="()[I" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="66"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="71"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="([I)I" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SimpleScalarConfiguration.java"><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleDefaultNDConfiguration.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="2"/><line nr="105" mi="0" ci="10" mb="0" cb="2"/><line nr="106" mi="0" ci="12" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="2"/><line nr="111" mi="0" ci="12" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="20" mb="0" cb="2"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="158"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="1" covered="19"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleD3Configuration.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="18" mb="0" cb="0"/><line nr="54" mi="0" ci="14" mb="0" cb="4"/><line nr="59" mi="0" ci="18" mb="0" cb="0"/><line nr="64" mi="0" ci="14" mb="0" cb="4"/><line nr="69" mi="0" ci="18" mb="0" cb="0"/><line nr="74" mi="0" ci="14" mb="0" cb="4"/><line nr="79" mi="0" ci="15" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="15" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="15" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="2"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="15" mb="0" cb="0"/><line nr="142" mi="0" ci="21" mb="0" cb="0"/><line nr="149" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="350"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleD1Configuration.java"><line nr="23" mi="0" ci="11" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="92"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleD2Configuration.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="13" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="57" mi="0" ci="13" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="2"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="11" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="2"/><line nr="101" mi="0" ci="19" mb="0" cb="0"/><line nr="104" mi="0" ci="19" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="2"/><line nr="113" mi="0" ci="10" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="11" mb="0" cb="0"/><line nr="117" mi="0" ci="10" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="9" mb="0" cb="0"/><line nr="128" mi="0" ci="9" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="259"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="10" covered="924"/><counter type="BRANCH" missed="0" covered="32"/><counter type="LINE" missed="2" covered="148"/><counter type="COMPLEXITY" missed="2" covered="96"/><counter type="METHOD" missed="2" covered="80"/><counter type="CLASS" missed="0" covered="5"/></package><package name="neureka/backend/standard/operations/function"><class name="neureka/backend/standard/operations/function/Absolute" sourcefilename="Absolute.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="100"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(DZ)D" line="108"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;)V" line="79"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;)V" line="56"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="67"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="61"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="13" covered="19"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="27"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([D[Lneureka/Tsr;[I[I[I)D" line="29"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;[I[I[I)D" line="28"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="21"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="23"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="22"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="113" covered="193"/><counter type="BRANCH" missed="13" covered="13"/><counter type="LINE" missed="16" covered="32"/><counter type="COMPLEXITY" missed="13" covered="15"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/function/Sinus" sourcefilename="Sinus.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="138"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(DZ)D" line="146"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;)V" line="113"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/ExecutionCall;)V" line="90"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$14" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="101"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$13" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="95"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$12" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="65"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="62"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="61"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="60"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="51"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="48"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="30"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="([D[Lneureka/Tsr;[I[I[I)D" line="32"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;[I[I[I)D" line="31"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="23"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="25"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="24"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="240" covered="140"/><counter type="BRANCH" missed="19" covered="9"/><counter type="LINE" missed="44" covered="26"/><counter type="COMPLEXITY" missed="25" covered="9"/><counter type="METHOD" missed="15" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/function/Softplus" sourcefilename="Softplus.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="125"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(DZ)D" line="133"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;)V" line="85"><counter type="INSTRUCTION" missed="5" covered="43"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;)V" line="62"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="73"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="67"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="50"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="30"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([D[Lneureka/Tsr;[I[I[I)D" line="32"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;[I[I[I)D" line="31"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="23"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="25"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="24"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="255"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="7" covered="41"/><counter type="COMPLEXITY" missed="9" covered="16"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/function/Tanh" sourcefilename="Tanh.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="135"><counter type="INSTRUCTION" missed="10" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(DZ)D" line="143"><counter type="INSTRUCTION" missed="8" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;)V" line="110"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;)V" line="87"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="98"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="92"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="77"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="40"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([D[Lneureka/Tsr;[I[I[I)D" line="48"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;[I[I[I)D" line="43"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="23"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="31"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="26"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="134" covered="215"/><counter type="BRANCH" missed="11" covered="9"/><counter type="LINE" missed="22" covered="38"/><counter type="COMPLEXITY" missed="13" covered="12"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/function/Cosinus" sourcefilename="Cosinus.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="110"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(DZ)D" line="118"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;)V" line="88"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;)V" line="65"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="76"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="70"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="27"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([D[Lneureka/Tsr;[I[I[I)D" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;[I[I[I)D" line="28"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="21"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="23"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="22"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="199"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="16" covered="32"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/function/ReLU" sourcefilename="ReLU.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="131"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(DZ)D" line="140"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;)V" line="108"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;)V" line="85"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="96"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="90"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([D[Lneureka/Tsr;[I[I[I)D" line="46"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;[I[I[I)D" line="41"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="22"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="30"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="25"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="118" covered="232"/><counter type="BRANCH" missed="14" covered="18"/><counter type="LINE" missed="21" covered="41"/><counter type="COMPLEXITY" missed="14" covered="17"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/function/Quadratic" sourcefilename="Quadratic.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="122"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(DZ)D" line="130"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;)V" line="99"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;)V" line="75"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="86"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="80"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="65"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="33"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([D[Lneureka/Tsr;[I[I[I)D" line="39"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;[I[I[I)D" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="22"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="28"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="25"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="98" covered="203"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="19" covered="35"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/function/Gaussian" sourcefilename="Gaussian.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="160"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(DZ)D" line="168"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;)V" line="131"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="108"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$14" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="119"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$13" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="113"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$12" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="83"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="80"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="77"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="67"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="64"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$6" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="51"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$5" desc="([D[Lneureka/Tsr;[I[I[I)D" line="56"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="([D[Lneureka/Tsr;[I[I[I)D" line="53"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="36"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="41"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="38"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="11" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="324" covered="93"/><counter type="BRANCH" missed="26" covered="2"/><counter type="LINE" missed="56" covered="20"/><counter type="COMPLEXITY" missed="31" covered="3"/><counter type="METHOD" missed="17" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/function/Identity" sourcefilename="Identity.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="217"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(DZ)D" line="225"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$28" desc="(Lneureka/backend/api/ExecutionCall;)V" line="193"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$27" desc="(Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="174"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$26" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$ScalarOperatorCreator;DII)V" line="179"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$25" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="149"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$24" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="146"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$23" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="145"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$22" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="143"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$21" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="133"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$20" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="130"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$19" desc="([Lneureka/Tsr;DI)Lneureka/backend/api/operations/Operation$PrimaryNDIConsumer;" line="126"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$18" desc="(DLneureka/ndim/iterators/NDIterator;)D" line="127"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$17" desc="(DLneureka/ndim/iterators/NDIterator;)D" line="126"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$16" desc="(Lneureka/backend/api/ExecutionCall;)V" line="104"><counter type="INSTRUCTION" missed="5" covered="56"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$15" desc="(Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;Lneureka/backend/api/ExecutionCall;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="92"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$13" desc="(Lneureka/backend/api/ExecutionCall;Lneureka/backend/api/operations/Operation$DefaultOperatorCreator;II)V" line="86"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$12" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="68"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="65"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="64"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="62"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="53"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$6" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="44"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([I[I[I)D" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="([D[Lneureka/Tsr;[I[I[I)D" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="37"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="39"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/List;)Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="317" covered="265"/><counter type="BRANCH" missed="33" covered="7"/><counter type="LINE" missed="57" covered="57"/><counter type="COMPLEXITY" missed="40" covered="12"/><counter type="METHOD" missed="21" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/operations/function/Sigmoid" sourcefilename="Sigmoid.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="117"><counter type="INSTRUCTION" missed="10" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(DZ)D" line="125"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="(Lneureka/backend/api/ExecutionCall;)V" line="92"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="(Lneureka/backend/api/ExecutionCall;)V" line="69"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="80"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="(Lneureka/backend/api/ExecutionCall;II)V" line="74"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/calculus/Function;Lneureka/backend/api/ExecutionCall;Z)Lneureka/autograd/ADAgent;" line="58"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="13" covered="19"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDXConsumer;" line="29"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([D[Lneureka/Tsr;[I[I[I)D" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([D[Lneureka/Tsr;[I[I[I)D" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lneureka/Tsr;I)Lneureka/backend/api/operations/Operation$TertiaryNDIConsumer;" line="22"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="24"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="([DLneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;Lneureka/ndim/iterators/NDIterator;)D" line="23"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="119" covered="189"/><counter type="BRANCH" missed="12" covered="8"/><counter type="LINE" missed="16" covered="33"/><counter type="COMPLEXITY" missed="13" covered="12"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Quadratic.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="2" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="10" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="2"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="14" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="17" mb="1" cb="3"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="1" cb="1"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="8" ci="0" mb="2" cb="0"/><line nr="100" mi="14" ci="0" mb="2" cb="0"/><line nr="101" mi="7" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="10" mb="0" cb="2"/><line nr="125" mi="0" ci="13" mb="0" cb="2"/><line nr="130" mi="0" ci="6" mb="0" cb="2"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="98" covered="203"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="19" covered="35"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Identity.java"><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="17" ci="0" mb="4" cb="0"/><line nr="31" mi="11" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="1" cb="1"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="14" mb="1" cb="1"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="2" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="17" ci="0" mb="2" cb="0"/><line nr="55" mi="10" ci="0" mb="4" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="2" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="8" ci="0" mb="2" cb="0"/><line nr="70" mi="26" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="13" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="1" ci="7" mb="1" cb="1"/><line nr="105" mi="4" ci="10" mb="1" cb="1"/><line nr="107" mi="0" ci="13" mb="1" cb="1"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="7" ci="0" mb="2" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="2" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="17" ci="0" mb="2" cb="0"/><line nr="135" mi="10" ci="0" mb="4" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="7" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="2" mb="0" cb="0"/><line nr="146" mi="2" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="2" cb="0"/><line nr="153" mi="6" ci="0" mb="0" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="12" mb="0" cb="0"/><line nr="170" mi="0" ci="8" mb="0" cb="0"/><line nr="174" mi="6" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="6" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="6" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="10" ci="0" mb="2" cb="0"/><line nr="220" mi="13" ci="0" mb="2" cb="0"/><line nr="225" mi="4" ci="0" mb="2" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="317" covered="265"/><counter type="BRANCH" missed="33" covered="7"/><counter type="LINE" missed="57" covered="57"/><counter type="COMPLEXITY" missed="40" covered="12"/><counter type="METHOD" missed="21" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Softplus.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="24" mi="15" ci="0" mb="2" cb="0"/><line nr="25" mi="15" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="19" mb="0" cb="2"/><line nr="32" mi="0" ci="19" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="17" mb="1" cb="3"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="12" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="1" cb="1"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="9" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="1" ci="7" mb="1" cb="1"/><line nr="86" mi="4" ci="10" mb="1" cb="1"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="10" mb="0" cb="2"/><line nr="128" mi="0" ci="13" mb="0" cb="2"/><line nr="133" mi="0" ci="9" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="255"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="7" covered="41"/><counter type="COMPLEXITY" missed="9" covered="16"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tanh.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="2" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="10" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="14" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="2"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="14" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="17" mb="1" cb="3"/><line nr="70" mi="0" ci="11" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="1" cb="1"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="9" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="8" ci="0" mb="2" cb="0"/><line nr="111" mi="14" ci="0" mb="2" cb="0"/><line nr="112" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="2" ci="8" mb="1" cb="1"/><line nr="138" mi="8" ci="5" mb="1" cb="1"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="1" cb="1"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="134" covered="215"/><counter type="BRANCH" missed="11" covered="9"/><counter type="LINE" missed="22" covered="38"/><counter type="COMPLEXITY" missed="13" covered="12"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Sigmoid.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="12" ci="0" mb="2" cb="0"/><line nr="24" mi="10" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="16" mb="0" cb="2"/><line nr="31" mi="0" ci="14" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="13" ci="4" mb="3" cb="1"/><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="1" cb="1"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="9" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="2" cb="0"/><line nr="93" mi="14" ci="0" mb="2" cb="0"/><line nr="94" mi="7" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="2" ci="8" mb="1" cb="1"/><line nr="120" mi="8" ci="5" mb="1" cb="1"/><line nr="125" mi="0" ci="11" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="119" covered="189"/><counter type="BRANCH" missed="12" covered="8"/><counter type="LINE" missed="16" covered="33"/><counter type="COMPLEXITY" missed="13" covered="12"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Sinus.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="24" mi="11" ci="0" mb="2" cb="0"/><line nr="25" mi="9" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="15" ci="0" mb="2" cb="0"/><line nr="32" mi="13" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="17" mb="1" cb="3"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="2" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="17" ci="0" mb="2" cb="0"/><line nr="53" mi="10" ci="0" mb="4" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="2" ci="2" mb="0" cb="0"/><line nr="62" mi="2" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="2" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="12" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="2" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="9" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="8" ci="0" mb="2" cb="0"/><line nr="114" mi="14" ci="0" mb="2" cb="0"/><line nr="115" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="10" mb="0" cb="2"/><line nr="141" mi="0" ci="13" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="2"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="240" covered="140"/><counter type="BRANCH" missed="19" covered="9"/><counter type="LINE" missed="44" covered="26"/><counter type="COMPLEXITY" missed="25" covered="9"/><counter type="METHOD" missed="15" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReLU.java"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="2" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="12" ci="0" mb="2" cb="0"/><line nr="26" mi="7" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="9" ci="0" mb="2" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="18" mb="0" cb="2"/><line nr="42" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="12" mb="0" cb="2"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="17" mb="1" cb="3"/><line nr="68" mi="0" ci="11" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="12" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="1" cb="1"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="9" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="8" ci="0" mb="2" cb="0"/><line nr="109" mi="14" ci="0" mb="2" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="2"/><line nr="134" mi="0" ci="13" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="2"/><line nr="141" mi="3" ci="4" mb="1" cb="1"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="3" ci="4" mb="1" cb="1"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="118" covered="232"/><counter type="BRANCH" missed="14" covered="18"/><counter type="LINE" missed="21" covered="41"/><counter type="COMPLEXITY" missed="14" covered="17"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Cosinus.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="11" ci="0" mb="2" cb="0"/><line nr="23" mi="10" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="15" mb="0" cb="2"/><line nr="29" mi="0" ci="14" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="17" mb="1" cb="3"/><line nr="48" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="1" cb="1"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="9" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="2" cb="0"/><line nr="89" mi="14" ci="0" mb="2" cb="0"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="2"/><line nr="113" mi="0" ci="13" mb="0" cb="2"/><line nr="118" mi="0" ci="5" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="199"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="16" covered="32"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Gaussian.java"><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="17" mb="2" cb="2"/><line nr="29" mi="11" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="2" cb="0"/><line nr="38" mi="13" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="11" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="2" cb="0"/><line nr="53" mi="17" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="8" ci="0" mb="0" cb="0"/><line nr="57" mi="11" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="2" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="17" ci="0" mb="2" cb="0"/><line nr="69" mi="10" ci="0" mb="4" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="2" ci="2" mb="0" cb="0"/><line nr="80" mi="2" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="2" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="13" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="2" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="8" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="8" ci="0" mb="2" cb="0"/><line nr="132" mi="14" ci="0" mb="2" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="10" ci="0" mb="2" cb="0"/><line nr="163" mi="13" ci="0" mb="2" cb="0"/><line nr="168" mi="9" ci="0" mb="2" cb="0"/><line nr="169" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="324" covered="93"/><counter type="BRANCH" missed="26" covered="2"/><counter type="LINE" missed="56" covered="20"/><counter type="COMPLEXITY" missed="31" covered="3"/><counter type="METHOD" missed="17" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Absolute.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="11" ci="0" mb="2" cb="0"/><line nr="23" mi="14" ci="0" mb="2" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="15" mb="0" cb="2"/><line nr="29" mi="0" ci="18" mb="0" cb="2"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="13" ci="4" mb="3" cb="1"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="1" cb="1"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="2" cb="0"/><line nr="80" mi="14" ci="0" mb="2" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="10" mb="0" cb="2"/><line nr="103" mi="0" ci="13" mb="0" cb="2"/><line nr="108" mi="0" ci="5" mb="0" cb="2"/><line nr="109" mi="1" ci="7" mb="1" cb="1"/><counter type="INSTRUCTION" missed="113" covered="193"/><counter type="BRANCH" missed="13" covered="13"/><counter type="LINE" missed="16" covered="32"/><counter type="COMPLEXITY" missed="13" covered="15"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1619" covered="1984"/><counter type="BRANCH" missed="150" covered="104"/><counter type="LINE" missed="274" covered="355"/><counter type="COMPLEXITY" missed="178" covered="126"/><counter type="METHOD" missed="87" covered="90"/><counter type="CLASS" missed="0" covered="10"/></package><package name="neureka/ndim/iterators/types/complex"><class name="neureka/ndim/iterators/types/complex/ComplexD1CIterator" sourcefilename="ComplexD1CIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/types/complex/ComplexD1Configuration;)V" line="11"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="()V" line="16"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decrement" desc="()V" line="21"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="27"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)I" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[I" line="37"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([I)V" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rank" desc="()I" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ComplexD1CIterator.java"><line nr="11" mi="17" ci="0" mb="0" cb="0"/><line nr="12" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="6" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="21" mi="6" ci="0" mb="0" cb="0"/><line nr="22" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="neureka/optimization"><class name="neureka/optimization/Optimizer" sourcefilename="Optimizer.java"/><sourcefile name="Optimizer.java"/></package><package name="neureka/ndim/iterators/types/complex/main"><class name="neureka/ndim/iterators/types/complex/main/ComplexD2CIterator" sourcefilename="ComplexD2CIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/types/complex/ComplexD2Configuration;)V" line="8"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="()V" line="18"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decrement" desc="()V" line="27"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="35"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)I" line="40"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[I" line="45"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="50"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([I)V" line="56"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/ndim/iterators/types/complex/main/ComplexD3CIterator" sourcefilename="ComplexD3CIterator.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/config/types/complex/ComplexD3Configuration;)V" line="8"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="()V" line="19"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decrement" desc="()V" line="32"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i" desc="()I" line="42"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)I" line="47"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()[I" line="52"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="57"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="([I)V" line="64"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ComplexD2CIterator.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="12" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="2" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="6" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="2" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="8" ci="0" mb="2" cb="0"/><line nr="45" mi="13" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="2" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ComplexD3CIterator.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="12" ci="0" mb="0" cb="0"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="6" ci="0" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="2" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="2" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="2" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="2" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="9" ci="0" mb="0" cb="0"/><line nr="47" mi="14" ci="0" mb="4" cb="0"/><line nr="52" mi="18" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="2" cb="0"/><line nr="58" mi="7" ci="0" mb="2" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="262" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="neureka/backend/api/operations"><class name="neureka/backend/api/operations/Operation$PrimaryNDIConsumer" sourcefilename="Operation.java"/><class name="neureka/backend/api/operations/Operation$SecondaryNDIConsumer" sourcefilename="Operation.java"/><class name="neureka/backend/api/operations/Operation$DefaultOperatorCreator" sourcefilename="Operation.java"/><class name="neureka/backend/api/operations/Operation$ScalarOperatorCreator" sourcefilename="Operation.java"/><class name="neureka/backend/api/operations/OperationContext" sourcefilename="OperationContext.java"><method name="get" desc="()Lneureka/backend/api/operations/OperationContext;" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInstance" desc="(Lneureka/backend/api/operations/OperationContext;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="87"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="incrementID" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="(I)Lneureka/backend/api/operations/Operation;" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="(Ljava/lang/String;)Lneureka/backend/api/operations/Operation;" line="121"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lneureka/backend/api/operations/OperationContext;" line="127"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lookup" desc="()Ljava/util/Map;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instances" desc="()Ljava/util/List;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="id" desc="()I" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="14" covered="56"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="130"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/api/operations/Operation$TertiaryNDIConsumer" sourcefilename="Operation.java"/><class name="neureka/backend/api/operations/Operation$PrimaryNDXConsumer" sourcefilename="Operation.java"/><class name="neureka/backend/api/operations/Operation$SecondaryNDXConsumer" sourcefilename="Operation.java"/><class name="neureka/backend/api/operations/Operation$Stringifier" sourcefilename="Operation.java"/><class name="neureka/backend/api/operations/GenericOperation" sourcefilename="GenericOperation.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="([DIILjava/util/List;)D" line="27"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="15"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/api/operations/AbstractOperation" sourcefilename="AbstractOperation.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;IZZZZ)V" line="36"><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgorithm" desc="(Ljava/lang/Class;)Lneureka/backend/api/algorithms/AbstractFunctionalAlgorithm;" line="105"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supportsAlgorithm" desc="(Ljava/lang/Class;)Z" line="110"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAlgorithm" desc="(Ljava/lang/Class;Lneureka/backend/api/algorithms/AbstractFunctionalAlgorithm;)Lneureka/backend/api/operations/Operation;" line="115"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEachAlgorithm" desc="(Ljava/util/function/Consumer;)Lneureka/backend/api/operations/Operation;" line="121"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AlgorithmFor" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/algorithms/Algorithm;" line="129"><counter type="INSTRUCTION" missed="27" covered="42"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supports" desc="(Ljava/lang/Class;)Z" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOperator" desc="()Z" line="162"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStringifier" desc="()Lneureka/backend/api/operations/Operation$Stringifier;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStringifier" desc="(Lneureka/backend/api/operations/Operation$Stringifier;)Lneureka/backend/api/operations/AbstractOperation;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()I" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="()Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArity" desc="()I" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIndexer" desc="()Z" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDifferentiable" desc="()Z" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInline" desc="()Z" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultAlgorithm" desc="()Lneureka/backend/api/algorithms/Algorithm;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="54" covered="206"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="10" covered="48"/><counter type="COMPLEXITY" missed="5" covered="23"/><counter type="METHOD" missed="2" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/api/operations/Operation$Utility" sourcefilename="Operation.java"><method name="&lt;init&gt;" desc="()V" line="206"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subset" desc="([Lneureka/Tsr;III)[Lneureka/Tsr;" line="209"><counter type="INSTRUCTION" missed="8" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="without" desc="([Lneureka/Tsr;I)[Lneureka/Tsr;" line="219"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offsetted" desc="([Lneureka/Tsr;I)[Lneureka/Tsr;" line="225"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="122"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/api/operations/OperationTypeFactory" sourcefilename="OperationTypeFactory.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lneureka/backend/api/operations/GenericOperation;" line="23"><counter type="INSTRUCTION" missed="44" covered="46"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFunction" desc="(Ljava/lang/String;)Lneureka/backend/api/operations/OperationTypeFactory;" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOperator" desc="(Ljava/lang/String;)Lneureka/backend/api/operations/OperationTypeFactory;" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setArity" desc="(Ljava/lang/Integer;)Lneureka/backend/api/operations/OperationTypeFactory;" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsOperator" desc="(Ljava/lang/Boolean;)Lneureka/backend/api/operations/OperationTypeFactory;" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsIndexer" desc="(Ljava/lang/Boolean;)Lneureka/backend/api/operations/OperationTypeFactory;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsDifferentiable" desc="(Ljava/lang/Boolean;)Lneureka/backend/api/operations/OperationTypeFactory;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsInline" desc="(Ljava/lang/Boolean;)Lneureka/backend/api/operations/OperationTypeFactory;" line="18"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="44" covered="105"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/api/operations/Operation$TertiaryNDXConsumer" sourcefilename="Operation.java"/><class name="neureka/backend/api/operations/Operation" sourcefilename="Operation.java"/><sourcefile name="Operation.java"><line nr="206" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="1" cb="1"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="220" mi="0" ci="21" mb="0" cb="4"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="13" mb="0" cb="4"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="13" mb="1" cb="3"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="13" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="122"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OperationTypeFactory.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="4" ci="3" mb="1" cb="1"/><line nr="25" mi="4" ci="3" mb="1" cb="1"/><line nr="26" mi="4" ci="3" mb="1" cb="1"/><line nr="27" mi="4" ci="3" mb="1" cb="1"/><line nr="28" mi="4" ci="3" mb="1" cb="1"/><line nr="29" mi="4" ci="3" mb="1" cb="1"/><line nr="30" mi="4" ci="3" mb="1" cb="1"/><line nr="32" mi="0" ci="3" mb="1" cb="1"/><line nr="33" mi="16" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="105"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractOperation.java"><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="3" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="5" ci="5" mb="0" cb="0"/><line nr="60" mi="10" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="2"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="2"/><line nr="95" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="12" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="2"/><line nr="134" mi="0" ci="7" mb="1" cb="1"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="10" mb="1" cb="1"/><line nr="144" mi="2" ci="0" mb="2" cb="0"/><line nr="145" mi="11" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="206"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="10" covered="48"/><counter type="COMPLEXITY" missed="5" covered="23"/><counter type="METHOD" missed="2" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericOperation.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="14" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="15"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OperationContext.java"><line nr="30" mi="2" ci="8" mb="1" cb="1"/><line nr="31" mi="22" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="2"/><line nr="44" mi="4" ci="5" mb="2" cb="2"/><line nr="45" mi="4" ci="5" mb="2" cb="2"/><line nr="46" mi="4" ci="5" mb="2" cb="2"/><line nr="47" mi="0" ci="13" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="130"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="156" covered="578"/><counter type="BRANCH" missed="21" covered="41"/><counter type="LINE" missed="17" covered="117"/><counter type="COMPLEXITY" missed="26" covered="53"/><counter type="METHOD" missed="6" covered="42"/><counter type="CLASS" missed="0" covered="5"/></package><package name="neureka/calculus/implementations"><class name="neureka/calculus/implementations/FunctionConstant" sourcefilename="FunctionConstant.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()D" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlat" desc="()Z" line="19"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDoingAD" desc="()Z" line="24"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOperation" desc="()Lneureka/backend/api/operations/AbstractOperation;" line="29"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dependsOn" desc="(I)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="40"><counter type="INSTRUCTION" missed="15" covered="37"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([DI)D" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([D)D" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DI)D" line="70"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="75"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="87"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="92"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="97"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="107"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="6" covered="19"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/implementations/FunctionNode" sourcefilename="FunctionNode.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/api/operations/Operation;Ljava/util/List;Z)V" line="45"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dependsOn" desc="(I)Z" line="84"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_tensor_activation" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="100"><counter type="INSTRUCTION" missed="5" covered="53"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__flat_execution" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="129"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__deep_activation" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="142"><counter type="INSTRUCTION" missed="0" covered="131"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="___indexOfFoundDerivative" desc="([Lneureka/Tsr;)I" line="182"><counter type="INSTRUCTION" missed="2" covered="68"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_deep_derivative" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="200"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="srcActivation" desc="([Lneureka/Tsr;III)[Lneureka/Tsr;" line="285"><counter type="INSTRUCTION" missed="27" covered="110"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_device" desc="([Lneureka/Tsr;)Lneureka/devices/Device;" line="310"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_shareGuestDevice" desc="([Lneureka/Tsr;)Z" line="319"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="339"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="344"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="349"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="354"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([DI)D" line="361"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([D)D" line="366"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="371"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DI)D" line="376"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperation" desc="()Lneureka/backend/api/operations/Operation;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlat" desc="()Z" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDoingAD" desc="()Z" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$derive$7" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="354"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$derive$6" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="349"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$call$5" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="344"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$call$4" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="339"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_deep_derivative$3" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="203"><counter type="INSTRUCTION" missed="0" covered="272"/><counter type="BRANCH" missed="1" covered="33"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$__deep_activation$2" desc="(I)Ljava/lang/String;" line="159"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_tensor_activation$1" desc="(Lneureka/backend/api/ExecutionCall;)Ljava/lang/Object;" line="118"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toString$0" desc="(Lneureka/calculus/Function;)Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="1099"/><counter type="BRANCH" missed="11" covered="149"/><counter type="LINE" missed="3" covered="148"/><counter type="COMPLEXITY" missed="11" covered="101"/><counter type="METHOD" missed="1" covered="31"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/implementations/FunctionVariable" sourcefilename="FunctionVariable.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="providesGradient" desc="()Z" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlat" desc="()Z" line="19"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDoingAD" desc="()Z" line="24"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOperation" desc="()Lneureka/backend/api/operations/AbstractOperation;" line="29"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dependsOn" desc="(I)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="40"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([DI)D" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([D)D" line="53"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="derive" desc="([DI)D" line="60"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="77"><counter type="INSTRUCTION" missed="15" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="84"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="89"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="98"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/implementations/GradientProvider" sourcefilename="GradientProvider.java"/><class name="neureka/calculus/implementations/FunctionInput" sourcefilename="FunctionInput.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="providesGradient" desc="()Z" line="17"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlat" desc="()Z" line="24"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDoingAD" desc="()Z" line="29"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperation" desc="()Lneureka/backend/api/operations/AbstractOperation;" line="34"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dependsOn" desc="(I)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuild" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="47"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_extract" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="72"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([DI)D" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([D)D" line="94"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DI)D" line="99"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([DII)D" line="104"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="111"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="116"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="derive" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="derive" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="126"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="()I" line="139"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="230"/><counter type="BRANCH" missed="2" covered="32"/><counter type="LINE" missed="4" covered="37"/><counter type="COMPLEXITY" missed="6" covered="29"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FunctionInput.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="7" mb="0" cb="2"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="2"/><line nr="48" mi="0" ci="13" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="5" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="4"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="14" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="4"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="1" cb="1"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="5" ci="9" mb="1" cb="1"/><line nr="99" mi="0" ci="8" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="2"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="9" mb="0" cb="0"/><line nr="135" mi="0" ci="21" mb="0" cb="2"/><line nr="139" mi="0" ci="12" mb="0" cb="2"/><counter type="INSTRUCTION" missed="21" covered="230"/><counter type="BRANCH" missed="2" covered="32"/><counter type="LINE" missed="4" covered="37"/><counter type="COMPLEXITY" missed="6" covered="29"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionConstant.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="2"/><line nr="43" mi="0" ci="7" mb="0" cb="2"/><line nr="44" mi="2" ci="3" mb="1" cb="1"/><line nr="45" mi="5" ci="0" mb="2" cb="0"/><line nr="46" mi="5" ci="0" mb="2" cb="0"/><line nr="47" mi="3" ci="0" mb="2" cb="0"/><line nr="49" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="11" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="107"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="6" covered="19"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionVariable.java"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="2"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="15" ci="0" mb="2" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="2"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="15" ci="6" mb="1" cb="1"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="18" mb="0" cb="2"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="16" mb="0" cb="2"/><counter type="INSTRUCTION" missed="40" covered="98"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionNode.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="4"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="2"/><line nr="57" mi="0" ci="15" mb="0" cb="8"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="14" mb="1" cb="1"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="18" mb="1" cb="3"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="5" ci="2" mb="1" cb="1"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="5" mb="0" cb="4"/><line nr="118" mi="0" ci="14" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="2"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="7" mb="0" cb="2"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="11" mb="0" cb="2"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="2"/><line nr="152" mi="0" ci="22" mb="0" cb="2"/><line nr="153" mi="0" ci="7" mb="1" cb="3"/><line nr="155" mi="0" ci="7" mb="1" cb="3"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="22" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="11" mb="0" cb="0"/><line nr="167" mi="0" ci="12" mb="0" cb="2"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="23" mb="0" cb="6"/><line nr="184" mi="0" ci="2" mb="0" cb="2"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="0" cb="2"/><line nr="187" mi="0" ci="12" mb="0" cb="2"/><line nr="188" mi="0" ci="4" mb="0" cb="2"/><line nr="189" mi="0" ci="4" mb="0" cb="2"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="2" ci="4" mb="1" cb="1"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="11" mb="0" cb="2"/><line nr="210" mi="0" ci="7" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="2"/><line nr="217" mi="0" ci="9" mb="0" cb="2"/><line nr="218" mi="0" ci="14" mb="0" cb="0"/><line nr="221" mi="0" ci="8" mb="0" cb="2"/><line nr="222" mi="0" ci="27" mb="0" cb="2"/><line nr="227" mi="0" ci="4" mb="0" cb="2"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="7" mb="0" cb="2"/><line nr="232" mi="0" ci="12" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="2"/><line nr="240" mi="0" ci="9" mb="0" cb="2"/><line nr="241" mi="0" ci="13" mb="0" cb="0"/><line nr="244" mi="0" ci="8" mb="0" cb="2"/><line nr="245" mi="0" ci="25" mb="0" cb="2"/><line nr="249" mi="0" ci="9" mb="0" cb="2"/><line nr="250" mi="0" ci="12" mb="0" cb="4"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="11" mb="0" cb="0"/><line nr="259" mi="0" ci="13" mb="1" cb="5"/><line nr="260" mi="0" ci="17" mb="0" cb="0"/><line nr="261" mi="0" ci="12" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="9" mb="0" cb="2"/><line nr="270" mi="0" ci="12" mb="0" cb="2"/><line nr="271" mi="0" ci="2" mb="0" cb="2"/><line nr="272" mi="0" ci="7" mb="0" cb="2"/><line nr="273" mi="0" ci="15" mb="0" cb="0"/><line nr="275" mi="0" ci="12" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="7" mb="0" cb="0"/><line nr="287" mi="0" ci="8" mb="0" cb="2"/><line nr="288" mi="0" ci="8" mb="0" cb="2"/><line nr="289" mi="0" ci="2" mb="1" cb="1"/><line nr="290" mi="0" ci="26" mb="0" cb="2"/><line nr="292" mi="27" ci="0" mb="2" cb="0"/><line nr="294" mi="0" ci="10" mb="0" cb="2"/><line nr="297" mi="0" ci="8" mb="0" cb="2"/><line nr="298" mi="0" ci="4" mb="0" cb="2"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="2"/><line nr="301" mi="0" ci="13" mb="0" cb="0"/><line nr="302" mi="0" ci="16" mb="0" cb="0"/><line nr="305" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="5" mb="0" cb="2"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="12" mb="0" cb="4"/><line nr="314" mi="0" ci="11" mb="1" cb="3"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="0" ci="26" mb="0" cb="4"/><line nr="323" mi="0" ci="2" mb="0" cb="2"/><line nr="324" mi="0" ci="17" mb="0" cb="2"/><line nr="325" mi="0" ci="14" mb="0" cb="6"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="0" ci="12" mb="0" cb="6"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="17" mb="0" cb="0"/><line nr="344" mi="0" ci="16" mb="0" cb="0"/><line nr="349" mi="0" ci="18" mb="0" cb="0"/><line nr="354" mi="0" ci="17" mb="0" cb="0"/><line nr="361" mi="0" ci="9" mb="0" cb="0"/><line nr="366" mi="0" ci="9" mb="0" cb="0"/><line nr="371" mi="0" ci="9" mb="0" cb="0"/><line nr="376" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="1099"/><counter type="BRANCH" missed="11" covered="149"/><counter type="LINE" missed="3" covered="148"/><counter type="COMPLEXITY" missed="11" covered="101"/><counter type="METHOD" missed="1" covered="31"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GradientProvider.java"/><counter type="INSTRUCTION" missed="124" covered="1534"/><counter type="BRANCH" missed="23" covered="195"/><counter type="LINE" missed="19" covered="221"/><counter type="COMPLEXITY" missed="30" covered="161"/><counter type="METHOD" missed="12" covered="70"/><counter type="CLASS" missed="0" covered="4"/></package><package name="neureka/ndim/config/types/virtual"><class name="neureka/ndim/config/types/virtual/VirtualNDConfiguration" sourcefilename="VirtualNDConfiguration.java"><method name="&lt;init&gt;" desc="([I)V" line="16"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="construct" desc="([I)Lneureka/ndim/config/NDConfiguration;" line="23"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxmap" desc="()[I" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="(I)I" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translation" desc="()[I" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="65"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spread" desc="()[I" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="(I)I" line="75"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="offset" desc="()[I" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="85"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i_of_i" desc="(I)I" line="90"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="95"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="([I)I" line="100"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="5" covered="20"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="5" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="VirtualNDConfiguration.java"><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="2"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="5" covered="20"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="5" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="13" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="5" covered="20"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="5" covered="12"/><counter type="CLASS" missed="0" covered="1"/></package><package name="neureka/backend/api/implementations"><class name="neureka/backend/api/implementations/ImplementationFor" sourcefilename="ImplementationFor.java"/><class name="neureka/backend/api/implementations/AbstractImplementationFor" sourcefilename="AbstractImplementationFor.java"><method name="&lt;init&gt;" desc="(Lneureka/backend/api/implementations/ImplementationFor;I)V" line="8"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="(Lneureka/backend/api/ExecutionCall;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ImplementationFor.java"/><sourcefile name="AbstractImplementationFor.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="neureka/calculus"><class name="neureka/calculus/AbstractBaseFunction" sourcefilename="AbstractBaseFunction.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(D)D" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/util/List;)Lneureka/Tsr;" line="63"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Ljava/util/List;)Lneureka/Tsr;" line="68"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invoke" desc="(D)D" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invoke" desc="([DI)D" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invoke" desc="([D)D" line="85"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invoke" desc="(Lneureka/Tsr;)Lneureka/Tsr;" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invoke" desc="([Lneureka/Tsr;I)Lneureka/Tsr;" line="97"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invoke" desc="([Lneureka/Tsr;)Lneureka/Tsr;" line="102"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="derive" desc="(Ljava/util/List;II)Lneureka/Tsr;" line="109"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="derive" desc="(Ljava/util/List;I)Lneureka/Tsr;" line="114"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="29"/><counter type="LINE" missed="9" covered="4"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/Cache" sourcefilename="Cache.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lneureka/calculus/Cache;" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FUNCTIONS" desc="()Ljava/util/Map;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="free" desc="(Lneureka/autograd/GraphLock;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preprocess" desc="([Lneureka/Tsr;Lneureka/calculus/Function;Ljava/util/function/Supplier;II)Lneureka/Tsr;" line="70"><counter type="INSTRUCTION" missed="0" covered="130"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_get" desc="([Lneureka/Tsr;II)Lneureka/Tsr;" line="105"><counter type="INSTRUCTION" missed="17" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_put" desc="(Lneureka/Tsr;Lneureka/autograd/GraphNode;II)V" line="118"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_keyOf" desc="([Lneureka/Tsr;II)J" line="138"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_keyed" desc="(I)I" line="148"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$_put$2" desc="(Ljava/lang/Long;Ljava/lang/Long;)I" line="129"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$preprocess$1" desc="(Lneureka/Tsr;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lneureka/autograd/GraphLock;Lneureka/autograd/GraphLock;)I" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="346"/><counter type="BRANCH" missed="5" covered="41"/><counter type="LINE" missed="3" covered="59"/><counter type="COMPLEXITY" missed="5" covered="31"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/Function$Detached" sourcefilename="Function.java"><method name="&lt;init&gt;" desc="()V" line="91"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="93"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="69"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/Function$Setup" sourcefilename="Function.java"><method name="&lt;init&gt;" desc="()V" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="commit" desc="([Lneureka/Tsr;Ljava/lang/String;Z)Lneureka/Tsr;" line="125"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commit" desc="(Lneureka/Tsr;[Lneureka/Tsr;Ljava/lang/String;Z)Lneureka/Tsr;" line="130"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commit" desc="([Lneureka/Tsr;Lneureka/calculus/Function;)Lneureka/Tsr;" line="135"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="commit" desc="(Lneureka/Tsr;[Lneureka/Tsr;Lneureka/calculus/Function;)Lneureka/Tsr;" line="140"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="commit" desc="(Lneureka/Tsr;[Lneureka/Tsr;Lneureka/calculus/Function;Ljava/util/function/Supplier;)Lneureka/Tsr;" line="145"><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$commit$0" desc="(Lneureka/Tsr;)Ljava/lang/Object;" line="150"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="123"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/Function" sourcefilename="Function.java"><method name="create" desc="(Ljava/lang/String;)Lneureka/calculus/Function;" line="114"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;Z)Lneureka/calculus/Function;" line="118"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Cache.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="13" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="16" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="2"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="4"/><line nr="82" mi="0" ci="4" mb="0" cb="4"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="16" mb="0" cb="2"/><line nr="87" mi="0" ci="11" mb="0" cb="2"/><line nr="88" mi="0" ci="10" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="1" cb="1"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="18" mb="2" cb="4"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="10" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="15" mb="0" cb="2"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="1" cb="3"/><line nr="127" mi="0" ci="14" mb="0" cb="2"/><line nr="129" mi="0" ci="11" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="2"/><line nr="140" mi="0" ci="8" mb="0" cb="2"/><line nr="141" mi="2" ci="4" mb="1" cb="1"/><line nr="142" mi="0" ci="22" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="19" covered="346"/><counter type="BRANCH" missed="5" covered="41"/><counter type="LINE" missed="3" covered="59"/><counter type="COMPLEXITY" missed="5" covered="31"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Function.java"><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="16" mb="0" cb="2"/><line nr="149" mi="0" ci="11" mb="0" cb="2"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="153" mi="0" ci="7" mb="0" cb="2"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="2"/><line nr="159" mi="0" ci="16" mb="0" cb="2"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="6"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="251"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="3" covered="56"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="AbstractBaseFunction.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="10" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="29"/><counter type="LINE" missed="9" covered="4"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="79" covered="626"/><counter type="BRANCH" missed="5" covered="59"/><counter type="LINE" missed="15" covered="119"/><counter type="COMPLEXITY" missed="17" covered="53"/><counter type="METHOD" missed="12" covered="26"/><counter type="CLASS" missed="0" covered="5"/></package><package name="neureka/ndim"><class name="neureka/ndim/AbstractNDArray$Utility$Stringify" sourcefilename="AbstractNDArray.java"><method name="&lt;init&gt;" desc="()V" line="273"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatFP" desc="(D)Ljava/lang/String;" line="277"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strConf" desc="([I)Ljava/lang/String;" line="297"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="121"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/AbstractNDArray$Utility" sourcefilename="AbstractNDArray.java"><method name="&lt;init&gt;" desc="()V" line="271"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/ndim/AbstractNDArray$Utility$Indexing" sourcefilename="AbstractNDArray.java"><method name="&lt;init&gt;" desc="()V" line="308"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shpCheck" desc="([ILneureka/Tsr;)[I" line="312"><counter type="INSTRUCTION" missed="29" covered="7"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeFit" desc="([I[I)[[I" line="322"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shpOfCon" desc="([I[I)[I" line="348"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shpOfBrc" desc="([I[I)[I" line="355"><counter type="INSTRUCTION" missed="16" covered="42"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="181"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="4" covered="27"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/AbstractComponentOwner" sourcefilename="AbstractComponentOwner.java"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="has" desc="(Ljava/lang/Class;)Z" line="111"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Lneureka/Component;)Ljava/lang/Object;" line="126"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forComponent" desc="(Ljava/lang/Class;Ljava/util/function/Consumer;)Z" line="182"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="115"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/AbstractNDArray$1" sourcefilename="AbstractNDArray.java"><method name="&lt;init&gt;" desc="(Lneureka/ndim/AbstractNDArray;)V" line="160"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tryAdvance" desc="(Ljava/util/function/Consumer;)Z" line="163"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trySplit" desc="()Ljava/util/Spliterator;" line="168"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="estimateSize" desc="()J" line="173"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="characteristics" desc="()I" line="178"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="neureka/ndim/AbstractNDArray" sourcefilename="AbstractNDArray.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueClass" desc="()Ljava/lang/Class;" line="85"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDataType" desc="(Lneureka/dtype/DataType;)Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="7" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_setData" desc="(Ljava/lang/Object;)V" line="103"><counter type="INSTRUCTION" missed="37" covered="24"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="7" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_allocate" desc="(I)V" line="122"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_virtualize" desc="()V" line="127"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_actualize" desc="()V" line="132"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_convertedDataOfType" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="137"><counter type="INSTRUCTION" missed="7" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEach" desc="(Ljava/util/function/Consumer;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spliterator" desc="()Ljava/util/Spliterator;" line="159"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="is" desc="(Ljava/lang/Class;)Z" line="188"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="is64" desc="()Z" line="193"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="is32" desc="()Z" line="197"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="203"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="207"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="([I)I" line="211"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNDConf" desc="(Lneureka/ndim/config/NDConfiguration;)Ljava/lang/Object;" line="218"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="226"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()Ljava/util/List;" line="230"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="234"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="()Ljava/util/List;" line="238"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="()Ljava/util/List;" line="242"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="()Ljava/util/List;" line="246"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="()Ljava/util/List;" line="250"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="254"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_asList" desc="([I)Ljava/util/List;" line="258"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNDConf" desc="()Lneureka/ndim/config/NDConfiguration;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataType" desc="()Lneureka/dtype/DataType;" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="69" covered="219"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="14" covered="48"/><counter type="COMPLEXITY" missed="9" covered="31"/><counter type="METHOD" missed="2" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractNDArray.java"><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="1" cb="1"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="1" cb="1"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="1" cb="1"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="4"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="1" cb="1"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="13" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="0" ci="4" mb="1" cb="1"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="7" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="13" mb="0" cb="2"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="8" ci="0" mb="2" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="21" mb="0" cb="2"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="6" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="2"/><line nr="282" mi="0" ci="4" mb="0" cb="2"/><line nr="283" mi="0" ci="13" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="2"/><line nr="285" mi="0" ci="13" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="11" mb="0" cb="2"/><line nr="289" mi="0" ci="11" mb="0" cb="2"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="8" mb="0" cb="2"/><line nr="299" mi="0" ci="16" mb="0" cb="2"/><line nr="300" mi="0" ci="11" mb="0" cb="0"/><line nr="308" mi="3" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="1" cb="1"/><line nr="313" mi="8" ci="0" mb="0" cb="0"/><line nr="315" mi="21" ci="0" mb="2" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="2" mb="0" cb="0"/><line nr="323" mi="0" ci="9" mb="0" cb="2"/><line nr="324" mi="0" ci="5" mb="0" cb="2"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="326" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="330" mi="0" ci="8" mb="0" cb="2"/><line nr="331" mi="0" ci="5" mb="0" cb="2"/><line nr="332" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="336" mi="0" ci="7" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="7" mb="0" cb="2"/><line nr="340" mi="0" ci="12" mb="0" cb="2"/><line nr="341" mi="0" ci="16" mb="0" cb="2"/><line nr="343" mi="0" ci="11" mb="0" cb="0"/><line nr="348" mi="0" ci="9" mb="0" cb="0"/><line nr="349" mi="0" ci="25" mb="1" cb="3"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="9" mb="0" cb="0"/><line nr="356" mi="0" ci="12" mb="1" cb="3"/><line nr="357" mi="0" ci="10" mb="0" cb="0"/><line nr="358" mi="11" ci="9" mb="3" cb="1"/><line nr="359" mi="5" ci="0" mb="0" cb="0"/><line nr="362" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="137" covered="521"/><counter type="BRANCH" missed="16" covered="50"/><counter type="LINE" missed="25" covered="92"/><counter type="COMPLEXITY" missed="23" covered="53"/><counter type="METHOD" missed="10" covered="33"/><counter type="CLASS" missed="2" covered="3"/></sourcefile><sourcefile name="AbstractComponentOwner.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="11" mb="0" cb="2"/><line nr="77" mi="0" ci="6" mb="0" cb="2"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="2"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="1" cb="3"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="2"/><line nr="126" mi="2" ci="2" mb="1" cb="1"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="2"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="2"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="115"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="139" covered="636"/><counter type="BRANCH" missed="18" covered="70"/><counter type="LINE" missed="25" covered="120"/><counter type="COMPLEXITY" missed="25" covered="68"/><counter type="METHOD" missed="10" covered="39"/><counter type="CLASS" missed="2" covered="4"/></package><package name="neureka/backend/standard/algorithms"><class name="neureka/backend/standard/algorithms/Activation" sourcefilename="Activation.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKernelSource" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(Lneureka/Tsr;Lneureka/Tsr;IILneureka/backend/api/operations/Operation$TertiaryNDIConsumer;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(Lneureka/Tsr;IILneureka/backend/api/operations/Operation$TertiaryNDXConsumer;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="34"><counter type="INSTRUCTION" missed="3" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Lneureka/backend/api/ExecutionCall;Ljava/util/function/Function;)Lneureka/Tsr;" line="31"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="30"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lneureka/Tsr;Lneureka/Tsr;)Z" line="27"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="23"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lneureka/backend/api/ExecutionCall;)F" line="19"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lneureka/Tsr;)Z" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="177"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="49"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/algorithms/Convolution" sourcefilename="Convolution.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKernelSource" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convolve" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;IIILneureka/backend/api/operations/Operation$TertiaryNDIConsumer;)V" line="35"><counter type="INSTRUCTION" missed="254" covered="240"/><counter type="BRANCH" missed="45" covered="29"/><counter type="LINE" missed="50" covered="50"/><counter type="COMPLEXITY" missed="25" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convolve" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;IIILneureka/backend/api/operations/Operation$TertiaryNDXConsumer;)V" line="182"><counter type="INSTRUCTION" missed="67" covered="443"/><counter type="BRANCH" missed="13" covered="61"/><counter type="LINE" missed="13" covered="92"/><counter type="COMPLEXITY" missed="10" covered="28"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lneureka/backend/api/ExecutionCall;)F" line="18"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lneureka/Tsr;)Z" line="19"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="321" covered="707"/><counter type="BRANCH" missed="58" covered="90"/><counter type="LINE" missed="63" covered="149"/><counter type="COMPLEXITY" missed="35" covered="45"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/algorithms/GenericAlgorithm" sourcefilename="GenericAlgorithm.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/algorithms/Scalarization" sourcefilename="Scalarization.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKernelSource" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalarize" desc="(Lneureka/Tsr;IILneureka/backend/api/operations/Operation$PrimaryNDIConsumer;)V" line="63"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalarize" desc="(Lneureka/Tsr;IILneureka/backend/api/operations/Operation$PrimaryNDXConsumer;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="32"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="(Lneureka/backend/api/ExecutionCall;)F" line="19"><counter type="INSTRUCTION" missed="6" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lneureka/Tsr;)Z" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lneureka/Tsr;)Z" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="80" covered="88"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="21" covered="23"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/algorithms/Broadcast" sourcefilename="Broadcast.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKernelSource" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;IIILneureka/backend/api/operations/Operation$TertiaryNDIConsumer;)V" line="101"><counter type="INSTRUCTION" missed="150" covered="121"/><counter type="BRANCH" missed="25" covered="11"/><counter type="LINE" missed="34" covered="29"/><counter type="COMPLEXITY" missed="14" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;IIILneureka/backend/api/operations/Operation$TertiaryNDXConsumer;)V" line="197"><counter type="INSTRUCTION" missed="2" covered="267"/><counter type="BRANCH" missed="3" covered="33"/><counter type="LINE" missed="0" covered="63"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="61"><counter type="INSTRUCTION" missed="11" covered="104"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="45"><counter type="INSTRUCTION" missed="2" covered="76"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lneureka/backend/api/ExecutionCall;)F" line="21"><counter type="INSTRUCTION" missed="2" covered="91"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lneureka/Tsr;)Z" line="23"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="169" covered="691"/><counter type="BRANCH" missed="36" covered="86"/><counter type="LINE" missed="36" covered="139"/><counter type="COMPLEXITY" missed="25" covered="45"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/backend/standard/algorithms/Operator" sourcefilename="Operator.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKernelSource" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operate" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;IIILneureka/backend/api/operations/Operation$SecondaryNDIConsumer;)V" line="64"><counter type="INSTRUCTION" missed="18" covered="50"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operate" desc="(Lneureka/Tsr;Lneureka/Tsr;Lneureka/Tsr;IIILneureka/backend/api/operations/Operation$PrimaryNDXConsumer;)V" line="95"><counter type="INSTRUCTION" missed="11" covered="40"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="(Lneureka/backend/api/ExecutionCall;)Lneureka/backend/api/ExecutionCall;" line="34"><counter type="INSTRUCTION" missed="3" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="(Lneureka/calculus/implementations/FunctionNode;Lneureka/backend/api/ExecutionCall;)Lneureka/Tsr;" line="31"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="30"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="(Lneureka/backend/api/ExecutionCall;)Z" line="29"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="(Lneureka/backend/api/ExecutionCall;)F" line="21"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lneureka/Tsr;)Z" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(ILjava/util/List;Lneureka/Tsr;)Z" line="24"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;" line="22"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="223"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="4" covered="49"/><counter type="COMPLEXITY" missed="6" covered="18"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Convolution.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="1" cb="1"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="2"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="1" cb="1"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="2"/><line nr="66" mi="0" ci="7" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="2"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="14" mb="2" cb="2"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="14" mb="0" cb="4"/><line nr="76" mi="0" ci="9" mb="0" cb="2"/><line nr="77" mi="0" ci="7" mb="0" cb="2"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="1" cb="1"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="7" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="7" ci="0" mb="2" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="10" ci="0" mb="2" cb="0"/><line nr="111" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="2" cb="0"/><line nr="123" mi="7" ci="0" mb="2" cb="0"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="10" ci="0" mb="2" cb="0"/><line nr="128" mi="8" ci="0" mb="0" cb="0"/><line nr="129" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="2" cb="0"/><line nr="139" mi="7" ci="0" mb="2" cb="0"/><line nr="140" mi="2" ci="0" mb="2" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="7" ci="0" mb="2" cb="0"/><line nr="143" mi="17" ci="0" mb="6" cb="0"/><line nr="145" mi="12" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="7" ci="0" mb="2" cb="0"/><line nr="150" mi="8" ci="0" mb="0" cb="0"/><line nr="151" mi="7" ci="0" mb="2" cb="0"/><line nr="152" mi="9" ci="0" mb="2" cb="0"/><line nr="153" mi="6" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="10" ci="0" mb="2" cb="0"/><line nr="158" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="7" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="2"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="2"/><line nr="199" mi="0" ci="7" mb="0" cb="2"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="2"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="1" cb="1"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="2"/><line nr="217" mi="0" ci="7" mb="0" cb="2"/><line nr="218" mi="0" ci="2" mb="0" cb="2"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="14" mb="2" cb="2"/><line nr="224" mi="0" ci="7" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="0"/><line nr="226" mi="0" ci="14" mb="0" cb="4"/><line nr="227" mi="0" ci="9" mb="0" cb="2"/><line nr="228" mi="0" ci="7" mb="0" cb="2"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="7" mb="0" cb="0"/><line nr="231" mi="0" ci="7" mb="0" cb="2"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="7" mb="1" cb="1"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="2" ci="5" mb="1" cb="1"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="2" cb="0"/><line nr="256" mi="7" ci="0" mb="2" cb="0"/><line nr="257" mi="6" ci="0" mb="0" cb="0"/><line nr="258" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="9" ci="0" mb="2" cb="0"/><line nr="261" mi="8" ci="0" mb="0" cb="0"/><line nr="262" mi="8" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="2"/><line nr="272" mi="0" ci="7" mb="1" cb="1"/><line nr="273" mi="6" ci="0" mb="0" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="9" mb="0" cb="2"/><line nr="277" mi="0" ci="8" mb="0" cb="0"/><line nr="278" mi="0" ci="8" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="2"/><line nr="287" mi="0" ci="7" mb="0" cb="2"/><line nr="288" mi="0" ci="2" mb="0" cb="2"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="7" mb="0" cb="2"/><line nr="291" mi="0" ci="17" mb="0" cb="6"/><line nr="293" mi="0" ci="12" mb="0" cb="2"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="7" mb="1" cb="1"/><line nr="298" mi="0" ci="7" mb="0" cb="0"/><line nr="299" mi="0" ci="7" mb="0" cb="2"/><line nr="300" mi="0" ci="9" mb="0" cb="2"/><line nr="301" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="9" mb="0" cb="2"/><line nr="306" mi="0" ci="8" mb="0" cb="0"/><line nr="307" mi="0" ci="8" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="2" ci="0" mb="0" cb="0"/><line nr="314" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="321" covered="707"/><counter type="BRANCH" missed="58" covered="90"/><counter type="LINE" missed="63" covered="149"/><counter type="COMPLEXITY" missed="35" covered="45"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Operator.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="17" mb="0" cb="2"/><line nr="22" mi="0" ci="16" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="15" mb="0" cb="4"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="1" cb="1"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="6" ci="3" mb="5" cb="1"/><line nr="65" mi="12" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="9" mb="2" cb="4"/><line nr="96" mi="11" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="223"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="4" covered="49"/><counter type="COMPLEXITY" missed="6" covered="18"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Broadcast.java"><line nr="13" mi="2" ci="6" mb="1" cb="1"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="2"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="26" mb="0" cb="6"/><line nr="29" mi="0" ci="7" mb="0" cb="2"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="17" mb="0" cb="2"/><line nr="34" mi="0" ci="6" mb="0" cb="4"/><line nr="35" mi="0" ci="8" mb="0" cb="2"/><line nr="36" mi="2" ci="13" mb="1" cb="5"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="2" ci="6" mb="1" cb="1"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="2"/><line nr="50" mi="0" ci="19" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="19" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="1" cb="1"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="4" ci="7" mb="2" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="2"/><line nr="72" mi="4" ci="19" mb="2" cb="6"/><line nr="74" mi="0" ci="8" mb="0" cb="2"/><line nr="75" mi="0" ci="15" mb="0" cb="2"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="1" ci="7" mb="1" cb="1"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="1" cb="1"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="7" mb="0" cb="2"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="2"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="1" cb="1"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="2" cb="0"/><line nr="141" mi="7" ci="0" mb="2" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="7" ci="0" mb="0" cb="0"/><line nr="144" mi="7" ci="0" mb="2" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="2" cb="0"/><line nr="156" mi="7" ci="0" mb="2" cb="0"/><line nr="157" mi="2" ci="0" mb="2" cb="0"/><line nr="158" mi="8" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="7" ci="0" mb="2" cb="0"/><line nr="163" mi="8" ci="0" mb="0" cb="0"/><line nr="164" mi="8" ci="0" mb="0" cb="0"/><line nr="165" mi="7" ci="0" mb="2" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="9" ci="0" mb="2" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="9" ci="0" mb="2" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="1" ci="7" mb="1" cb="1"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="2"/><line nr="208" mi="0" ci="3" mb="0" cb="2"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="7" mb="0" cb="2"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="214" mi="0" ci="7" mb="0" cb="2"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="1" cb="1"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="10" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="2"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="2"/><line nr="236" mi="0" ci="7" mb="0" cb="2"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="0" ci="7" mb="0" cb="2"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="2"/><line nr="251" mi="0" ci="7" mb="0" cb="2"/><line nr="252" mi="0" ci="2" mb="0" cb="2"/><line nr="253" mi="0" ci="8" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="2"/><line nr="258" mi="0" ci="7" mb="0" cb="0"/><line nr="259" mi="0" ci="7" mb="0" cb="0"/><line nr="260" mi="0" ci="7" mb="0" cb="2"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="1" ci="8" mb="1" cb="1"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="9" mb="0" cb="2"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="169" covered="691"/><counter type="BRANCH" missed="36" covered="86"/><counter type="LINE" missed="36" covered="139"/><counter type="COMPLEXITY" missed="25" covered="45"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Scalarization.java"><line nr="13" mi="2" ci="6" mb="1" cb="1"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="0" ci="7" mb="0" cb="2"/><line nr="23" mi="0" ci="2" mb="0" cb="2"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="4" ci="5" mb="3" cb="1"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="10" ci="0" mb="4" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="2" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="88"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="21" covered="23"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GenericAlgorithm.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Activation.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="6" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="1" cb="1"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="177"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="49"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="611" covered="1890"/><counter type="BRANCH" missed="113" covered="205"/><counter type="LINE" missed="126" covered="411"/><counter type="COMPLEXITY" missed="76" covered="132"/><counter type="METHOD" missed="3" covered="46"/><counter type="CLASS" missed="0" covered="6"/></package><package name="neureka/ndim/config/types/complex"><class name="neureka/ndim/config/types/complex/ComplexD3Configuration" sourcefilename="ComplexD3Configuration.java"><method name="&lt;init&gt;" desc="([I[I[I[I[I)V" line="49"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="construct" desc="([I[I[I[I[I)Lneureka/ndim/config/NDConfiguration;" line="74"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shape" desc="()[I" line="84"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="89"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxmap" desc="()[I" line="94"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="(I)I" line="99"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translation" desc="()[I" line="104"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="109"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spread" desc="()[I" line="114"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="(I)I" line="119"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="()[I" line="124"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="129"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="138"><counter type="INSTRUCTION" missed="26" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="159"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i_of_idx" desc="([I)I" line="177"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="(III)I" line="184"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="174" covered="308"/><counter type="BRANCH" missed="15" covered="9"/><counter type="LINE" missed="22" covered="33"/><counter type="COMPLEXITY" missed="14" covered="15"/><counter type="METHOD" missed="6" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/types/complex/ComplexDefaultNDConfiguration" sourcefilename="ComplexDefaultNDConfiguration.java"><method name="&lt;init&gt;" desc="([I[I[I[I[I)V" line="44"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="construct" desc="([I[I[I[I[I)Lneureka/ndim/config/NDConfiguration;" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxmap" desc="()[I" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="(I)I" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translation" desc="()[I" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="94"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spread" desc="()[I" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="(I)I" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="offset" desc="()[I" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="114"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i_of_i" desc="(I)I" line="122"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="127"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="([I)I" line="144"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="160"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="5" covered="27"/><counter type="COMPLEXITY" missed="5" covered="15"/><counter type="METHOD" missed="5" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/types/complex/ComplexScalarConfiguration" sourcefilename="ComplexScalarConfiguration.java"><method name="construct" desc="([I[I)Lneureka/ndim/config/NDConfiguration;" line="25"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="31"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shape" desc="()[I" line="43"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="()[I" line="53"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="(I)I" line="58"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="()[I" line="63"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="()[I" line="73"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="(I)I" line="78"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="()[I" line="83"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="94"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idx_of_i" desc="(I)[I" line="99"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i_of_idx" desc="([I)I" line="104"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="69"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/types/complex/ComplexD1Configuration" sourcefilename="ComplexD1Configuration.java"><method name="construct" desc="([I[I[I[I[I)Lneureka/ndim/config/NDConfiguration;" line="39"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIIII)V" line="48"><counter type="INSTRUCTION" missed="12" covered="30"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="61"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shape" desc="()[I" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="()[I" line="76"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="(I)I" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="()[I" line="86"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="()[I" line="96"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="(I)I" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="()[I" line="106"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="117"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="122"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i_of_idx" desc="([I)I" line="126"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="i_of_idx" desc="(I)I" line="132"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="125"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/ndim/config/types/complex/ComplexD2Configuration" sourcefilename="ComplexD2Configuration.java"><method name="&lt;init&gt;" desc="([I[I[I[I[I)V" line="44"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="construct" desc="([I[I[I[I[I)Lneureka/ndim/config/NDConfiguration;" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="69"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="74"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="79"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxmap" desc="()[I" line="84"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxmap" desc="(I)I" line="89"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translation" desc="()[I" line="94"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="99"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spread" desc="()[I" line="104"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spread" desc="(I)I" line="109"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="()[I" line="114"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="(I)I" line="119"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="127"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="138"><counter type="INSTRUCTION" missed="26" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="([I)I" line="153"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="(II)I" line="161"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="80" covered="282"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="10" covered="34"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="4" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ComplexD1Configuration.java"><line nr="6" mi="2" ci="6" mb="1" cb="1"/><line nr="39" mi="0" ci="20" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="4" ci="4" mb="2" cb="2"/><line nr="55" mi="4" ci="4" mb="2" cb="2"/><line nr="56" mi="4" ci="4" mb="2" cb="2"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="14" mb="0" cb="0"/><line nr="122" mi="10" ci="0" mb="0" cb="0"/><line nr="126" mi="13" ci="0" mb="0" cb="0"/><line nr="132" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="125"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComplexD3Configuration.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="18" mb="0" cb="0"/><line nr="89" mi="14" ci="0" mb="4" cb="0"/><line nr="94" mi="0" ci="18" mb="0" cb="0"/><line nr="99" mi="14" ci="0" mb="4" cb="0"/><line nr="104" mi="0" ci="18" mb="0" cb="0"/><line nr="109" mi="14" ci="0" mb="4" cb="0"/><line nr="114" mi="0" ci="18" mb="0" cb="0"/><line nr="119" mi="0" ci="14" mb="0" cb="4"/><line nr="124" mi="0" ci="18" mb="0" cb="0"/><line nr="129" mi="0" ci="14" mb="0" cb="4"/><line nr="138" mi="0" ci="5" mb="1" cb="1"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="33" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="2" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="15" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="39" mb="0" cb="0"/><line nr="184" mi="33" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="174" covered="308"/><counter type="BRANCH" missed="15" covered="9"/><counter type="LINE" missed="22" covered="33"/><counter type="COMPLEXITY" missed="14" covered="15"/><counter type="METHOD" missed="6" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComplexDefaultNDConfiguration.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="2"/><line nr="129" mi="0" ci="10" mb="0" cb="2"/><line nr="130" mi="0" ci="12" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="2"/><line nr="135" mi="0" ci="12" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="30" mb="0" cb="2"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="160"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="5" covered="27"/><counter type="COMPLEXITY" missed="5" covered="15"/><counter type="METHOD" missed="5" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComplexD2Configuration.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="13" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="2" cb="0"/><line nr="84" mi="0" ci="13" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="2" cb="0"/><line nr="94" mi="0" ci="13" mb="0" cb="0"/><line nr="99" mi="8" ci="0" mb="2" cb="0"/><line nr="104" mi="0" ci="13" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="2"/><line nr="114" mi="0" ci="13" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="2"/><line nr="127" mi="0" ci="5" mb="0" cb="2"/><line nr="128" mi="0" ci="31" mb="0" cb="0"/><line nr="131" mi="0" ci="31" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="1" cb="1"/><line nr="140" mi="10" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="11" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="10" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="10" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="15" mb="0" cb="0"/><line nr="155" mi="0" ci="15" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="13" ci="0" mb="0" cb="0"/><line nr="163" mi="13" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="282"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="10" covered="34"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="4" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComplexScalarConfiguration.java"><line nr="25" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="69"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="4" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="350" covered="944"/><counter type="BRANCH" missed="29" covered="31"/><counter type="LINE" missed="45" covered="132"/><counter type="COMPLEXITY" missed="42" covered="72"/><counter type="METHOD" missed="23" covered="61"/><counter type="CLASS" missed="0" covered="5"/></package><package name="neureka/calculus/assembly"><class name="neureka/calculus/assembly/FunctionBuilder" sourcefilename="FunctionBuilder.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="(Lneureka/backend/api/operations/Operation;IZ)Lneureka/calculus/Function;" line="23"><counter type="INSTRUCTION" missed="60" covered="48"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Ljava/lang/String;Z)Lneureka/calculus/Function;" line="50"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_build" desc="(Ljava/lang/String;Z)Lneureka/calculus/Function;" line="76"><counter type="INSTRUCTION" missed="13" covered="708"/><counter type="BRANCH" missed="16" covered="106"/><counter type="LINE" missed="1" covered="148"/><counter type="COMPLEXITY" missed="16" covered="46"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_rebindPairwise" desc="(Ljava/util/List;I)Ljava/util/List;" line="289"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="78" covered="899"/><counter type="BRANCH" missed="25" covered="127"/><counter type="LINE" missed="7" covered="176"/><counter type="COMPLEXITY" missed="25" covered="57"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="neureka/calculus/assembly/FunctionParser" sourcefilename="FunctionParser.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfOperationsWithin" desc="(Ljava/util/List;)I" line="19"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsedOperation" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findComponentIn" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="2" covered="122"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findParametersIn" desc="(Ljava/lang/String;I)Ljava/util/List;" line="77"><counter type="INSTRUCTION" missed="2" covered="98"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnyOperation" desc="(Ljava/lang/String;)Z" line="105"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="groupBy" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="21" covered="21"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isForbiddenChar" desc="(C)Z" line="122"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="15" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="15" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanedHeadAndTail" desc="(Ljava/lang/String;)Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="38" covered="158"/><counter type="BRANCH" missed="17" covered="27"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="15" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unpackAndCorrect" desc="(Ljava/lang/String;)Ljava/lang/String;" line="168"><counter type="INSTRUCTION" missed="26" covered="209"/><counter type="BRANCH" missed="5" covered="31"/><counter type="LINE" missed="5" covered="42"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assumptionBasedOn" desc="(Ljava/lang/String;)Ljava/lang/String;" line="226"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="similarity" desc="(Ljava/lang/String;Ljava/lang/String;)D" line="241"><counter type="INSTRUCTION" missed="14" covered="179"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="1" covered="28"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="108" covered="965"/><counter type="BRANCH" missed="51" covered="163"/><counter type="LINE" missed="10" covered="170"/><counter type="COMPLEXITY" missed="48" covered="72"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FunctionParser.java"><line nr="15" mi="5" ci="6" mb="1" cb="1"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="11" mb="0" cb="2"/><line nr="21" mi="0" ci="6" mb="0" cb="2"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="2"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="10" mb="0" cb="2"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="1" cb="3"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="2" ci="4" mb="1" cb="1"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="2"/><line nr="47" mi="0" ci="7" mb="0" cb="2"/><line nr="48" mi="0" ci="6" mb="0" cb="2"/><line nr="49" mi="0" ci="2" mb="0" cb="2"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="12" mb="0" cb="2"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="2"/><line nr="54" mi="0" ci="5" mb="0" cb="2"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="10" mb="0" cb="4"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="2" ci="4" mb="1" cb="1"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="10" mb="0" cb="4"/><line nr="85" mi="0" ci="8" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="4"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="9" mb="0" cb="2"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="2"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="4"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="2"/><line nr="106" mi="0" ci="13" mb="1" cb="3"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="1" cb="1"/><line nr="113" mi="0" ci="4" mb="1" cb="1"/><line nr="114" mi="0" ci="9" mb="0" cb="0"/><line nr="115" mi="10" ci="2" mb="1" cb="1"/><line nr="117" mi="11" ci="0" mb="2" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="52" mb="15" cb="17"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="2"/><line nr="133" mi="0" ci="25" mb="2" cb="8"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="3" ci="4" mb="1" cb="1"/><line nr="138" mi="0" ci="14" mb="0" cb="2"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="1" cb="1"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="2"/><line nr="146" mi="14" ci="19" mb="7" cb="3"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="3" ci="4" mb="1" cb="1"/><line nr="151" mi="0" ci="15" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="1" cb="1"/><line nr="155" mi="0" ci="13" mb="2" cb="2"/><line nr="156" mi="8" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="13" mb="2" cb="2"/><line nr="159" mi="8" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="2" ci="2" mb="1" cb="1"/><line nr="169" mi="2" ci="3" mb="1" cb="1"/><line nr="170" mi="0" ci="6" mb="0" cb="2"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="2"/><line nr="192" mi="0" ci="7" mb="0" cb="2"/><line nr="193" mi="0" ci="6" mb="0" cb="2"/><line nr="195" mi="0" ci="2" mb="0" cb="2"/><line nr="196" mi="0" ci="2" mb="1" cb="1"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="8" ci="0" mb="2" cb="0"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="15" mb="0" cb="6"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="8" mb="0" cb="2"/><line nr="214" mi="0" ci="7" mb="0" cb="2"/><line nr="215" mi="0" ci="6" mb="0" cb="2"/><line nr="216" mi="0" ci="10" mb="0" cb="4"/><line nr="218" mi="0" ci="11" mb="0" cb="2"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="8" mb="0" cb="2"/><line nr="229" mi="0" ci="7" mb="0" cb="0"/><line nr="230" mi="0" ci="7" mb="0" cb="2"/><line nr="231" mi="0" ci="4" mb="0" cb="2"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="11" mb="0" cb="2"/><line nr="241" mi="0" ci="9" mb="0" cb="2"/><line nr="242" mi="0" ci="9" mb="0" cb="2"/><line nr="244" mi="2" ci="3" mb="1" cb="1"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="9" mb="0" cb="2"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="8" mb="0" cb="2"/><line nr="257" mi="0" ci="17" mb="0" cb="2"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="7" mb="1" cb="1"/><line nr="260" mi="8" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="7" mb="0" cb="2"/><line nr="263" mi="0" ci="7" mb="0" cb="0"/><line nr="265" mi="0" ci="9" mb="0" cb="0"/><line nr="266" mi="0" ci="10" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="21" mb="0" cb="2"/><line nr="272" mi="4" ci="6" mb="2" cb="2"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="965"/><counter type="BRANCH" missed="51" covered="163"/><counter type="LINE" missed="10" covered="170"/><counter type="COMPLEXITY" missed="48" covered="72"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionBuilder.java"><line nr="14" mi="5" ci="6" mb="1" cb="1"/><line nr="23" mi="0" ci="4" mb="1" cb="1"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="1" cb="1"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="22" ci="0" mb="2" cb="0"/><line nr="28" mi="7" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="1" cb="1"/><line nr="31" mi="12" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="1" cb="1"/><line nr="33" mi="12" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="2"/><line nr="37" mi="0" ci="13" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="1" cb="1"/><line nr="51" mi="0" ci="11" mb="0" cb="4"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="13" mb="0" cb="2"/><line nr="56" mi="0" ci="11" mb="0" cb="2"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="1" cb="1"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="16" mb="0" cb="2"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="1" cb="1"/><line nr="96" mi="0" ci="9" mb="1" cb="1"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="2"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="1" ci="3" mb="1" cb="1"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="2"/><line nr="110" mi="0" ci="9" mb="0" cb="2"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="2"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="2"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="2"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="135" mi="0" ci="7" mb="0" cb="2"/><line nr="137" mi="0" ci="9" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="1" cb="1"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="2"/><line nr="144" mi="0" ci="11" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="2"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="2"/><line nr="171" mi="0" ci="8" mb="0" cb="2"/><line nr="172" mi="0" ci="9" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="2"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="4"/><line nr="185" mi="0" ci="8" mb="1" cb="1"/><line nr="186" mi="0" ci="9" mb="0" cb="2"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="4" ci="4" mb="2" cb="2"/><line nr="193" mi="0" ci="10" mb="0" cb="2"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="9" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="203" mi="0" ci="13" mb="0" cb="4"/><line nr="204" mi="0" ci="4" mb="0" cb="2"/><line nr="206" mi="0" ci="10" mb="0" cb="4"/><line nr="207" mi="0" ci="5" mb="0" cb="2"/><line nr="208" mi="0" ci="3" mb="1" cb="1"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="2"/><line nr="213" mi="0" ci="6" mb="0" cb="2"/><line nr="214" mi="0" ci="4" mb="0" cb="2"/><line nr="216" mi="0" ci="11" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="2"/><line nr="226" mi="0" ci="5" mb="0" cb="2"/><line nr="227" mi="0" ci="5" mb="0" cb="2"/><line nr="229" mi="0" ci="8" mb="1" cb="3"/><line nr="230" mi="0" ci="2" mb="1" cb="1"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="8" mb="0" cb="2"/><line nr="241" mi="0" ci="9" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="21" mb="0" cb="6"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="14" mb="1" cb="3"/><line nr="249" mi="0" ci="10" mb="0" cb="0"/><line nr="251" mi="0" ci="10" mb="1" cb="1"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="10" mb="0" cb="2"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="11" mb="0" cb="0"/><line nr="257" mi="0" ci="10" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="1" cb="1"/><line nr="260" mi="0" ci="26" mb="0" cb="0"/><line nr="261" mi="0" ci="7" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="10" mb="0" cb="2"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="5" ci="4" mb="1" cb="1"/><line nr="272" mi="2" ci="3" mb="1" cb="1"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="10" mb="0" cb="2"/><line nr="275" mi="0" ci="6" mb="1" cb="1"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="9" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="2"/><line nr="290" mi="0" ci="24" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="78" covered="899"/><counter type="BRANCH" missed="25" covered="127"/><counter type="LINE" missed="7" covered="176"/><counter type="COMPLEXITY" missed="25" covered="57"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="186" covered="1864"/><counter type="BRANCH" missed="76" covered="290"/><counter type="LINE" missed="17" covered="346"/><counter type="COMPLEXITY" missed="73" covered="129"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="2"/></package><package name="neureka/ndim/config/types/views"><class name="neureka/ndim/config/types/views/SimpleReshapeView" sourcefilename="SimpleReshapeView.java"><method name="&lt;init&gt;" desc="([ILneureka/ndim/config/NDConfiguration;)V" line="24"><counter type="INSTRUCTION" missed="5" covered="68"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()[I" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(I)I" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxmap" desc="()[I" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxmap" desc="(I)I" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translation" desc="()[I" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="translation" desc="(I)I" line="79"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spread" desc="()[I" line="84"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spread" desc="(I)I" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="offset" desc="()[I" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="offset" desc="(I)I" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_i" desc="(I)I" line="104"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx_of_i" desc="(I)[I" line="109"><counter type="INSTRUCTION" missed="29" covered="39"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="i_of_idx" desc="([I)I" line="126"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_rearrange" desc="([I[I[I)[I" line="132"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/Integer;)I" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="63" covered="165"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="10" covered="31"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SimpleReshapeView.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="2"/><line nr="31" mi="5" ci="5" mb="1" cb="1"/><line nr="34" mi="0" ci="11" mb="0" cb="2"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="1" cb="1"/><line nr="111" mi="10" ci="0" mb="2" cb="0"/><line nr="112" mi="12" ci="0" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="2"/><line nr="117" mi="0" ci="12" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="2"/><line nr="133" mi="0" ci="12" mb="0" cb="2"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="63" covered="165"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="10" covered="31"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="63" covered="165"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="10" covered="31"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></package><counter type="INSTRUCTION" missed="16869" covered="40155"/><counter type="BRANCH" missed="1810" covered="3126"/><counter type="LINE" missed="2645" covered="7265"/><counter type="COMPLEXITY" missed="2154" covered="2816"/><counter type="METHOD" missed="891" covered="1611"/><counter type="CLASS" missed="15" covered="168"/></report>