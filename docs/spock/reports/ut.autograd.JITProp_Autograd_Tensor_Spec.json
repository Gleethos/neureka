{
  "className":"ut.autograd.JITProp_Autograd_Tensor_Spec",
  "title":"",
  "narrative":"",
  "subjects":[],
  "statistics":{
    "runs":"8",
    "successRate":"100.0%",
    "failures":"0",
    "errors":"0",
    "skipped":"0",
    "duration":"0.254 seconds"
  },
  "headers":["\n            <h2>Autograd Tensor Integration Tests</h2>\n            <p>\n                This specification contains tests which\n                cover the autograd behavior of tensors. <br>\n                The classes involved in governing the tested features are\n                the Tsr, GraphNode and Function (& implementations) classes.\n            </p>\n        "],"tags":{},"see":[],
  "features":[ 
    {
      "id":"Test pending error optimization",
      "result":"PASS",
      "duration":"0.015 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"The view settings are being set to legacy.","code":["Neureka.get().settings().view().getNDPrintSettings().setIsLegacy(true)"]},

        {"kind":"and","text":"The simple scalar tensors are being instantiated, where one requires gradients.","code":["Tsr a = Tsr.of(2d).setRqsGradient(true)","Tsr b = Tsr.of(-4d)","Tsr c = Tsr.of(3d).setRqsGradient(true)"]},

        {"kind":"when","text":"The following calculations are being executed :","code":["Tsr s =  (a*b) + 2","Tsr x = s * (s+c)","Neureka.get().settings().autograd().setIsRetainingPendingErrorForJITProp(false)","x.backward(Tsr.of(1d))","Neureka.get().settings().autograd().setIsRetainingPendingErrorForJITProp(true)"]},

        {"kind":"then","text":"","code":["c.toString().contains(\"(3.0):g:(-6.0)\")","a.toString().contains(\"(2.0):g:(36.0)\")"]},

        {"kind":"when","text":"","code":["Neureka.get().settings().autograd().setIsRetainingPendingErrorForJITProp(false)","x.backward(4d)","Neureka.get().settings().autograd().setIsRetainingPendingErrorForJITProp(true)"]},

        {"kind":"then","text":"","code":["c.toString().contains(\"(3.0):g:(-6.0)\")","a.toString().contains(\"(2.0):g:(36.0)\")"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"Test JIT propagation variant one.",
      "result":"PASS",
      "duration":"0.011 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"","code":["Neureka.get().settings().view().getNDPrintSettings().setIsLegacy(true)","Neureka.get().settings().autograd().setIsApplyingGradientWhenRequested(false)","Neureka.get().settings().autograd().setIsApplyingGradientWhenTensorIsUsed(true)","Neureka.get().settings().autograd().setIsRetainingPendingErrorForJITProp(true)","Tsr a = Tsr.of(2d).setRqsGradient(true)","Tsr b = Tsr.of(-4d)","Tsr c = Tsr.of(3d).setRqsGradient(true)","Tsr s =  (a*b) + 2","Tsr x = s * (s+c)"]},

        {"kind":"when","text":"","code":["x.backward(Tsr.of(1d))"]},

        {"kind":"then","text":"","code":["c.toString().contains(\"g:(-6.0)\")","a.toString().contains(\"g:(null)\")"]},

        {"kind":"when","text":"","code":["a.applyGradient()"]},

        {"kind":"then","text":"","code":["c.toString().contains(\"g:(-6.0)\")","a.toString().contains(\"(38.0):g:(null)\")"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"Test JIT propagation variant two.",
      "result":"PASS",
      "duration":"0.009 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"","code":["Neureka.get().settings().view().getNDPrintSettings().setIsLegacy(true)","Neureka.get().settings().autograd().setIsApplyingGradientWhenRequested(false)","Neureka.get().settings().autograd().setIsApplyingGradientWhenTensorIsUsed(true)","Neureka.get().settings().autograd().setIsRetainingPendingErrorForJITProp(true)","Tsr a = Tsr.of(2d).setRqsGradient(true)","Tsr b = Tsr.of(-4d)","Tsr c = Tsr.of(3d).setRqsGradient(true)","Tsr s =  (a*b) + 2","Tsr x = s * (s+c)"]},

        {"kind":"when","text":"","code":["x.backward(Tsr.of(1d))"]},

        {"kind":"then","text":"","code":["c.toString().contains(\"g:(-6.0)\")","a.toString().contains(\"g:(null)\")"]},

        {"kind":"when","text":"","code":["Neureka.get().settings().autograd().setIsApplyingGradientWhenTensorIsUsed(true)","Tsr y = a+3","Neureka.get().settings().autograd().setIsApplyingGradientWhenTensorIsUsed(false)"]},

        {"kind":"then","text":"","code":["y.toString().contains(\"(41.0)\")","c.toString().contains(\"g:(-6.0)\")","a.toString().contains(\"(38.0):g:(null)\")"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"Gradient auto-apply kicks in when used AD uses JIT prop",
      "result":"PASS",
      "duration":"0.030 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"","code":["Neureka.get().settings().view().getNDPrintSettings().setIsLegacy(true)","Neureka.get().settings().autograd().setIsRetainingPendingErrorForJITProp(true)","Neureka.get().settings().autograd().setIsApplyingGradientWhenTensorIsUsed(true)","Neureka.get().settings().debug().setIsKeepingDerivativeTargetPayloads(false)","Neureka.get().settings().autograd().setIsApplyingGradientWhenRequested(false)","Tsr a = Tsr.of(2d).setRqsGradient(true)","Tsr b = Tsr.of(-3d)","Tsr c = Tsr.of(3d).setRqsGradient(true)"]},

        {"kind":"when","text":"","code":["Tsr s = (a+b) * c","Tsr x = (s/a)+s"]},

        {"kind":"then","text":"","code":["!a.has(JITProp.class)","!b.has(JITProp.class)","!c.has(JITProp.class)","!s.getGraphNode().isReliesOnJustInTimeProp()","!a.getGraphNode().isReliesOnJustInTimeProp()","!b.getGraphNode().isReliesOnJustInTimeProp()","!c.getGraphNode().isReliesOnJustInTimeProp()"]},

        {"kind":"when","text":"","code":["x.backward(1d)"]},

        {"kind":"then","text":"","code":["a.has(JITProp.class)","!b.has(JITProp.class)","c.has(JITProp.class)","s.getGraphNode().isReliesOnJustInTimeProp()","a.getGraphNode().isReliesOnJustInTimeProp()","!b.getGraphNode().isReliesOnJustInTimeProp()","c.getGraphNode().isReliesOnJustInTimeProp()","a.toString().contains(\"g:(0.75)\")","c.toString().contains(\"g:(null)\")","x.toString().contains(\"(-4.5)\")"]},

        {"kind":"when","text":"","code":["def f = new FunctionParser( Neureka.get().backend() ).parse(\"I[0]*I[1]\", false)","Tsr[] inputs = new Tsr[]{c, a}","Tsr result = f(inputs)"]},

        {"kind":"then","text":"","code":["s.getGraphNode().isReliesOnJustInTimeProp()","a.getGraphNode().isReliesOnJustInTimeProp()","!b.getGraphNode().isReliesOnJustInTimeProp()","c.getGraphNode().isReliesOnJustInTimeProp()","! result.toString().contains(\"d[1]:\")","! result.toString().contains(\"d[1]:\")","a.toString().contains(\"(2.0):g:(0.75)\")","c.toString().contains(\"g:(null)\")","x.toString().contains(\"(-4.5)\")"]},

        {"kind":"when","text":"","code":["f = new FunctionParser( Neureka.get().backend() ).parse(\"I[0]*I[1]\", true)","result = f(inputs)"]},

        {"kind":"then","text":"","code":["result.toString().contains(\"d[1]:(7.25)\")","result.toString().contains(\"d[1]:(1.5)\")","a.toString().contains(\"(7.25):g:(null)\")","c.toString().contains(\"(1.5):g:(null)\")","x.toString().contains(\"(-4.5)\")","!c.has(JITProp.class)","!b.has(JITProp.class)","!s.getGraphNode().isReliesOnJustInTimeProp()","!a.getGraphNode().isReliesOnJustInTimeProp()","!b.getGraphNode().isReliesOnJustInTimeProp()","!c.getGraphNode().isReliesOnJustInTimeProp()"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"Test no preemptive gradient apply when not requested and auto apply and JIT_prop",
      "result":"PASS",
      "duration":"0.147 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"","code":["Neureka.get().settings().view().getNDPrintSettings().setIsLegacy(true)","Neureka.get().settings().autograd().setIsRetainingPendingErrorForJITProp(true)","Neureka.get().settings().autograd().setIsApplyingGradientWhenTensorIsUsed(true)","Neureka.get().settings().debug().setIsKeepingDerivativeTargetPayloads(false)","Neureka.get().settings().autograd().setIsApplyingGradientWhenRequested(true)","Tsr a = Tsr.of(2d).setRqsGradient(true)","Tsr b = Tsr.of(-3d)","Tsr c = Tsr.of(3d).setRqsGradient(true)"]},

        {"kind":"when","text":"","code":["Tsr s = (a+b) * c","Tsr x = (s/a) + s","System.gc()","Thread.sleep(50)"]},

        {"kind":"then","text":"","code":["!a.has(JITProp.class)","!b.has(JITProp.class)","!c.has(JITProp.class)","!s.has(JITProp.class)","!s.getGraphNode().isReliesOnJustInTimeProp()","!a.getGraphNode().isReliesOnJustInTimeProp()","!b.getGraphNode().isReliesOnJustInTimeProp()","!c.getGraphNode().isReliesOnJustInTimeProp()"]},

        {"kind":"when","text":"","code":["x.backward(1)"]},

        {"kind":"then","text":"","code":["s.getGraphNode().isReliesOnJustInTimeProp()","a.getGraphNode().isReliesOnJustInTimeProp()","!b.getGraphNode().isReliesOnJustInTimeProp()","c.getGraphNode().isReliesOnJustInTimeProp()","a.has(JITProp.class)","!b.has(JITProp.class)","c.has(JITProp.class)","a.toString().contains(\"(2.0):g:(0.75)\")","c.toString().contains(\"(3.0):g:(null)\")","x.toString().contains(\"(-4.5)\")"]},

        {"kind":"when","text":"","code":["def f = new FunctionParser( Neureka.get().backend() ).parse(\"I[0]*I[1]\", false)","Tsr[] inputs = new Tsr[]{c, a}","Tsr result = f(inputs)"]},

        {"kind":"then","text":"","code":["! result.toString().contains(\"d[1]:\")","! result.toString().contains(\"d[1]:\")","a.toString().contains(\"(2.0):g:(0.75)\")","c.toString().contains(\"(3.0):g:(null)\")","x.toString().contains(\"(-4.5)\")"]},

        {"kind":"when","text":"","code":["f = new FunctionParser( Neureka.get().backend() ).parse(\"I[0]*I[1]\", true)","result = f(inputs)"]},

        {"kind":"then","text":"","code":["result.toString().contains(\"d[1]:(2.0)\")","result.toString().contains(\"d[1]:(3.0)\")","a.toString().contains(\"(2.0):g:(0.75)\")","c.toString().contains(\"(3.0):g:(null)\")","x.toString().contains(\"(-4.5)\")"]},

        {"kind":"when","text":"","code":["a.setGradientApplyRequested(true)"]},

        {"kind":"then","text":"","code":["a.toString().contains(\"g:(0.75)\")"]},

        {"kind":"when","text":"","code":["result = f(inputs)"]},

        {"kind":"then","text":"","code":["result.toString().contains(\"d[1]:(7.25)\")","result.toString().contains(\"d[1]:(3.0)\")","a.toString().contains(\"(7.25):g:(null)\")","c.toString().contains(\"(3.0):g:(-1.5)\")","x.toString().contains(\"(-4.5)\")","!a.has(JITProp.class)","!c.has(JITProp.class)","!s.getGraphNode().isReliesOnJustInTimeProp()","!a.getGraphNode().isReliesOnJustInTimeProp()","!b.getGraphNode().isReliesOnJustInTimeProp()","!c.getGraphNode().isReliesOnJustInTimeProp()"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"Test autograd without JIT and auto apply.",
      "result":"PASS",
      "duration":"0.006 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"","code":["Neureka.get().settings().autograd().setIsRetainingPendingErrorForJITProp(false)","Neureka.get().settings().autograd().setIsApplyingGradientWhenTensorIsUsed(false)","Neureka.get().settings().debug().setIsKeepingDerivativeTargetPayloads(false)","Neureka.get().settings().view().getNDPrintSettings().setIsLegacy(true)","Tsr a = Tsr.of(2d).setRqsGradient(true)","Tsr b = Tsr.of(-3d)","Tsr c = Tsr.of(3d).setRqsGradient(true)"]},

        {"kind":"when","text":"","code":["Tsr s = (a+b) * c","Tsr x = (s/a)+s"]},

        {"kind":"then","text":"","code":["!a.has(JITProp.class)","!b.has(JITProp.class)","!c.has(JITProp.class)"]},

        {"kind":"when","text":"","code":["x.backward(1)"]},

        {"kind":"then","text":"","code":["!a.has(JITProp.class)","!b.has(JITProp.class)","!c.has(JITProp.class)","a.toString().contains(\"g:(5.25)\")","c.toString().contains(\"g:(-1.5)\")","x.toString().contains(\"(-4.5)\")"]},

        {"kind":"when","text":"","code":["a.applyGradient()","c.applyGradient()"]},

        {"kind":"then","text":"","code":["a.toString().contains(\"(7.25):g:(null)\")","c.toString().contains(\"(1.5):g:(null)\")"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"Test in-differential and JIT with auto apply",
      "result":"PASS",
      "duration":"0.009 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"","code":["Neureka.get().settings().autograd().setIsRetainingPendingErrorForJITProp(true)","Neureka.get().settings().autograd().setIsApplyingGradientWhenTensorIsUsed(true)","Neureka.get().settings().debug().setIsKeepingDerivativeTargetPayloads(false)","Neureka.get().settings().view().getNDPrintSettings().setIsLegacy(true)","Tsr a = Tsr.of(2d).setRqsGradient(true)","Tsr b = Tsr.of(-3d)","Tsr c = Tsr.of(3d).setRqsGradient(true)"]},

        {"kind":"when","text":"","code":["Tsr s = (a+b) * c","Tsr x = (s**a)+s"]},

        {"kind":"then","text":"","code":["!a.has(JITProp.class)","!b.has(JITProp.class)","!c.has(JITProp.class)"]},

        {"kind":"when","text":"","code":["x.backward(3d)"]},

        {"kind":"then","text":"","code":["a.has(JITProp.class)","!b.has(JITProp.class)","c.has(JITProp.class)","a.toString().contains(\"g:(NaN)\")","c.toString().contains(\"g:(null)\")"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"Test no JIT prop when forward AD",
      "result":"PASS",
      "duration":"0.007 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"","code":["Neureka.get().settings().autograd().setIsRetainingPendingErrorForJITProp(true)","Neureka.get().settings().autograd().setIsApplyingGradientWhenTensorIsUsed(true)","Neureka.get().settings().debug().setIsKeepingDerivativeTargetPayloads(false)","Neureka.get().settings().view().getNDPrintSettings().setIsLegacy(true)","Tsr a = Tsr.of(2d).setRqsGradient(true)","Tsr b = Tsr.of(-4d)","Tsr c = Tsr.of(3d).setRqsGradient(true)"]},

        {"kind":"when","text":"","code":["Tsr s = (a+b) * c","Tsr x = (s**2)+s"]},

        {"kind":"then","text":"","code":["s.toString().contains(\"->d[1]:(-2.0)\")","s.toString().contains(\"->d[1]:(3.0)\")","s.toString().contains(\"[1]:(-6.0)\")","!a.has(JITProp.class)","!b.has(JITProp.class)","!c.has(JITProp.class)"]},

        {"kind":"when","text":"","code":["x.backward(3)"]},

        {"kind":"then","text":"","code":["!a.has(JITProp.class)","!b.has(JITProp.class)","!c.has(JITProp.class)","a.toString().contains(\"g:(-99.0)\")","c.toString().contains(\"g:(66.0)\")"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    }
  
  ],
  "generator":"https://github.com/renatoathaydes/spock-reports"
}