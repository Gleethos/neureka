{
  "className":"ut.backend.core.Backend_Algorithm_Implementation_Spec",
  "title":"",
  "narrative":"",
  "subjects":[],
  "statistics":{
    "runs":"4",
    "successRate":"100.0%",
    "failures":"0",
    "errors":"0",
    "skipped":"0",
    "duration":"0.149 seconds"
  },
  "headers":["\n                   This specification defines the behavior of implementations of the \n                   Algorithm interface! <br> \n        "],"tags":{},"see":[],
  "features":[ 
    {
      "id":"Operator implementations have expected Executor instances.",
      "result":"PASS",
      "duration":"0",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"when","text":"Host- and CL- executor instance are being fetched...","code":["def hostExecutor = imp.getImplementationFor( CPU.class )","def clExecutor = imp.getImplementationFor( OpenCLDevice.class )"]},

        {"kind":"then","text":"The variables containing the executor instances are not null.","code":["hostExecutor != null","clExecutor != null"]},

        {"kind":"where","text":"The variable \"imp\" is from a List of OperationType implementations of type \"Operator\".","code":{"imp":["Operator@4c10b75f[name=operator,support=[CPU,OpenCLDevice]]","Operator@94f75b6[name=operator,support=[CPU,OpenCLDevice]]","Operator@12a5592d[name=operator,support=[CPU,OpenCLDevice]]","Operator@69d23712[name=operator,support=[CPU,OpenCLDevice]]","Operator@23d530[name=operator,support=[CPU,OpenCLDevice]]"]}}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"Activation implementations have expected Executor instances.",
      "result":"PASS",
      "duration":"0",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"when","text":"Host- and CL- executor instance are being fetched...","code":["def hostExecutor = imp.getImplementationFor( CPU.class )","def clExecutor = imp.getImplementationFor( OpenCLDevice.class )"]},

        {"kind":"then","text":"The variables containing the executor instances are not null.","code":["hostExecutor != null","clExecutor != null"]},

        {"kind":"where","text":"The variable \"imp\" is from a List of OperationType implementations of type \"Operator\".","code":{"imp":["Activation@73f5fa22[name=activation,support=[CPU,OpenCLDevice]]","Activation@1be8135f[name=activation,support=[CPU,OpenCLDevice]]","Activation@76ead001[name=activation,support=[CPU,OpenCLDevice]]","Activation@3db96841[name=activation,support=[CPU,OpenCLDevice]]","Activation@53b4b27e[name=activation,support=[CPU,OpenCLDevice]]","Activation@4421890e[name=activation,support=[CPU,OpenCLDevice]]","Activation@2b87ebc7[name=activation,support=[CPU,OpenCLDevice]]","Activation@56c5f39b[name=activation,support=[CPU,OpenCLDevice]]","Activation@12c43805[name=activation,support=[CPU,OpenCLDevice]]","Activation@5586472c[name=activation,support=[CPU,OpenCLDevice]]","Activation@a64337d[name=activation,support=[CPU,OpenCLDevice]]","Activation@38bf4fda[name=activation,support=[CPU,OpenCLDevice]]","Activation@2ef40be8[name=activation,support=[CPU,OpenCLDevice]]","Activation@50c69604[name=activation,support=[CPU,OpenCLDevice]]","Activation@1bacc256[name=activation,support=[CPU,OpenCLDevice]]","Activation@34a6745[name=activation,support=[CPU,OpenCLDevice]]","Activation@a27075c[name=activation,support=[CPU,OpenCLDevice]]","Activation@5bae76bc[name=activation,support=[CPU,OpenCLDevice]]","Activation@1cadba67[name=activation,support=[CPU,OpenCLDevice]]","Activation@502b6918[name=activation,support=[CPU,OpenCLDevice]]","Activation@1db21d46[name=activation,support=[CPU,OpenCLDevice]]","Activation@2924e25a[name=activation,support=[CPU,OpenCLDevice]]","Activation@27ae1722[name=activation,support=[CPU,OpenCLDevice]]"]}}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"HostExecutors of Operator implementations behave as expected.",
      "result":"PASS",
      "duration":"0.050 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"Mock instances to simulate an ExecutionCall instance.","code":["var call = Mock( ExecutionCall )","var device = Mock( CPU )","var tensor = Mock( Tsr )","var unsafe = Mock(Tsr.Unsafe)","var ndConf = Mock(NDConfiguration)","var hostExecutor = imp.getImplementationFor( CPU.class )","var nativeExecutor = Mock( CPU.JVMExecutor )","var dataObj = Mock(Data)"]},

        {"kind":"when","text":"Host-executor instance is being called...","code":["hostExecutor.run( call )"]},

        {"kind":"then","text":"The mock objects are being called as expected.","code":["(0.._) * tensor.getUnsafe() >> unsafe","(1.._) * call.getDevice() >> device","1 * device.getExecutor() >> nativeExecutor","1 * nativeExecutor.threaded( _, _ )","(0.._) * call.inputs() >> new Tsr[]{ tensor, tensor, tensor }","(0.._) * call.input({it >= 0 && it <= 2}) >> tensor","(0.._) * call.input( Number.class, 0 ) >> tensor","(0.._) * call.input(0) >> tensor","(0.._) * call.input( Number.class, 1 ) >> tensor","(1.._) * tensor.size() >> 0","(0.._) * tensor.itemType >> Double","(0.._) * tensor.getDataAs(double[]) >> new double[0]","(0.._) * unsafe.data >> dataObj","(0.._) * dataObj.ref >> new double[0]","(0.._) * unsafe.getDataAs(double[]) >> new double[0]","(0.._) * unsafe.getDataForWriting(double[]) >> new double[0]","(1.._) * tensor.getNDConf() >> ndConf","(1.._) * ndConf.isSimple() >> false"]},

        {"kind":"where","text":"The variable \"imp\" is from a List of OperationType implementations of type \"Operator\".","code":{"imp":["Operator@4c10b75f[name=operator,support=[CPU,OpenCLDevice]]","Operator@94f75b6[name=operator,support=[CPU,OpenCLDevice]]","Operator@12a5592d[name=operator,support=[CPU,OpenCLDevice]]","Operator@69d23712[name=operator,support=[CPU,OpenCLDevice]]","Operator@23d530[name=operator,support=[CPU,OpenCLDevice]]"]}}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"CLExecutors of Operator implementations behave as expected.",
      "result":"PASS",
      "duration":"0.073 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"Mock instances to simulate an ExecutionCall instance.","code":["var call = Mock( ExecutionCall )","var device = Mock( OpenCLDevice )","var tensor = Mock( Tsr )","var clExecutor = imp.getImplementationFor( OpenCLDevice.class )","var kernel = Mock( KernelCaller )"]},

        {"kind":"when","text":"CL-executor instance is being called...","code":["clExecutor.run( call )"]},

        {"kind":"then","text":"The mock objects are being called as expected.","code":["(0.._) * call.arity() >> 3","(1.._) * call.input( Number.class, 0) >> tensor","(1.._) * tensor.size() >> 0","(1.._) * call.getDevice() >> device","1 * device.getKernel(call) >> kernel","(1.._) * kernel.passAllOf(_) >> kernel","(1.._) * kernel.pass(_) >> kernel","(1.._) * kernel.call(_)"]},

        {"kind":"where","text":"The variable \"imp\" is from a List of OperationType implementations of type \"Operator\".","code":{"imp":["Operator@4c10b75f[name=operator,support=[CPU,OpenCLDevice]]","Operator@94f75b6[name=operator,support=[CPU,OpenCLDevice]]","Operator@12a5592d[name=operator,support=[CPU,OpenCLDevice]]","Operator@69d23712[name=operator,support=[CPU,OpenCLDevice]]","Operator@23d530[name=operator,support=[CPU,OpenCLDevice]]"]}}
      ],
      "problems":{"dataValues":[], "errors":[]}
    }
  
  ],
  "generator":"https://github.com/renatoathaydes/spock-reports"
}