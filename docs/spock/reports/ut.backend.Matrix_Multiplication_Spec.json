{
  "className":"ut.backend.Matrix_Multiplication_Spec",
  "title":"Matrix Multiplication",
  "narrative":"The tensor API exposes a useful method for Matrix Multiplication.\n    This specification not only demonstrates how to use this method\n    but also shows how matrix multiplication work \n    for tensors with both row and column major layouts.\n    (typically, column major is faster)",
  "subjects":[],
  "statistics":{
    "runs":"2",
    "successRate":"100.0%",
    "failures":"0",
    "errors":"0",
    "skipped":"0",
    "duration":"0.023 seconds"
  },
  "headers":[],"tags":{},"see":[],
  "features":[ 
    {
      "id":"The \"matMul\" method allows us to perform matrix multiplication.",
      "result":"PASS",
      "duration":"0.001 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"We create 2 simple tensors with the shapes (1x7) and (7x8).","code":["var a = Tsr.of(type).withShape(1,7).andFill(1, 2, 3)","var b = Tsr.of(type).withShape(7,8).andFill(2, -4, -1)"]},

        {"kind":"when","text":"We perform matrix multiplication.","code":["var c = a.matMul(b)"]},

        {"kind":"then","text":"The result is a tensor with the shape (1x8).","code":["c.shape == [1, 8]","c.items == [-22, -10, -7, -22, -10, -7, -22, -10]"]},

        {"kind":"where","text":"We can use the following data types:","code":{"type":["Integer","Long","Double","Float"]}}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"The simple CPU matrix multiplication implementation works as expected.",
      "result":"PASS",
      "duration":"0.005 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":["\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        ","\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        ","\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        ","\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        ","\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        ","\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        ","\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        ","\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        ","\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        ","\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        ","\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        ","\n            Matrix multiplication is possible between matrices of various dimensions,\n            data types as well as data layouts!\n        "]
      },
      "blocks":[
        {"kind":"given","text":"We instantiate 2 matrices based on the data from the data table at the end of this method.","code":["Tsr<?> a = Tsr.of(type, [M,K] as int[], A)","Tsr<?> b = Tsr.of(type, [K,N] as int[], B)"]},

        {"kind":"and","text":"We create the data layout type based on the provided string...","code":["var dataLayout = layout == 'ROW' ? NDConfiguration.Layout.ROW_MAJOR : NDConfiguration.Layout.COLUMN_MAJOR"]},

        {"kind":"and","text":"After that we convert both matrices to the layout!","code":["a.mut.toLayout( dataLayout )","b.mut.toLayout( dataLayout )"]},

        {"kind":"expect","text":"This should of cause make report that they indeed have this new layout.","code":["a.NDConf.layout == dataLayout","b.NDConf.layout == dataLayout"]},

        {"kind":"when","text":"We now perform the matrix multiplication with the 2 matrix tensors...","code":["Tsr<?> c = a.matMul(b)"]},

        {"kind":"then","text":"The result will have the expected (M x N) shape.","code":["c.shape == [M,N]"]},

        {"kind":"and","text":"It should have the expected value array.","code":["c.items == expectedC"]},

        {"kind":"where","text":"We use the following scenario parameters:","code":{"layout":["'ROW'","'ROW'","'ROW'","'ROW'","'ROW'","'ROW'","'COL'","'COL'","'COL'","'COL'","'COL'","'COL'"],"type":["Double","Double","Double","Float","Float","Float","Double","Double","Double","Float","Float","Float"],"M":["2","1","2","2","1","2","2","1","2","2","1","2"],"K":["2","2","1","2","2","1","2","2","1","2","2","1"],"N":["2","1","2","2","1","2","2","1","2","2","1","2"],"A":["[4, 3, 2, 1] as double[]","[-2,1] as double[]","[-2,1] as double[]","[4,3,2,1] as float[]","[-2,1] as float[]","[-2,1] as float[]","[4, 3, 2, 1] as double[]","[-2,1] as double[]","[-2,1] as double[]","[4,3,2,1] as float[]","[-2,1] as float[]","[-2,1] as float[]"],"B":["[-0.5, 1.5, 1, -2] as double[]","[-1, -1.5] as double[]","[-1, -1.5] as double[]","[-0.5, 1.5, 1, -2] as float[]","[-1, -1.5] as float[]","[-1, -1.5] as float[]","[-0.5, 1.5, 1, -2] as double[]","[-1, -1.5] as double[]","[-1, -1.5] as double[]","[-0.5, 1.5, 1, -2] as float[]","[-1, -1.5] as float[]","[-1, -1.5] as float[]"],"expectedC":["[1, 0, 0, 1 ] as double[]","[ 0.5 ] as double[]","[ 2.0, 3.0, -1.0, -1.5 ] as double[]","[ 1, 0, 0, 1 ] as float[]","[ 0.5 ] as float[]","[ 2.0, 3.0, -1.0, -1.5 ] as float[]","[1, 0, 0, 1 ] as double[]","[ 0.5 ] as double[]","[ 2.0, 3.0, -1.0, -1.5 ] as double[]","[ 1, 0, 0, 1 ] as float[]","[ 0.5 ] as float[]","[ 2.0, 3.0, -1.0, -1.5 ] as float[]"]}}
      ],
      "problems":{"dataValues":[], "errors":[]}
    }
  
  ],
  "generator":"https://github.com/renatoathaydes/spock-reports"
}