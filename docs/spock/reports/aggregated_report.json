{"it.calculus.Calculus_Integration_Tests":{"executedFeatures":["Reshaping on 3D tensors works by instantiate a Function instance built from a String.","Tensor results of various Function instances return expected results.","The \"DimTrim\" operation works forward as well as backward!"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":5939},"title":"","narrative":""},"it.device.OpenCLDevice_Exception_Integration_Tests":{"executedFeatures":["Ad hoc compilation produces expected exceptions when duplication is found.","Ad hoc compilation produces expected exceptions.","Trying to restore a tensor which is not on a device raises exception."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":1000},"title":"","narrative":""},"it.ndim.Tensor_Slice_Reshape_Integration_Tests":{"executedFeatures":["A slice of a tensor changes as expected when reshaping it.","Reshaping a slice works as expected.","Two slices of one big tensor perform matrix multiplication flawless."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":96},"title":"","narrative":""},"it.tensors.Tensor_As_Container_Integration_Tests":{"executedFeatures":["More tensor operations translate to custom data type \"ComplexNumber\".","Plus operator on String tensors works element-wise.","Tensor operations translate to custom data type \"ComplexNumber\"."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":192},"title":"","narrative":""},"it.tensors.Tensor_Slicing_Integration_Tests":{"executedFeatures":["A tensor can be sliced by passing ranges in the form of lists (Groovy ranges).","A tensor can be sliced by passing ranges in the form of primitive arrays.","The \"at\" method and the \"from\" / \"to\" methods can be mixed when slicing a tensor.","The slice builder also supports slicing with custom step sizes.","When Slicing only one axis using the SliceBuilder API, the other axis will be sliced implicitly."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":5,"totalFeatures":5,"passed":5,"successRate":1.0,"time":130},"title":"","narrative":""},"st.Calculus_Stress_Test":{"executedFeatures":["Dot operation stress test runs error free and produces expected result","Stress test runs error free and produces expected result","The broadcast operation stress test runs error free and produces expected result"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":574},"title":"","narrative":""},"ut.backend.Backend_Algorithm_Implementation_Tests":{"executedFeatures":["Activation implementations have expected Executor instances.","CLExecutors of Operator implementations behave as expected.","HostExecutors of Operator implementations behave as expected.","Operator implementations have expected Executor instances."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":4,"totalFeatures":4,"passed":4,"successRate":1.0,"time":2711},"title":"","narrative":""},"ut.calculus.OperationContext_Unit_Tests":{"executedFeatures":["OperationContext instances can be created by cloning from Singleton instance.","OperationContext instances return Runner instances for easy visiting with return values.","OperationContext instances return Runner instances for easy visiting."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":76},"title":"","narrative":""},"ut.dtype.DataType_Unit_Tests":{"executedFeatures":["DataType multiton instances behave as expected."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"totalFeatures":1,"passed":1,"successRate":1.0,"time":104},"title":"","narrative":""},"ut.optimization.ADAM_Tests":{"executedFeatures":["ADAM optimizes according to expected inputs","Equations \"I[0]*I[1]+(1-I[2])*I[3]\" and \"(1-I[0])*I[1]\" used within ADAM return expected results.","Equations used by ADAM return expected result."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":266},"title":"","narrative":""},"ut.tensors.Tensor_Device_Mock_Unit_Tests":{"executedFeatures":["Tensors try to migrate themselves to a device that is being added to them as component.","Tensors try to remove themselves from their device when \"setIsOutsourced(false)\" is being called.","The device of a tensor can be accessed via the \"device()\" method.","When creating slices of tensors then this should trigger a \"parent - child\" relation noticeable to the device!"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":4,"totalFeatures":4,"passed":4,"successRate":1.0,"time":24},"title":"","narrative":""},"ut.tensors.Tensor_State_Unit_Test":{"executedFeatures":["Newly instantiated and unmodified scalar tensor has expected state.","Newly instantiated and unmodified vector tensor has expected state.","Tensor created from shape and datatype has expected state.","Tensors as String can be formatted depending on shape.","Tensors as String can be formatted on an entry based level."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":5,"totalFeatures":5,"passed":5,"successRate":1.0,"time":168},"title":"","narrative":""},"ut.utility.DataConverter_Tests":{"executedFeatures":["The DataConverter can convert the given array data."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"totalFeatures":1,"passed":1,"successRate":1.0,"time":28},"title":"","narrative":""},"ut.utility.FileHead_Unit_Tests":{"executedFeatures":["Fully labeled tenors will be stored with their labels included when saving them as CSV.","Partially labeled tenors will be stored with their labels included when saving them as CSV.","Test reading IDX file format.","Test writing IDX file format.","The FileDevice component \"CSVHead\" can read CSV file formats and load them as tensors.","The FileDevice component \"JPEGHead\" can read JPG file formats and load them as tensors."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":6,"totalFeatures":6,"passed":6,"successRate":1.0,"time":2747},"title":"","narrative":""},"it.autograd.Autograd_Explained":{"executedFeatures":["Simple automatic differentiation and propagation."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"totalFeatures":1,"passed":1,"successRate":1.0,"time":6070},"title":"","narrative":""},"it.autograd.Autograd_NN_Integration":{"executedFeatures":["Autograd works in a simple feed forward neural network."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"totalFeatures":1,"passed":1,"successRate":1.0,"time":416},"title":"","narrative":""},"it.device.OpenCLDevice_Integration_Tests":{"executedFeatures":["Ad hoc compilation produces executable kernel.","Ad hoc compilation works for matrix multiplication.","An OpenCLDevice will throw an exception when trying to add a tensor whose \"data parent\" is not outsourced.","The \"getData()\" method of an outsourced tensor will return null when outsourced.","The \"getValue()\" method of an outsourced tensor will return the expected array type."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":5,"totalFeatures":5,"passed":5,"successRate":1.0,"time":334},"title":"","narrative":""},"it.tensors.Tensor_Indexing_Integration_Tests":{"executedFeatures":["Convolution using legacy indexing works as expected.","Indexing modes produce expected results when doing convolution.","Test convolution with legacy indexing."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":83},"title":"","narrative":""},"it.tensors.Tensor_Version_Integration_Tests":{"executedFeatures":["Inline operations cause illegal state exceptions.","Inline operations causes version incrementation.","Non-inline operations causes version incrementation."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":1415},"title":"","narrative":""},"st.Benchmark_System_Test":{"executedFeatures":["Tensor can be constructed by passing List instances.","Test benchmark script and simple tensor constructor."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":6592},"title":"","narrative":""},"st.Cross_Device_Sliced_Tensor_System_Test":{"executedFeatures":["Cross device sliced tensor integration test runs without errors.","Slices can be created using the SliceBuilder."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":445},"title":"","narrative":""},"ut.autograd.GraphNode_Instantiation_Unit_Tests":{"executedFeatures":["GraphNode instantiation works as expected when the context argument is a GraphLock.","GraphNode instantiation works as expected when the context argument is an ExecutionCall."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":2385},"title":"","narrative":""},"ut.backend.Backend_Extension_Unit_Tests":{"executedFeatures":["Lambda properties of mock implementation interact with FunctionNode (AbstractFunction) as expected.","Mock operation interacts with FunctionNode (AbstractFunction) instance as expected."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":316},"title":"","narrative":""},"ut.device.HostCPU_Unit_Tests":{"executedFeatures":["thread pool executes given workload in parallel"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"totalFeatures":1,"passed":1,"successRate":1.0,"time":314},"title":"","narrative":""},"ut.optimization.Optimizer_Tests":{"executedFeatures":[],"ignoredFeatures":["Dot product operation based weight feed forwarded calculation is being optimized"],"stats":{"failures":0,"errors":0,"skipped":1,"totalRuns":0,"totalFeatures":1,"passed":0,"successRate":1.0,"time":0},"title":"","narrative":""},"ut.tensors.Tensor_Building_Unit_Test":{"executedFeatures":["Initialization lambda based tensors can be created fluently.","Range based tensors can be created fluently.","Scalars can be created fluently.","Tensors can be created fluently.","Value based tensors can be created fluently.","Vectors can be created fluently."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":6,"totalFeatures":6,"passed":6,"successRate":1.0,"time":186},"title":"","narrative":""},"ut.tensors.Tensor_Exception_Unit_Tests":{"executedFeatures":["Out of dimension bound causes descriptive exception!","Passing an invalid key object into the \"getAt\" method causes a descriptive exception.","Passing an invalid object into Tsr constructor causes descriptive exception.","Trying to inject an empty tensor into another causes fitting exception."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":4,"totalFeatures":4,"passed":4,"successRate":1.0,"time":24},"title":"","narrative":""},"it.autograd.JITProp_Autograd_Tensor_Integration_Tests":{"executedFeatures":["Gradient auto-apply kicks in when used AD uses JIT prop","Test JIT propagation variant one.","Test JIT propagation variant two.","Test autograd without JIT and auto apply.","Test in-differential and JIT with auto apply","Test no JIT prop when forward AD","Test no preemptive gradient apply when not requested and auto apply and JIT_prop","Test pending error optimization"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":8,"totalFeatures":8,"passed":8,"successRate":1.0,"time":6487},"title":"","narrative":""},"it.calculus.Calculus_Extension_Integration_Tests":{"executedFeatures":["GEMM matrix multiplication reference implementation can be set as custom OperationType and works as expected.","Test context mock for opencl reference implementations.","Tile parsing for kernel parameter calculation yields expected tile dimensions."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":388},"title":"","narrative":""},"it.device.CLFunctionCompiler_Integration_Tests":{"executedFeatures":["The OpenCLDevice produces a working optimized Function (internally using the CLFunctionCompiler)."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"totalFeatures":1,"passed":1,"successRate":1.0,"time":152},"title":"","narrative":""},"it.ndim.Tensor_NDConfiguration_Integration_Tests":{"executedFeatures":["NDConfiguration instances of tensors have expected state and behaviour.","NDConfiguration instances of tensors have expected state."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":80},"title":"","narrative":""},"it.tensors.Tensor_Operation_Integration_Tests":{"executedFeatures":["A new transposed version of a given tensor will be returned by the \"T()\" method.","Auto reshape and broadcasting occurs.","Manual convolution produces expected result.","New method \"asFunction\" of String added at runtime is callable by groovy and also works.","New operator methods added to \"SDK-types\" at runtime are callable by groovy and also work.","Operators \"+,*,**,^\" produce expected results with gradients which can be accessed via a \"Ig[0]\" Function instance","Overloaded operation methods on tensors produce expected results when called.","Simple slice addition produces expected result.","Test \"x-mul\" operator produces expected results. (Not on device)","The \"dot\" operation reshapes and produces valid \"x\" operation result.","Very simple manual convolution produces expected result."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":11,"totalFeatures":11,"passed":11,"successRate":1.0,"time":9266},"title":"","narrative":""},"ut.backend.Backend_Algorithm_AD_Unit_Tests":{"executedFeatures":["Activation implementations behave as expected.","Broadcast implementations behave as expected.","Convolution implementations behave as expected.","Operator implementations behave as expected."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":4,"totalFeatures":4,"passed":4,"successRate":1.0,"time":2397},"title":"","narrative":""},"ut.calculus.Calculus_Scalar_Unit_Tests":{"executedFeatures":["Function \"(I[0]+1/I[0])^-I[0]\" instance return expected scalar result.","Function \"(cos(I[0]*5)/5+I[0])*(1+sin(I[0])/2)\" instance return expected scalars.","Function \"1/I[0]\" instance returns expected scalar results.","Function \"I[0]+1/I[0]\" instance returns expected scalar results.","Test scalar results of Function \"sumjs((cos(I[j]*5)/5+I[j])*(1+sin(I[j])/2))\" instance.","Test scalar results of various Function instances."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":6,"totalFeatures":6,"passed":6,"successRate":1.0,"time":128},"title":"","narrative":""},"ut.device.CLFunctionCompiler_Unit_Tests":{"executedFeatures":["The CLFunctionCompiler produces an operation which properly integrates to the backend.","The CLFunctionCompiler produces the expected \"ad hoc\" kernel."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":488},"title":"","narrative":""},"ut.device.Cross_Device_Type_Unit_Tests":{"executedFeatures":["Devices store tensors which can also be restored.","Execution calls containing null arguments will cause an exception to be thrown in device instances.","Passing a numeric array to a tensor should modify its content!","Querying for Device implementations works as expected.","Tensor data can be fetched from device if the tensor is stored on it..."],"ignoredFeatures":["Devices cannot store slices which whose parents are not already stored.","Devices store slices which can also be restored."],"stats":{"failures":0,"errors":0,"skipped":2,"totalRuns":5,"totalFeatures":7,"passed":5,"successRate":1.0,"time":139},"title":"","narrative":""},"ut.device.FileDevice_Unit_Tests":{"executedFeatures":["A file device stores tensors in idx files by default.","A file device stores tensors in various file formats.","The file device can load known files in a directory."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":155},"title":"","narrative":""},"ut.device.OpenCL_Unit_Test":{"executedFeatures":["An OpenCLDevice will throw an exception when trying to add a tensor whose \"data parent\" is not outsourced.","First found OpenCLDevice will have realistic numeric properties.","First found OpenCLDevice will have realistic properties inside summary query.","First found OpenCLDevice will have realistic text properties."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":4,"totalFeatures":4,"passed":4,"successRate":1.0,"time":87},"title":"","narrative":""},"ut.dtype.NumericType_Unit_Tests":{"executedFeatures":["Conversion goes both ways and produces expected numeric values.","NumericType conversion to holder types yields expected results.","NumericType implementations behave as expected.","NumericType implementations return their expected properties."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":4,"totalFeatures":4,"passed":4,"successRate":1.0,"time":193},"title":"","narrative":""},"ut.neureka.Neureka_Unit_Tests":{"executedFeatures":["Every Thread instance has their own Neureka instance.","Neureka class instance has expected behaviour."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":263},"title":"","narrative":""},"ut.tensors.Tensor_Gradient_Unit_Test":{"executedFeatures":["Gradient of tensor is being applies regardless of the tensor requiring gradient or not","Tensors can have gradients but not require them.","Tensors that have gradients but do not require them still print them."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":8},"title":"","narrative":""},"ut.utility.Cleaner_Testing":{"executedFeatures":["CustomCleaner works"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"totalFeatures":1,"passed":1,"successRate":1.0,"time":1282},"title":"","narrative":""},"ut.utility.ListReader_Exception_Tests":{"executedFeatures":["The ListReader will detect inconsistent degrees of nesting in the provided data.","The ListReader will detect inconsistent types in the provided data."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":10},"title":"","narrative":""},"ut.utility.ListReader_Tests":{"executedFeatures":["The ListReader can interpret nested lists into a shape list and value list.","The ListReader can interpret nested lists resembling a 3D tensor into a shape list and value list.","The ListReader can interpret nested lists resembling a matrix into a shape list and value list."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":12},"title":"","narrative":""},"it.autograd.Autograd_Flags_Explained":{"executedFeatures":["Advanced backpropagation on all AD-Modes "],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":8,"totalFeatures":1,"passed":8,"successRate":1.0,"time":6929},"title":"","narrative":""},"it.autograd.Autograd_Tensor_Integration_Tests":{"executedFeatures":["A tensor used as derivative within a computation graph will throw exception when trying to deleting it.","Second-Test \"x-mul\" autograd behaviour. (Not on device)","Test basic autograd behaviour. (Not on device)"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":136},"title":"","narrative":""},"it.calculus.AD_And_Computation_Graph_Integration_Tests":{"executedFeatures":["Payloads and derivatives are null.","Reverse indexing with AD produces expected computation graph."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":528},"title":"","narrative":""},"it.framing.Tensor_Framing_Integration_Tests":{"executedFeatures":["Added labels to tensors are accessible through the \"index()\" method.","Rank 2 tensors can be labeled and their labels can be used to extract slices / subsets of tensors.","Rank 3 tensors can be labeled and their labels can be used to extract slices / subsets of tensors."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":2118},"title":"","narrative":""},"st.Broad_System_Test":{"executedFeatures":["Test integration broadly."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"totalFeatures":1,"passed":1,"successRate":1.0,"time":244},"title":"","narrative":""},"st.Cross_Device_System_Tests":{"executedFeatures":["Test cross device integration with default and legacy indexing.","Test simple NN implementation with manual backprop"],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":15843},"title":"","narrative":""},"ut.autograd.GraphNode_Instantiation_Exception_Unit_Tests":{"executedFeatures":["GraphNode instantiation throws exception because GraphNode instances of input tensors do not share the same GraphLock.","GraphNode instantiation throws exception because tensors of ExecutionCall do not return GraphNode instances.","GraphNode throws an exception when trying to execute an inline operation on inputs with active autograd.","GraphNode throws exception when payload is null.","GraphNode throws exception when trying to instantiate with Function argument being null.","GraphNode throws exception when trying to instantiate with the wrong context."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":6,"totalFeatures":6,"passed":6,"successRate":1.0,"time":1008},"title":"","narrative":""},"ut.autograd.GraphNode_Tensor_Exception_Unit_Tests":{"executedFeatures":["A tensor cannot be deleted if it is part of a graph and the tensor is used as derivative."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":1,"totalFeatures":1,"passed":1,"successRate":1.0,"time":16},"title":"","narrative":""},"ut.calculus.Calculus_Parsing_Unit_Tests":{"executedFeatures":["Functions can derive themselves according to the provided index of the input which ought to be derived.","Parsed equations throw expected error messages.","Test parsed equations when building Function instances."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":3,"totalFeatures":3,"passed":3,"successRate":1.0,"time":68},"title":"","narrative":""},"ut.tensors.exceptions.Tensor_Delete_Exception_Unit_Tests":{"executedFeatures":["A deleted tensor will tell you that it has been deleted.","A deleted tensor will throw an exception when accessing its configuration.","A deleted tensor will throw an exception when accessing its data type.","A deleted tensor will throw an exception when accessing its data.","A deleted tensor will throw an exception when modifying its data type.","A deleted tensor will throw an exception when trying to modify its data.","A deleted tensor will throw an exception when trying to set its configuration."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":7,"totalFeatures":7,"passed":7,"successRate":1.0,"time":20},"title":"","narrative":""},"ut.tensors.Tensor_Generics_Unit_Tests":{"executedFeatures":["Anonymous tensor instance has the default datatype class as defined in Neureka settings.","String tensor instance discovers expected class."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":2,"totalFeatures":2,"passed":2,"successRate":1.0,"time":5},"title":"","narrative":""},"ut.tensors.Tensor_IO_Unit_Tests":{"executedFeatures":["A tensor produced by a function has expected properties.","A tensor produced by the static \"Tsr.Create.newRandom(shape)\" has expected \"random\" value.","Adding OpenCL device to tensor makes tensor be \"outsourced\" and contain the Device instance as component.","Indexing after reshaping works as expected.","Passing String seed to tensor produces expected values.","Smart tensor constructors yield expected results.","Tensor initialization lambdas produce expected tensors.","Tensor value type can not be changed by passing float or double arrays to it.","Tensor values can be manipulated via static method calls within the \"Tsr.IO\" class.","Tensors can be instantiated with String seed.","Tensors value type can be changed by calling \"to64()\" and \"to32()\"."],"ignoredFeatures":[],"stats":{"failures":0,"errors":0,"skipped":0,"totalRuns":11,"totalFeatures":11,"passed":11,"successRate":1.0,"time":60},"title":"","narrative":""}}