{
  "className":"ut.backend.core.Randomization_Spec",
  "title":"",
  "narrative":"",
  "subjects":["neureka.backend.main.operations.other.Randomization"],
  "statistics":{
    "runs":"3",
    "successRate":"100.0%",
    "failures":"0",
    "errors":"0",
    "skipped":"0",
    "duration":"0.125 seconds"
  },
  "headers":[],"tags":{},"see":[],
  "features":[ 
    {
      "id":"We can make slices of tensors random.",
      "result":"PASS",
      "duration":"0.064 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"","code":["var r = Function.of(\"random(I[0])\")"]},

        {"kind":"and","text":"","code":["var t = Tsr.of(values)[1..<(values.length-1)]"]},

        {"kind":"when","text":"","code":["r.with(Arg.Seed.of(73)).call(t)"]},

        {"kind":"then","text":"","code":["t.items == expected"]},

        {"kind":"where","text":"","code":{"values":["[0, 1682321148, -442781155, 1450818241, 0]","[0, -4, 29, -63, 0]","[0, 12028, -19939, -17727, 0]","[0, 7225514313620035527, -1901730580994377074, 6231216898071663791, 0]","[0.0, 1.0493218, 0.96351904, 1.3803823, 0.0]","[0.0, 1.0493217368660326, 0.9635190511757348, 1.3803823236577413, 0.0]","\u0000\u0000\u0000\u0000\u0000","[false, false, true, false, false]"],"expected":["[1682321148, -442781155, 1450818241]","[-4, 29, -63]","[12028, -19939, -17727]","[7225514313620035527, -1901730580994377074, 6231216898071663791]","[1.0493218, 0.96351904, 1.3803823]","[1.0493217368660326, 0.9635190511757348, 1.3803823236577413]","⻼눝뫁","[false, true, false]"]}}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"Randomization is in essence the same algorithm as JDKs \"Random\".",
      "result":"PASS",
      "duration":"0.016 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"","code":["var random = new Random()","var seed = Randomization.initialScramble(666_42_666)","var r2 = [0,0] as double[]"]},

        {"kind":"when","text":"","code":["random.seed = 666_42_666"]},

        {"kind":"and","text":"","code":["var r1 = random.nextGaussian()","Randomization.gaussianFrom(seed, r2)"]},

        {"kind":"then","text":"","code":["r2[0] == r1","r2[1] == random.nextGaussian()"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    },
  
    {
      "id":"The Randomization class can fill various types of arrays with pseudo random numbers.",
      "result":"PASS",
      "duration":"0.015 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"expect","text":"","code":["Randomization.fillRandomly( new float[2], 42 ) == [-0.48528543, -1.4547276] as float[]","Randomization.fillRandomly( new float[2], \"I'm a seed!\" ) == [-0.36105144, 0.09591457] as float[]"]},

        {"kind":"and","text":"","code":["Randomization.fillRandomly( new double[2], 42 ) == [-0.485285426832534, -1.454727674701364] as double[]","Randomization.fillRandomly( new double[2], \"I'm a seed!\" ) == [-0.36105142873347185, 0.09591457295459412] as double[]"]},

        {"kind":"and","text":"","code":["Randomization.fillRandomly( new byte[2], 42 ) == [25, -68] as byte[]","Randomization.fillRandomly( new byte[2], \"I'm a seed!\" ) == [-104, 26] as byte[]"]},

        {"kind":"and","text":"","code":["Randomization.fillRandomly( new int[2], 42 ) == [1335864601, 1769984444] as int[]","Randomization.fillRandomly( new int[2], \"I'm a seed!\" ) == [-933496424, -1805080294] as int[]"]},

        {"kind":"and","text":"","code":["Randomization.fillRandomly( new long[2], 42 ) == [5737494774602678383, 7602025302221901325] as long[]","Randomization.fillRandomly( new long[2], \"I'm a seed!\" ) == [-4009336612466399804, -7752760828057244539] as long[]"]},

        {"kind":"and","text":"","code":["Randomization.fillRandomly( new short[2], 42 ) == [-21223, -11844] as short[]","Randomization.fillRandomly( new short[2], \"I'm a seed!\" ) == [-1640, -22246] as short[]"]},

        {"kind":"and","text":"","code":["Randomization.fillRandomly( new char[2], 42 ) == ['ê´™', 'í†¼'] as char[]","Randomization.fillRandomly( new char[2], \"I'm a seed!\" ) == ['ï¦˜', 'ê¤š'] as char[]"]},

        {"kind":"and","text":"","code":["Randomization.fillRandomly( new boolean[2], 42 ) == [false, false] as boolean[]","Randomization.fillRandomly( new boolean[2], \"I'm a seed!\" ) == [true, true] as boolean[]"]}
      ],
      "problems":{"dataValues":[], "errors":[]}
    }
  
  ],
  "generator":"https://github.com/renatoathaydes/spock-reports"
}